import{r as registerInstance,h,g as getElement}from"./index-fd4790f6.js";import{a as apiFetch}from"./fetch-34712ac6.js";import{o as onFirstVisible}from"./lazy-64c2bf3b.js";import{a as addQueryArgs}from"./add-query-args-f4c5962b.js";const scSubscriptionPaymentMethodCss=":host{display:block}",ScSubscriptionPaymentMethod=class{constructor(t){registerInstance(this,t)}renderLoading(){return h("sc-card",{noPadding:!0},h("sc-stacked-list",null,h("sc-stacked-list-row",{style:{"--columns":"4"},"mobile-size":500},[...Array(4)].map((()=>h("sc-skeleton",{style:{width:"100px",display:"inline-block"}}))))))}renderEmpty(){return h("slot",{name:"empty"},h("sc-card",null,h("sc-empty",{icon:"credit-card"},wp.i18n.__("You do not have any payment methods.","surecart"))))}componentWillLoad(){onFirstVisible(this.el,(()=>{this.getPaymentMethods()}))}async getPaymentMethods(){var t,e,i,s;if(null===(t=this.paymentMethods)||void 0===t?void 0:t.length)return;const o=(null===(i=null===(e=this.subscription)||void 0===e?void 0:e.customer)||void 0===i?void 0:i.id)||(null===(s=this.subscription)||void 0===s?void 0:s.customer);if(o)try{this.loading=!0,this.paymentMethods=await this.fetchMethods(o)}catch(t){this.error=(null==t?void 0:t.messsage)||wp.i18n.__("Something went wrong","surecart"),console.error(this.error)}finally{this.loading=!1}}async fetchMethods(t){var e;return await apiFetch({path:addQueryArgs("surecart/v1/payment_methods",{expand:["card","customer","billing_agreement","paypal_account","payment_instrument","bank_account"],customer_ids:[t],reusable:!0,live_mode:null===(e=this.subscription)||void 0===e?void 0:e.live_mode})})}async deleteMethod(t){if(confirm(wp.i18n.__("Are you sure you want to remove this payment method?","surecart")))try{this.busy=!0,await apiFetch({path:`surecart/v1/payment_methods/${null==t?void 0:t.id}/detach`,method:"PATCH"}),this.paymentMethods=this.paymentMethods.filter((e=>e.id!==t.id))}catch(t){this.error=(null==t?void 0:t.messsage)||wp.i18n.__("Something went wrong","surecart"),console.error(this.error)}finally{this.busy=!1}}async updateMethod(t){var e,i,s,o;const{payment_method:n}=await t.target.getFormJson();if(n!==((null===(i=null===(e=this.subscription)||void 0===e?void 0:e.payment_method)||void 0===i?void 0:i.id)||(null===(s=this.subscription)||void 0===s?void 0:s.payment_method)))try{this.busy=!0,this.subscription=await apiFetch({path:`surecart/v1/subscriptions/${null===(o=this.subscription)||void 0===o?void 0:o.id}`,method:"PATCH",data:{payment_method:n}})}catch(t){this.error=(null==t?void 0:t.messsage)||wp.i18n.__("Something went wrong","surecart"),console.error(this.error)}finally{this.busy=!1}}renderContent(){var t,e,i;return this.loading?this.renderLoading():(null===(t=this.paymentMethods)||void 0===t?void 0:t.length)?h("sc-form",{onScSubmit:t=>this.updateMethod(t)},h("sc-choices",null,this.renderList()),(null===(e=this.paymentMethods)||void 0===e?void 0:e.length)>1?h("sc-button",{type:"primary",submit:!0,full:!0,size:"large",busy:this.busy,disabled:this.busy},wp.i18n.__("Update Payment Method","surecart")):h("sc-button",{type:"link",full:!0,href:addQueryArgs(window.location.href,{action:"create",model:"payment_method",...!1===(null===(i=this.subscription)||void 0===i?void 0:i.live_mode)?{live_mode:!1}:{},success_url:window.location.href})},h("sc-icon",{name:"plus",slot:"prefix"}),wp.i18n.__("Add New","surecart"))):this.renderEmpty()}renderList(){return this.paymentMethods.map((t=>{var e,i,s;const o=(null===(i=null===(e=this.subscription)||void 0===e?void 0:e.payment_method)||void 0===i?void 0:i.id)||(null===(s=this.subscription)||void 0===s?void 0:s.payment_method),{id:n,card:r,live_mode:a,paypal_account:d}=t;return h("sc-choice",{checked:o===n,name:"payment_method",value:n,required:!0},h("sc-flex",{justifyContent:"flex-start","align-items":"center"},h("sc-payment-method",{paymentMethod:t})," ",!a&&h("sc-tag",{type:"warning",size:"small"},wp.i18n.__("Test","surecart"))),h("div",{slot:"description"},!!(null==r?void 0:r.exp_month)&&h("span",null,
/** Translators: Credit Card Expires (Exp. 11/27) */
wp.i18n.__("Exp.","surecart"),null==r?void 0:r.exp_month,"/",null==r?void 0:r.exp_year),!!d&&(null==d?void 0:d.email)),o===n&&h("sc-tag",{type:"info",slot:"price"},wp.i18n.__("Current Payment Method","surecart")))}))}render(){var t,e;return h("sc-dashboard-module",{heading:this.heading||wp.i18n.__("Update Payment Method","surecart"),class:"subscription",error:this.error},(null===(t=this.paymentMethods)||void 0===t?void 0:t.length)>1&&h("sc-button",{slot:"end",type:"link",href:addQueryArgs(window.location.href,{action:"create",model:"payment_method",...!1===(null===(e=this.subscription)||void 0===e?void 0:e.live_mode)?{live_mode:!1}:{},success_url:window.location.href})},h("sc-icon",{name:"plus",slot:"prefix"}),wp.i18n.__("Add New","surecart")),this.renderContent(),this.busy&&h("sc-block-ui",{spinner:!0}))}get el(){return getElement(this)}};ScSubscriptionPaymentMethod.style=":host{display:block}";export{ScSubscriptionPaymentMethod as sc_subscription_payment_method};
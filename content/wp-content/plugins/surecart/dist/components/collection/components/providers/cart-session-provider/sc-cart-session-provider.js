import{Component,Element,Event,h,Listen,Prop,State,Watch}from"@stencil/core";import{updateCheckout}from"../../../services/session";export class ScCartSessionProvider{handleSessionUpdate(e){this.scUpdateOrderState.emit(e)}handleUpdateSession(e){const{data:t,options:s}=e.detail;(null==s?void 0:s.silent)?this.update(t):this.loadUpdate(t)}async handleCouponApply(e){const t=e.detail;this.scError.emit({}),this.loadUpdate({discount:{...t?{promotion_code:t}:{}}})}handleErrorResponse(e){"readonly"===(null==e?void 0:e.code)&&this.scUpdateOrderState.emit(null),"rest_cookie_invalid_nonce"!==(null==e?void 0:e.code)?((null==e?void 0:e.message)&&this.scError.emit(e),"http_request_failed"===(null==e?void 0:e.code)&&this.scError.emit({message:"Something went wrong. Please reload the page and try again."}),this.scSetState.emit("idle")):this.scSetState.emit("idle")}async fetch(e={}){this.loadUpdate({status:"draft",...e})}async update(e={},t={}){var s;try{this.session=await updateCheckout({id:null===(s=this.order)||void 0===s?void 0:s.id,data:{...e},query:{...t}})}catch(e){throw console.error(e),e}}async loadUpdate(e={}){try{this.scSetState.emit("busy"),await this.update(e),this.scSetState.emit("idle")}catch(e){this.handleErrorResponse(e)}}render(){return h("sc-line-items-provider",{order:this.order,onScUpdateLineItems:e=>this.loadUpdate({line_items:e.detail})},h("slot",null))}static get is(){return"sc-cart-session-provider"}static get encapsulation(){return"shadow"}static get properties(){return{order:{type:"unknown",mutable:!1,complexType:{original:"Checkout",resolved:"Checkout",references:{Checkout:{location:"import",path:"../../../types"}}},required:!1,optional:!1,docs:{tags:[],text:"Order Object"}}}}static get states(){return{session:{}}}static get events(){return[{method:"scUpdateOrderState",name:"scUpdateOrderState",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Update line items event"},complexType:{original:"Checkout",resolved:"Checkout",references:{Checkout:{location:"import",path:"../../../types"}}}},{method:"scError",name:"scError",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Error event"},complexType:{original:"{ message: string; code?: string; data?: any; additional_errors?: any } | {}",resolved:"{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",references:{}}},{method:"scSetState",name:"scSetState",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Set the state"},complexType:{original:"'loading' | 'busy' | 'navigating' | 'idle'",resolved:'"busy" | "idle" | "loading" | "navigating"',references:{}}}]}static get elementRef(){return"el"}static get watchers(){return[{propName:"session",methodName:"handleSessionUpdate"}]}static get listeners(){return[{name:"scUpdateOrder",method:"handleUpdateSession",target:void 0,capture:!1,passive:!1},{name:"scApplyCoupon",method:"handleCouponApply",target:void 0,capture:!1,passive:!1}]}}
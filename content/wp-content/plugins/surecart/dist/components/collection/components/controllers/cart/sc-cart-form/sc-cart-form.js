import{Component,h,Prop,State}from"@stencil/core";import{__}from"@wordpress/i18n";import{Universe}from"stencil-wormhole";import{convertLineItemsToLineItemData}from"../../../../functions/line-items";import{createOrUpdateCheckout}from"../../../../services/session";import{getOrder,setOrder}from"@store/checkouts";import uiStore from"@store/ui";const query={expand:["line_items","line_item.price","price.product","customer","customer.shipping_address","payment_intent","discount","discount.promotion","discount.coupon","shipping_address","tax_identifier"]};export class ScCartForm{constructor(){this.quantity=1,this.mode="live"}getLineItem(){var e,t;const r=this.getOrder(),i=((null===(e=null==r?void 0:r.line_items)||void 0===e?void 0:e.data)||[]).find((e=>{var t;return(null===(t=e.price)||void 0===t?void 0:t.id)===this.priceId}));return!!(null==i?void 0:i.id)&&{id:null==i?void 0:i.id,price_id:null===(t=null==i?void 0:i.price)||void 0===t?void 0:t.id,quantity:null==i?void 0:i.quantity}}getOrder(){return getOrder(null==this?void 0:this.formId,this.mode)}async addToCart(){const{price:e}=await this.form.getFormJson();try{this.busy=!0;const t=await this.addOrUpdateLineItem({...e?{ad_hoc_amount:parseInt(e)||null}:{}});setOrder(t,this.formId),uiStore.set("cart",{...uiStore.state.cart,open:!0})}catch(e){console.error(e),this.error=(null==e?void 0:e.message)||__("Something went wrong","surecart")}finally{this.busy=!1}}async addOrUpdateLineItem(e={}){var t,r;let i=this.getLineItem(),o=convertLineItemsToLineItemData((null===(t=this.getOrder())||void 0===t?void 0:t.line_items)||[]);return await createOrUpdateCheckout({id:null===(r=this.getOrder())||void 0===r?void 0:r.id,data:{live_mode:"live"===this.mode,line_items:[...(o||[]).map((t=>this.priceId===(null==t?void 0:t.price_id)?{...t,...(null==e?void 0:e.ad_hoc_amount)?{ad_hoc_amount:null==e?void 0:e.ad_hoc_amount}:{},quantity:(null==t?void 0:t.ad_hoc_amount)?1:(null==t?void 0:t.quantity)+1}:t)),...i?[]:[{price_id:this.priceId,...(null==e?void 0:e.ad_hoc_amount)?{ad_hoc_amount:null==e?void 0:e.ad_hoc_amount}:{},quantity:1}]]},query:{...query,form_id:this.formId}})}componentWillLoad(){Universe.create(this,this.state())}state(){return{busy:this.busy,error:this.error,order:this.getOrder()}}render(){return h("sc-form",{ref:e=>this.form=e,onScSubmit:()=>{this.addToCart()}},this.error&&h("sc-alert",{open:!!this.error,type:"danger"},h("span",{slot:"title"},__("Error","surecart")),this.error),h(Universe.Provider,{state:this.state()},h("slot",null)))}static get is(){return"sc-cart-form"}static get styles(){return"sc-cart-form { display: inline-block }"}static get properties(){return{quantity:{type:"number",mutable:!0,complexType:{original:"number",resolved:"number",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The quantity"},attribute:"quantity",reflect:!1,defaultValue:"1"},priceId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The price id to add."},attribute:"price-id",reflect:!1},mode:{type:"string",mutable:!1,complexType:{original:"'test' | 'live'",resolved:'"live" | "test"',references:{}},required:!1,optional:!1,docs:{tags:[],text:"Are we in test or live mode."},attribute:"mode",reflect:!1,defaultValue:"'live'"},formId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"The form id to use for the cart."},attribute:"form-id",reflect:!0}}}static get states(){return{order:{},busy:{},error:{}}}}
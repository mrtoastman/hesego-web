import{r as registerInstance,c as createEvent,h,F as Fragment,g as getElement}from"./index-fd4790f6.js";import{o as openWormhole}from"./consumer-b5087188.js";import{g as getLineItemByPriceId}from"./index-1ef9aa85.js";const scPriceChoicesCss="sc-price-choices{display:block;position:relative}sc-block-ui{z-index:9}",ScPriceChoices=class{constructor(e){registerInstance(this,e),this.scRemoveLineItem=createEvent(this,"scRemoveLineItem",7),this.scUpdateLineItem=createEvent(this,"scUpdateLineItem",7),this.columns=1,this.required=!0}handleChange(){this.el.querySelectorAll("sc-price-choice").forEach((e=>{var i;const t=e.querySelector("sc-choice")||e.querySelector("sc-choice-container");if(null==t?void 0:t.checked){const c=getLineItemByPriceId(null===(i=this.order)||void 0===i?void 0:i.line_items,t.value);this.scUpdateLineItem.emit({price_id:e.priceId,quantity:(null==c?void 0:c.quantity)||(null==e?void 0:e.quantity)||1})}else this.scRemoveLineItem.emit({price_id:e.priceId,quantity:e.quantity})}))}render(){return h(Fragment,null,h("sc-choices",{label:this.label,required:this.required,class:"loaded price-selector",style:{"--columns":this.columns.toString()}},h("slot",null)))}get el(){return getElement(this)}};openWormhole(ScPriceChoices,["order"],!1),ScPriceChoices.style=scPriceChoicesCss;export{ScPriceChoices as sc_price_choices};
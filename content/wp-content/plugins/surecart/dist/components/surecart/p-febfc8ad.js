function n(n,e,t){return new Promise((i=>{if((null==t?void 0:t.duration)===1/0)throw new Error("Promise-based animations must be finite.");if(!(null==n?void 0:n.animate))return;const o=n.animate(e,{...t,duration:window.matchMedia("(prefers-reduced-motion: reduce)").matches?0:t.duration});o.addEventListener("cancel",i,{once:!0}),o.addEventListener("finish",i,{once:!0})}))}function e(n){var e;return Promise.all(((null===(e=null==n?void 0:n.getAnimations)||void 0===e?void 0:e.call(n))||[]).map((n=>new Promise((e=>{const t=requestAnimationFrame(e);n.addEventListener("cancel",(()=>t),{once:!0}),n.addEventListener("finish",(()=>t),{once:!0}),n.cancel()})))))}function o(n,e){return n.map((n=>({...n,height:"auto"===n.height?`${e}px`:n.height})))}const i=new Map,r=new WeakMap;function t(n,e){i.set(n,function(n){return null!=n?n:{keyframes:[],options:{duration:0}}}(e))}function u(n,e){const t=r.get(n);return(null==t?void 0:t[e])?t[e]:i.get(e)||{keyframes:[],options:{duration:0}}}export{n as a,o as b,t as c,u as g,e as s};
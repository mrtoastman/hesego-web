{
  "timestamp": "2023-04-27T13:18:30",
  "compiler": {
    "name": "node",
    "version": "16.20.0"
  },
  "app": {
    "namespace": "surecart",
    "fsNamespace": "surecart",
    "components": 171,
    "entries": 171,
    "bundles": 1395,
    "outputs": [
      {
        "name": "dist-collection",
        "files": 256,
        "generatedFiles": [
          "./dist/collection/components/context/consumer/sc-consumer.js",
          "./dist/collection/components/context/provider/sc-provider.js",
          "./dist/collection/components/context/utils/createContext.js",
          "./dist/collection/components/controllers/cart/cart-form-submit/sc-cart-form-submit.js",
          "./dist/collection/components/controllers/cart/cart-header/sc-cart-header.js",
          "./dist/collection/components/controllers/cart/cart-submit/sc-cart-submit.js",
          "./dist/collection/components/controllers/cart/sc-cart-form/sc-cart-form.js",
          "./dist/collection/components/controllers/cart/sc-cart-loader/sc-cart-loader.js",
          "./dist/collection/components/controllers/cart/sc-cart/sc-cart.js",
          "./dist/collection/components/controllers/checkout-form/checkout-form-errors/sc-checkout-form-errors.js",
          "./dist/collection/components/controllers/checkout-form/checkout/functions.js",
          "./dist/collection/components/controllers/checkout-form/checkout/helpers/session/index.js",
          "./dist/collection/components/controllers/checkout-form/checkout/sc-checkout-currency.stories.js",
          "./dist/collection/components/controllers/checkout-form/checkout/sc-checkout-expired.stories.js",
          "./dist/collection/components/controllers/checkout-form/checkout/sc-checkout.js",
          "./dist/collection/components/controllers/checkout-form/checkout/sc-checkout.stories.js",
          "./dist/collection/components/controllers/checkout-form/checkout/state.js",
          "./dist/collection/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.js",
          "./dist/collection/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.stories.js",
          "./dist/collection/components/controllers/checkout-form/customer-email/sc-customer-email.js",
          "./dist/collection/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.js",
          "./dist/collection/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.js",
          "./dist/collection/components/controllers/checkout-form/customer-name/sc-customer-name.js",
          "./dist/collection/components/controllers/checkout-form/donation-choices/sc-donation-choices.js",
          "./dist/collection/components/controllers/checkout-form/donation-choices/sc-donation-choices.stories.js",
          "./dist/collection/components/controllers/checkout-form/express-payment/sc-express-payment.js",
          "./dist/collection/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.js",
          "./dist/collection/components/controllers/checkout-form/line-item-total/sc-line-item-total.js",
          "./dist/collection/components/controllers/checkout-form/line-items/sc-line-items.js",
          "./dist/collection/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.js",
          "./dist/collection/components/controllers/checkout-form/order-password/sc-order-password.js",
          "./dist/collection/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.js",
          "./dist/collection/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.stories.js",
          "./dist/collection/components/controllers/checkout-form/order-submit/sc-order-submit.js",
          "./dist/collection/components/controllers/checkout-form/order-submit/sc-order-submit.stories.js",
          "./dist/collection/components/controllers/checkout-form/order-summary/sc-order-summary.js",
          "./dist/collection/components/controllers/checkout-form/order-summary/sc-order-summary.stories.js",
          "./dist/collection/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.js",
          "./dist/collection/components/controllers/checkout-form/payment/ManualPaymentMethods.js",
          "./dist/collection/components/controllers/checkout-form/payment/sc-payment.js",
          "./dist/collection/components/controllers/checkout-form/price-choice/sc-price-choice.js",
          "./dist/collection/components/controllers/checkout-form/price-choices/functions.js",
          "./dist/collection/components/controllers/checkout-form/price-choices/sc-price-choices.js",
          "./dist/collection/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.js",
          "./dist/collection/components/controllers/checkout-form/sc-conditional-form/conditional-functions.js",
          "./dist/collection/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.js",
          "./dist/collection/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.js",
          "./dist/collection/components/controllers/checkout-form/sc-order-bump/sc-order-bump.js",
          "./dist/collection/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.js",
          "./dist/collection/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.js",
          "./dist/collection/components/controllers/checkout-form/total/sc-total.js",
          "./dist/collection/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.js",
          "./dist/collection/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.js",
          "./dist/collection/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.js",
          "./dist/collection/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.js",
          "./dist/collection/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.js",
          "./dist/collection/components/controllers/confirmation/order-confirmation/sc-order-confirmation.js",
          "./dist/collection/components/controllers/confirmation/order-detail/sc-order-detail.js",
          "./dist/collection/components/controllers/dashboard/charges-list/sc-charges-list.js",
          "./dist/collection/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.js",
          "./dist/collection/components/controllers/dashboard/customer-edit/sc-customer-edit.js",
          "./dist/collection/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.js",
          "./dist/collection/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.stories.js",
          "./dist/collection/components/controllers/dashboard/invoices-list/sc-invoices-list.js",
          "./dist/collection/components/controllers/dashboard/order/sc-order.js",
          "./dist/collection/components/controllers/dashboard/orders-list/sc-orders-list.js",
          "./dist/collection/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.js",
          "./dist/collection/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.js",
          "./dist/collection/components/controllers/dashboard/sc-cancel-discount/functions.js",
          "./dist/collection/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.js",
          "./dist/collection/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.js",
          "./dist/collection/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.js",
          "./dist/collection/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.js",
          "./dist/collection/components/controllers/dashboard/sc-password-nag/sc-password-nag.js",
          "./dist/collection/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.js",
          "./dist/collection/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.js",
          "./dist/collection/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.js",
          "./dist/collection/components/controllers/dashboard/subscription-details/sc-subscription-details.js",
          "./dist/collection/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.js",
          "./dist/collection/components/controllers/dashboard/subscription-payment/sc-subscription-payment.js",
          "./dist/collection/components/controllers/dashboard/subscription-switch/sc-subscription-switch.js",
          "./dist/collection/components/controllers/dashboard/subscription/sc-subscription.js",
          "./dist/collection/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.js",
          "./dist/collection/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.js",
          "./dist/collection/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.stories.js",
          "./dist/collection/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.js",
          "./dist/collection/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.js",
          "./dist/collection/components/controllers/dashboard/wordpress-user/sc-wordpress-user.js",
          "./dist/collection/components/controllers/login/sc-login-form.js",
          "./dist/collection/components/processors/sc-payment-method-choice/sc-payment-method-choice.js",
          "./dist/collection/components/providers/cart-session-provider/sc-cart-session-provider.js",
          "./dist/collection/components/providers/checkout-unsaved-changes-warning/sc-checkout-unsaved-changes-warning.js",
          "./dist/collection/components/providers/form-components-validator/sc-form-components-validator.js",
          "./dist/collection/components/providers/form-error-provider/sc-form-error-provider.js",
          "./dist/collection/components/providers/form-state-provider/checkout-machine.js",
          "./dist/collection/components/providers/form-state-provider/sc-form-state-provider.js",
          "./dist/collection/components/providers/line-items-provider/sc-line-items-provider.js",
          "./dist/collection/components/providers/order-confirm-provider/sc-order-confirm-provider.js",
          "./dist/collection/components/providers/sc-login-provider/sc-login-provider.js",
          "./dist/collection/components/providers/sc-order-confirm-components-validator/sc-order-confirm-components-validator.js",
          "./dist/collection/components/providers/session-provider/helpers/session/index.js",
          "./dist/collection/components/providers/session-provider/sc-session-provider.js",
          "./dist/collection/components/themes.stories.js",
          "./dist/collection/components/ui/address/sc-address.js",
          "./dist/collection/components/ui/address/sc-address.stories.js",
          "./dist/collection/components/ui/alert/sc-alert.js",
          "./dist/collection/components/ui/badge-notice/sc-badge-notice.js",
          "./dist/collection/components/ui/block-ui/sc-block-ui.js",
          "./dist/collection/components/ui/breadcrumb/sc-breadcrumb.js",
          "./dist/collection/components/ui/breadcrumbs/sc-breadcrumbs.js",
          "./dist/collection/components/ui/button/sc-button.js",
          "./dist/collection/components/ui/button/sc-button.stories.js",
          "./dist/collection/components/ui/card/sc-card.js",
          "./dist/collection/components/ui/cc-logo/sc-cc-logo.js",
          "./dist/collection/components/ui/checkbox/sc-checkbox.js",
          "./dist/collection/components/ui/choice-container/sc-choice-container.js",
          "./dist/collection/components/ui/choice/sc-choice.js",
          "./dist/collection/components/ui/choices/sc-choices.js",
          "./dist/collection/components/ui/choices/sc-choices.stories.js",
          "./dist/collection/components/ui/column/sc-column.js",
          "./dist/collection/components/ui/columns/sc-columns.js",
          "./dist/collection/components/ui/coupon-form/sc-coupon-form.js",
          "./dist/collection/components/ui/coupon-form/sc-coupon.stories.js",
          "./dist/collection/components/ui/customer-details/sc-customer-details.js",
          "./dist/collection/components/ui/dashboard-module/sc-dashboard-module.js",
          "./dist/collection/components/ui/divider/sc-divider.js",
          "./dist/collection/components/ui/dropdown/dropdown.js",
          "./dist/collection/components/ui/empty/sc-empty.js",
          "./dist/collection/components/ui/error/sc-error.js",
          "./dist/collection/components/ui/flex/sc-flex.js",
          "./dist/collection/components/ui/form-control/sc-form-control.js",
          "./dist/collection/components/ui/form-row/sc-form-row.js",
          "./dist/collection/components/ui/form/sc-form.js",
          "./dist/collection/components/ui/heading/sc-heading.js",
          "./dist/collection/components/ui/icon/library.js",
          "./dist/collection/components/ui/icon/register.js",
          "./dist/collection/components/ui/icon/request.js",
          "./dist/collection/components/ui/icon/sc-icon.js",
          "./dist/collection/components/ui/input/sc-input.js",
          "./dist/collection/components/ui/line-item/sc-line-item.js",
          "./dist/collection/components/ui/menu-divider/sc-menu-divider.js",
          "./dist/collection/components/ui/menu-item/sc-menu-item.js",
          "./dist/collection/components/ui/menu-label/sc-menu-label.js",
          "./dist/collection/components/ui/menu/sc-menu.js",
          "./dist/collection/components/ui/order-status-badge/sc-order-status-badge.js",
          "./dist/collection/components/ui/pagination/sc-pagination.js",
          "./dist/collection/components/ui/payment-selected/sc-payment-selected.js",
          "./dist/collection/components/ui/paypal-buttons/functions.js",
          "./dist/collection/components/ui/paypal-buttons/paypal-buttons.js",
          "./dist/collection/components/ui/paypal-buttons/paypal-buttons.stories.js",
          "./dist/collection/components/ui/price-input/sc-price-input.js",
          "./dist/collection/components/ui/product-line-item/sc-product-line-item.js",
          "./dist/collection/components/ui/purchase-downloads-list/sc-purchase-downloads-list.js",
          "./dist/collection/components/ui/quantity-select/sc-quantity-select.js",
          "./dist/collection/components/ui/radio-group/sc-radio-group.js",
          "./dist/collection/components/ui/radio/sc-radio.js",
          "./dist/collection/components/ui/rich-text/sc-rich-text.js",
          "./dist/collection/components/ui/sc-avatar/sc-avatar.js",
          "./dist/collection/components/ui/sc-button-group/sc-button-group.js",
          "./dist/collection/components/ui/sc-button-group/sc-button-group.stories.js",
          "./dist/collection/components/ui/sc-cart-icon/sc-cart-icon.js",
          "./dist/collection/components/ui/sc-cart-icon/sc-cart-icon.stories.js",
          "./dist/collection/components/ui/sc-compact-address/sc-compact-address.js",
          "./dist/collection/components/ui/sc-dialog/sc-dialog.js",
          "./dist/collection/components/ui/sc-drawer/sc-drawer.js",
          "./dist/collection/components/ui/sc-mollie-add-method/sc-mollie-add-method.js",
          "./dist/collection/components/ui/sc-payment-method/sc-payment-method.js",
          "./dist/collection/components/ui/sc-paypal-add-method/sc-paypal-add-method.js",
          "./dist/collection/components/ui/sc-premium-tag/sc-premium-tag.js",
          "./dist/collection/components/ui/sc-price-range/sc-price-range.js",
          "./dist/collection/components/ui/sc-prose/sc-prose.js",
          "./dist/collection/components/ui/sc-stripe-add-method/sc-stripe-add-method.js",
          "./dist/collection/components/ui/sc-textarea/sc-textarea.js",
          "./dist/collection/components/ui/sc-toggle/sc-toggle.js",
          "./dist/collection/components/ui/sc-toggle/sc-toggle.stories.js",
          "./dist/collection/components/ui/sc-toggles/sc-toggles.js",
          "./dist/collection/components/ui/sc-upgrade-required/sc-upgrade-required.js",
          "./dist/collection/components/ui/secure-notice/sc-secure-notice.js",
          "./dist/collection/components/ui/select/sc-select.js",
          "./dist/collection/components/ui/skeleton/sc-skeleton.js",
          "./dist/collection/components/ui/spacing/sc-spacing.js",
          "./dist/collection/components/ui/spinner/sc-spinner.js",
          "./dist/collection/components/ui/stacked-list-row/sc-stacked-list-row.js",
          "./dist/collection/components/ui/stacked-list/sc-stacked-list.js",
          "./dist/collection/components/ui/stripe-element/sc-stripe-element.js",
          "./dist/collection/components/ui/stripe-payment-element/sc-stripe-payment-element.js",
          "./dist/collection/components/ui/stripe-payment-request/sc-stripe-payment-request.js",
          "./dist/collection/components/ui/subscription-status-badge/sc-subscription-status-badge.js",
          "./dist/collection/components/ui/switch/sc-switch.js",
          "./dist/collection/components/ui/tab-group/sc-tab-group.js",
          "./dist/collection/components/ui/tab-panel/sc-tab-panel.js",
          "./dist/collection/components/ui/tab/sc-tab.js",
          "./dist/collection/components/ui/table-cell/sc-table-cell.js",
          "./dist/collection/components/ui/table-head/sc-table-head.js",
          "./dist/collection/components/ui/table-row/sc-table-row.js",
          "./dist/collection/components/ui/table/sc-table.js",
          "./dist/collection/components/ui/tag/sc-tag.js",
          "./dist/collection/components/ui/tax-id-input/sc-tax-id-input.js",
          "./dist/collection/components/ui/text/sc-text.js",
          "./dist/collection/components/ui/tooltip/sc-tooltip.js",
          "./dist/collection/components/util/format-bytes/sc-format-bytes.js",
          "./dist/collection/components/util/format-date/sc-format-date.js",
          "./dist/collection/components/util/format-interval/sc-format-interval.js",
          "./dist/collection/components/util/format-number/functions/utils.js",
          "./dist/collection/components/util/format-number/sc-format-number.js",
          "./dist/collection/functions/address.js",
          "./dist/collection/functions/animate.js",
          "./dist/collection/functions/animation-registry.js",
          "./dist/collection/functions/click.js",
          "./dist/collection/functions/fetch.js",
          "./dist/collection/functions/form-data.js",
          "./dist/collection/functions/form.js",
          "./dist/collection/functions/icon-library.js",
          "./dist/collection/functions/lazy.js",
          "./dist/collection/functions/line-items/index.js",
          "./dist/collection/functions/page-align.js",
          "./dist/collection/functions/price.js",
          "./dist/collection/functions/processor.js",
          "./dist/collection/functions/scroll.js",
          "./dist/collection/functions/slot.js",
          "./dist/collection/functions/tax.js",
          "./dist/collection/functions/total.js",
          "./dist/collection/functions/util.js",
          "./dist/collection/global/global.js",
          "./dist/collection/index.js",
          "./dist/collection/services/fetch/index.js",
          "./dist/collection/services/price/index.js",
          "./dist/collection/services/product/index.js",
          "./dist/collection/services/session/index.js",
          "./dist/collection/store/buy/index.js",
          "./dist/collection/store/buy/store.js",
          "./dist/collection/store/checkout/functions.js",
          "./dist/collection/store/checkout/getters.js",
          "./dist/collection/store/checkout/index.js",
          "./dist/collection/store/checkout/mutations.js",
          "./dist/collection/store/checkout/store.js",
          "./dist/collection/store/checkout/watchers.js",
          "./dist/collection/store/checkouts.js",
          "./dist/collection/store/form/getters.js",
          "./dist/collection/store/form/index.js",
          "./dist/collection/store/form/mutations.js",
          "./dist/collection/store/form/store.js",
          "./dist/collection/store/form/watchers.js",
          "./dist/collection/store/local/index.js",
          "./dist/collection/store/local/storage.js",
          "./dist/collection/store/local/types.js",
          "./dist/collection/store/processors/getters.js",
          "./dist/collection/store/processors/index.js",
          "./dist/collection/store/processors/store.js",
          "./dist/collection/store/processors/watchers.js",
          "./dist/collection/store/selected-processor/index.js",
          "./dist/collection/store/selected-processor/store.js",
          "./dist/collection/store/selected-processor/watchers.js",
          "./dist/collection/store/ui.js",
          "./dist/collection/testing/index.js",
          "./dist/collection/types.js"
        ]
      },
      {
        "name": "dist-custom-elements",
        "files": 468,
        "generatedFiles": [
          "./dist/components/_commonjsHelpers.js",
          "./dist/components/add-query-args.js",
          "./dist/components/address.js",
          "./dist/components/animation-registry.js",
          "./dist/components/consumer.js",
          "./dist/components/countries.js",
          "./dist/components/dropdown.js",
          "./dist/components/fetch.js",
          "./dist/components/form-data.js",
          "./dist/components/functions.js",
          "./dist/components/get-query-arg.js",
          "./dist/components/getters.js",
          "./dist/components/getters2.js",
          "./dist/components/getters3.js",
          "./dist/components/index.d.ts",
          "./dist/components/index.js",
          "./dist/components/index2.js",
          "./dist/components/index3.js",
          "./dist/components/index4.js",
          "./dist/components/lazy.js",
          "./dist/components/mutations.js",
          "./dist/components/mutations2.js",
          "./dist/components/page-align.js",
          "./dist/components/paypal-buttons.js",
          "./dist/components/price.js",
          "./dist/components/pure.js",
          "./dist/components/sc-address.d.ts",
          "./dist/components/sc-address.js",
          "./dist/components/sc-address2.js",
          "./dist/components/sc-alert.d.ts",
          "./dist/components/sc-alert.js",
          "./dist/components/sc-alert2.js",
          "./dist/components/sc-avatar.d.ts",
          "./dist/components/sc-avatar.js",
          "./dist/components/sc-badge-notice.d.ts",
          "./dist/components/sc-badge-notice.js",
          "./dist/components/sc-block-ui.d.ts",
          "./dist/components/sc-block-ui.js",
          "./dist/components/sc-block-ui2.js",
          "./dist/components/sc-breadcrumb.d.ts",
          "./dist/components/sc-breadcrumb.js",
          "./dist/components/sc-breadcrumbs.d.ts",
          "./dist/components/sc-breadcrumbs.js",
          "./dist/components/sc-button-group.d.ts",
          "./dist/components/sc-button-group.js",
          "./dist/components/sc-button.d.ts",
          "./dist/components/sc-button.js",
          "./dist/components/sc-button2.js",
          "./dist/components/sc-cancel-dialog.d.ts",
          "./dist/components/sc-cancel-dialog.js",
          "./dist/components/sc-cancel-dialog2.js",
          "./dist/components/sc-cancel-discount.d.ts",
          "./dist/components/sc-cancel-discount.js",
          "./dist/components/sc-cancel-discount2.js",
          "./dist/components/sc-cancel-survey.d.ts",
          "./dist/components/sc-cancel-survey.js",
          "./dist/components/sc-cancel-survey2.js",
          "./dist/components/sc-card.d.ts",
          "./dist/components/sc-card.js",
          "./dist/components/sc-card2.js",
          "./dist/components/sc-cart-form-submit.d.ts",
          "./dist/components/sc-cart-form-submit.js",
          "./dist/components/sc-cart-form.d.ts",
          "./dist/components/sc-cart-form.js",
          "./dist/components/sc-cart-header.d.ts",
          "./dist/components/sc-cart-header.js",
          "./dist/components/sc-cart-icon.d.ts",
          "./dist/components/sc-cart-icon.js",
          "./dist/components/sc-cart-icon2.js",
          "./dist/components/sc-cart-loader.d.ts",
          "./dist/components/sc-cart-loader.js",
          "./dist/components/sc-cart-session-provider.d.ts",
          "./dist/components/sc-cart-session-provider.js",
          "./dist/components/sc-cart-session-provider2.js",
          "./dist/components/sc-cart-submit.d.ts",
          "./dist/components/sc-cart-submit.js",
          "./dist/components/sc-cart.d.ts",
          "./dist/components/sc-cart.js",
          "./dist/components/sc-cc-logo.d.ts",
          "./dist/components/sc-cc-logo.js",
          "./dist/components/sc-cc-logo2.js",
          "./dist/components/sc-charges-list.d.ts",
          "./dist/components/sc-charges-list.js",
          "./dist/components/sc-checkbox.d.ts",
          "./dist/components/sc-checkbox.js",
          "./dist/components/sc-checkout-form-errors.d.ts",
          "./dist/components/sc-checkout-form-errors.js",
          "./dist/components/sc-checkout-form-errors2.js",
          "./dist/components/sc-checkout-mollie-payment.d.ts",
          "./dist/components/sc-checkout-mollie-payment.js",
          "./dist/components/sc-checkout-mollie-payment2.js",
          "./dist/components/sc-checkout-unsaved-changes-warning.d.ts",
          "./dist/components/sc-checkout-unsaved-changes-warning.js",
          "./dist/components/sc-checkout-unsaved-changes-warning2.js",
          "./dist/components/sc-checkout.d.ts",
          "./dist/components/sc-checkout.js",
          "./dist/components/sc-choice-container.d.ts",
          "./dist/components/sc-choice-container.js",
          "./dist/components/sc-choice-container2.js",
          "./dist/components/sc-choice.d.ts",
          "./dist/components/sc-choice.js",
          "./dist/components/sc-choice2.js",
          "./dist/components/sc-choices.d.ts",
          "./dist/components/sc-choices.js",
          "./dist/components/sc-choices2.js",
          "./dist/components/sc-column.d.ts",
          "./dist/components/sc-column.js",
          "./dist/components/sc-column2.js",
          "./dist/components/sc-columns.d.ts",
          "./dist/components/sc-columns.js",
          "./dist/components/sc-columns2.js",
          "./dist/components/sc-compact-address.d.ts",
          "./dist/components/sc-compact-address.js",
          "./dist/components/sc-compact-address2.js",
          "./dist/components/sc-conditional-form.d.ts",
          "./dist/components/sc-conditional-form.js",
          "./dist/components/sc-consumer.d.ts",
          "./dist/components/sc-consumer.js",
          "./dist/components/sc-coupon-form.d.ts",
          "./dist/components/sc-coupon-form.js",
          "./dist/components/sc-coupon-form2.js",
          "./dist/components/sc-custom-order-price-input.d.ts",
          "./dist/components/sc-custom-order-price-input.js",
          "./dist/components/sc-customer-details.d.ts",
          "./dist/components/sc-customer-details.js",
          "./dist/components/sc-customer-details2.js",
          "./dist/components/sc-customer-edit.d.ts",
          "./dist/components/sc-customer-edit.js",
          "./dist/components/sc-customer-email.d.ts",
          "./dist/components/sc-customer-email.js",
          "./dist/components/sc-customer-firstname.d.ts",
          "./dist/components/sc-customer-firstname.js",
          "./dist/components/sc-customer-lastname.d.ts",
          "./dist/components/sc-customer-lastname.js",
          "./dist/components/sc-customer-name.d.ts",
          "./dist/components/sc-customer-name.js",
          "./dist/components/sc-dashboard-customer-details.d.ts",
          "./dist/components/sc-dashboard-customer-details.js",
          "./dist/components/sc-dashboard-downloads-list.d.ts",
          "./dist/components/sc-dashboard-downloads-list.js",
          "./dist/components/sc-dashboard-module.d.ts",
          "./dist/components/sc-dashboard-module.js",
          "./dist/components/sc-dashboard-module2.js",
          "./dist/components/sc-dialog.d.ts",
          "./dist/components/sc-dialog.js",
          "./dist/components/sc-dialog2.js",
          "./dist/components/sc-divider.d.ts",
          "./dist/components/sc-divider.js",
          "./dist/components/sc-divider2.js",
          "./dist/components/sc-donation-choices.d.ts",
          "./dist/components/sc-donation-choices.js",
          "./dist/components/sc-downloads-list.d.ts",
          "./dist/components/sc-downloads-list.js",
          "./dist/components/sc-drawer.d.ts",
          "./dist/components/sc-drawer.js",
          "./dist/components/sc-drawer2.js",
          "./dist/components/sc-dropdown.d.ts",
          "./dist/components/sc-dropdown.js",
          "./dist/components/sc-empty.d.ts",
          "./dist/components/sc-empty.js",
          "./dist/components/sc-empty2.js",
          "./dist/components/sc-error.d.ts",
          "./dist/components/sc-error.js",
          "./dist/components/sc-error2.js",
          "./dist/components/sc-express-payment.d.ts",
          "./dist/components/sc-express-payment.js",
          "./dist/components/sc-flex.d.ts",
          "./dist/components/sc-flex.js",
          "./dist/components/sc-flex2.js",
          "./dist/components/sc-form-components-validator.d.ts",
          "./dist/components/sc-form-components-validator.js",
          "./dist/components/sc-form-components-validator2.js",
          "./dist/components/sc-form-control.d.ts",
          "./dist/components/sc-form-control.js",
          "./dist/components/sc-form-control2.js",
          "./dist/components/sc-form-error-provider.d.ts",
          "./dist/components/sc-form-error-provider.js",
          "./dist/components/sc-form-error-provider2.js",
          "./dist/components/sc-form-row.d.ts",
          "./dist/components/sc-form-row.js",
          "./dist/components/sc-form-state-provider.d.ts",
          "./dist/components/sc-form-state-provider.js",
          "./dist/components/sc-form-state-provider2.js",
          "./dist/components/sc-form.d.ts",
          "./dist/components/sc-form.js",
          "./dist/components/sc-form2.js",
          "./dist/components/sc-format-bytes.d.ts",
          "./dist/components/sc-format-bytes.js",
          "./dist/components/sc-format-bytes2.js",
          "./dist/components/sc-format-date.d.ts",
          "./dist/components/sc-format-date.js",
          "./dist/components/sc-format-date2.js",
          "./dist/components/sc-format-interval.d.ts",
          "./dist/components/sc-format-interval.js",
          "./dist/components/sc-format-number.d.ts",
          "./dist/components/sc-format-number.js",
          "./dist/components/sc-format-number2.js",
          "./dist/components/sc-heading.d.ts",
          "./dist/components/sc-heading.js",
          "./dist/components/sc-heading2.js",
          "./dist/components/sc-icon.d.ts",
          "./dist/components/sc-icon.js",
          "./dist/components/sc-icon2.js",
          "./dist/components/sc-input.d.ts",
          "./dist/components/sc-input.js",
          "./dist/components/sc-input2.js",
          "./dist/components/sc-invoices-list.d.ts",
          "./dist/components/sc-invoices-list.js",
          "./dist/components/sc-licenses-list.d.ts",
          "./dist/components/sc-licenses-list.js",
          "./dist/components/sc-line-item-bump.d.ts",
          "./dist/components/sc-line-item-bump.js",
          "./dist/components/sc-line-item-tax.d.ts",
          "./dist/components/sc-line-item-tax.js",
          "./dist/components/sc-line-item-tax2.js",
          "./dist/components/sc-line-item-total.d.ts",
          "./dist/components/sc-line-item-total.js",
          "./dist/components/sc-line-item-total2.js",
          "./dist/components/sc-line-item.d.ts",
          "./dist/components/sc-line-item.js",
          "./dist/components/sc-line-item2.js",
          "./dist/components/sc-line-items-provider.d.ts",
          "./dist/components/sc-line-items-provider.js",
          "./dist/components/sc-line-items-provider2.js",
          "./dist/components/sc-line-items.d.ts",
          "./dist/components/sc-line-items.js",
          "./dist/components/sc-login-form.d.ts",
          "./dist/components/sc-login-form.js",
          "./dist/components/sc-login-provider.d.ts",
          "./dist/components/sc-login-provider.js",
          "./dist/components/sc-login-provider2.js",
          "./dist/components/sc-menu-divider.d.ts",
          "./dist/components/sc-menu-divider.js",
          "./dist/components/sc-menu-item.d.ts",
          "./dist/components/sc-menu-item.js",
          "./dist/components/sc-menu-item2.js",
          "./dist/components/sc-menu-label.d.ts",
          "./dist/components/sc-menu-label.js",
          "./dist/components/sc-menu-label2.js",
          "./dist/components/sc-menu.d.ts",
          "./dist/components/sc-menu.js",
          "./dist/components/sc-menu2.js",
          "./dist/components/sc-mollie-add-method.d.ts",
          "./dist/components/sc-mollie-add-method.js",
          "./dist/components/sc-order-bump.d.ts",
          "./dist/components/sc-order-bump.js",
          "./dist/components/sc-order-bump2.js",
          "./dist/components/sc-order-bumps.d.ts",
          "./dist/components/sc-order-bumps.js",
          "./dist/components/sc-order-bumps2.js",
          "./dist/components/sc-order-confirm-components-validator.d.ts",
          "./dist/components/sc-order-confirm-components-validator.js",
          "./dist/components/sc-order-confirm-components-validator2.js",
          "./dist/components/sc-order-confirm-provider.d.ts",
          "./dist/components/sc-order-confirm-provider.js",
          "./dist/components/sc-order-confirm-provider2.js",
          "./dist/components/sc-order-confirmation-customer.d.ts",
          "./dist/components/sc-order-confirmation-customer.js",
          "./dist/components/sc-order-confirmation-details.d.ts",
          "./dist/components/sc-order-confirmation-details.js",
          "./dist/components/sc-order-confirmation-line-items.d.ts",
          "./dist/components/sc-order-confirmation-line-items.js",
          "./dist/components/sc-order-confirmation-line-items2.js",
          "./dist/components/sc-order-confirmation-totals.d.ts",
          "./dist/components/sc-order-confirmation-totals.js",
          "./dist/components/sc-order-confirmation-totals2.js",
          "./dist/components/sc-order-confirmation.d.ts",
          "./dist/components/sc-order-confirmation.js",
          "./dist/components/sc-order-coupon-form.d.ts",
          "./dist/components/sc-order-coupon-form.js",
          "./dist/components/sc-order-detail.d.ts",
          "./dist/components/sc-order-detail.js",
          "./dist/components/sc-order-manual-instructions.d.ts",
          "./dist/components/sc-order-manual-instructions.js",
          "./dist/components/sc-order-manual-instructions2.js",
          "./dist/components/sc-order-password.d.ts",
          "./dist/components/sc-order-password.js",
          "./dist/components/sc-order-shipping-address.d.ts",
          "./dist/components/sc-order-shipping-address.js",
          "./dist/components/sc-order-shipping-address2.js",
          "./dist/components/sc-order-status-badge.d.ts",
          "./dist/components/sc-order-status-badge.js",
          "./dist/components/sc-order-status-badge2.js",
          "./dist/components/sc-order-submit.d.ts",
          "./dist/components/sc-order-submit.js",
          "./dist/components/sc-order-summary.d.ts",
          "./dist/components/sc-order-summary.js",
          "./dist/components/sc-order-tax-id-input.d.ts",
          "./dist/components/sc-order-tax-id-input.js",
          "./dist/components/sc-order-tax-id-input2.js",
          "./dist/components/sc-order.d.ts",
          "./dist/components/sc-order.js",
          "./dist/components/sc-orders-list.d.ts",
          "./dist/components/sc-orders-list.js",
          "./dist/components/sc-pagination.d.ts",
          "./dist/components/sc-pagination.js",
          "./dist/components/sc-pagination2.js",
          "./dist/components/sc-password-nag.d.ts",
          "./dist/components/sc-password-nag.js",
          "./dist/components/sc-payment-method-choice.d.ts",
          "./dist/components/sc-payment-method-choice.js",
          "./dist/components/sc-payment-method-choice2.js",
          "./dist/components/sc-payment-method.d.ts",
          "./dist/components/sc-payment-method.js",
          "./dist/components/sc-payment-method2.js",
          "./dist/components/sc-payment-methods-list.d.ts",
          "./dist/components/sc-payment-methods-list.js",
          "./dist/components/sc-payment-selected.d.ts",
          "./dist/components/sc-payment-selected.js",
          "./dist/components/sc-payment-selected2.js",
          "./dist/components/sc-payment.d.ts",
          "./dist/components/sc-payment.js",
          "./dist/components/sc-paypal-add-method.d.ts",
          "./dist/components/sc-paypal-add-method.js",
          "./dist/components/sc-paypal-buttons.d.ts",
          "./dist/components/sc-paypal-buttons.js",
          "./dist/components/sc-premium-tag.d.ts",
          "./dist/components/sc-premium-tag.js",
          "./dist/components/sc-price-choice.d.ts",
          "./dist/components/sc-price-choice.js",
          "./dist/components/sc-price-choices.d.ts",
          "./dist/components/sc-price-choices.js",
          "./dist/components/sc-price-input.d.ts",
          "./dist/components/sc-price-input.js",
          "./dist/components/sc-price-input2.js",
          "./dist/components/sc-price-range.d.ts",
          "./dist/components/sc-price-range.js",
          "./dist/components/sc-product-line-item.d.ts",
          "./dist/components/sc-product-line-item.js",
          "./dist/components/sc-product-line-item2.js",
          "./dist/components/sc-product-selected-price.d.ts",
          "./dist/components/sc-product-selected-price.js",
          "./dist/components/sc-prose.d.ts",
          "./dist/components/sc-prose.js",
          "./dist/components/sc-provider.d.ts",
          "./dist/components/sc-provider.js",
          "./dist/components/sc-purchase-downloads-list.d.ts",
          "./dist/components/sc-purchase-downloads-list.js",
          "./dist/components/sc-purchase-downloads-list2.js",
          "./dist/components/sc-quantity-select.d.ts",
          "./dist/components/sc-quantity-select.js",
          "./dist/components/sc-quantity-select2.js",
          "./dist/components/sc-radio-group.d.ts",
          "./dist/components/sc-radio-group.js",
          "./dist/components/sc-radio.d.ts",
          "./dist/components/sc-radio.js",
          "./dist/components/sc-rich-text.d.ts",
          "./dist/components/sc-rich-text.js",
          "./dist/components/sc-secure-notice.d.ts",
          "./dist/components/sc-secure-notice.js",
          "./dist/components/sc-secure-notice2.js",
          "./dist/components/sc-select.d.ts",
          "./dist/components/sc-select.js",
          "./dist/components/sc-select2.js",
          "./dist/components/sc-session-provider.d.ts",
          "./dist/components/sc-session-provider.js",
          "./dist/components/sc-session-provider2.js",
          "./dist/components/sc-skeleton.d.ts",
          "./dist/components/sc-skeleton.js",
          "./dist/components/sc-skeleton2.js",
          "./dist/components/sc-spacing.d.ts",
          "./dist/components/sc-spacing.js",
          "./dist/components/sc-spacing2.js",
          "./dist/components/sc-spinner.d.ts",
          "./dist/components/sc-spinner.js",
          "./dist/components/sc-spinner2.js",
          "./dist/components/sc-stacked-list-row.d.ts",
          "./dist/components/sc-stacked-list-row.js",
          "./dist/components/sc-stacked-list-row2.js",
          "./dist/components/sc-stacked-list.d.ts",
          "./dist/components/sc-stacked-list.js",
          "./dist/components/sc-stacked-list2.js",
          "./dist/components/sc-stripe-add-method.d.ts",
          "./dist/components/sc-stripe-add-method.js",
          "./dist/components/sc-stripe-element.d.ts",
          "./dist/components/sc-stripe-element.js",
          "./dist/components/sc-stripe-payment-element.d.ts",
          "./dist/components/sc-stripe-payment-element.js",
          "./dist/components/sc-stripe-payment-request.d.ts",
          "./dist/components/sc-stripe-payment-request.js",
          "./dist/components/sc-stripe-payment-request2.js",
          "./dist/components/sc-subscription-ad-hoc-confirm.d.ts",
          "./dist/components/sc-subscription-ad-hoc-confirm.js",
          "./dist/components/sc-subscription-cancel.d.ts",
          "./dist/components/sc-subscription-cancel.js",
          "./dist/components/sc-subscription-cancel2.js",
          "./dist/components/sc-subscription-details.d.ts",
          "./dist/components/sc-subscription-details.js",
          "./dist/components/sc-subscription-details2.js",
          "./dist/components/sc-subscription-next-payment.d.ts",
          "./dist/components/sc-subscription-next-payment.js",
          "./dist/components/sc-subscription-next-payment2.js",
          "./dist/components/sc-subscription-payment-method.d.ts",
          "./dist/components/sc-subscription-payment-method.js",
          "./dist/components/sc-subscription-payment.d.ts",
          "./dist/components/sc-subscription-payment.js",
          "./dist/components/sc-subscription-status-badge.d.ts",
          "./dist/components/sc-subscription-status-badge.js",
          "./dist/components/sc-subscription-status-badge2.js",
          "./dist/components/sc-subscription-switch.d.ts",
          "./dist/components/sc-subscription-switch.js",
          "./dist/components/sc-subscription.d.ts",
          "./dist/components/sc-subscription.js",
          "./dist/components/sc-subscriptions-list.d.ts",
          "./dist/components/sc-subscriptions-list.js",
          "./dist/components/sc-switch.d.ts",
          "./dist/components/sc-switch.js",
          "./dist/components/sc-switch2.js",
          "./dist/components/sc-tab-group.d.ts",
          "./dist/components/sc-tab-group.js",
          "./dist/components/sc-tab-panel.d.ts",
          "./dist/components/sc-tab-panel.js",
          "./dist/components/sc-tab.d.ts",
          "./dist/components/sc-tab.js",
          "./dist/components/sc-table-cell.d.ts",
          "./dist/components/sc-table-cell.js",
          "./dist/components/sc-table-cell2.js",
          "./dist/components/sc-table-head.d.ts",
          "./dist/components/sc-table-head.js",
          "./dist/components/sc-table-row.d.ts",
          "./dist/components/sc-table-row.js",
          "./dist/components/sc-table-row2.js",
          "./dist/components/sc-table.d.ts",
          "./dist/components/sc-table.js",
          "./dist/components/sc-table2.js",
          "./dist/components/sc-tag.d.ts",
          "./dist/components/sc-tag.js",
          "./dist/components/sc-tag2.js",
          "./dist/components/sc-tax-id-input.d.ts",
          "./dist/components/sc-tax-id-input.js",
          "./dist/components/sc-tax-id-input2.js",
          "./dist/components/sc-text.d.ts",
          "./dist/components/sc-text.js",
          "./dist/components/sc-text2.js",
          "./dist/components/sc-textarea.d.ts",
          "./dist/components/sc-textarea.js",
          "./dist/components/sc-textarea2.js",
          "./dist/components/sc-toggle.d.ts",
          "./dist/components/sc-toggle.js",
          "./dist/components/sc-toggle2.js",
          "./dist/components/sc-toggles.d.ts",
          "./dist/components/sc-toggles.js",
          "./dist/components/sc-toggles2.js",
          "./dist/components/sc-tooltip.d.ts",
          "./dist/components/sc-tooltip.js",
          "./dist/components/sc-tooltip2.js",
          "./dist/components/sc-total.d.ts",
          "./dist/components/sc-total.js",
          "./dist/components/sc-total2.js",
          "./dist/components/sc-upcoming-invoice.d.ts",
          "./dist/components/sc-upcoming-invoice.js",
          "./dist/components/sc-upgrade-required.d.ts",
          "./dist/components/sc-upgrade-required.js",
          "./dist/components/sc-wordpress-password-edit.d.ts",
          "./dist/components/sc-wordpress-password-edit.js",
          "./dist/components/sc-wordpress-user-edit.d.ts",
          "./dist/components/sc-wordpress-user-edit.js",
          "./dist/components/sc-wordpress-user.d.ts",
          "./dist/components/sc-wordpress-user.js",
          "./dist/components/store.js",
          "./dist/components/tax.js",
          "./dist/components/ui.js",
          "./dist/components/universe.js",
          "./dist/components/util.js",
          "./dist/components/utils.js",
          "./dist/components/watchers.js",
          "./dist/components/watchers2.js",
          "./dist/components/watchers3.js"
        ]
      },
      {
        "name": "dist-lazy",
        "files": 668,
        "generatedFiles": [
          "./dist/cjs/ManualPaymentMethods-c235e978.js",
          "./dist/cjs/_commonjsHelpers-537d719a.js",
          "./dist/cjs/add-query-args-17c551b6.js",
          "./dist/cjs/address-23549efd.js",
          "./dist/cjs/animation-registry-58bec802.js",
          "./dist/cjs/consumer-3f5ce850.js",
          "./dist/cjs/countries-0ec7ecdc.js",
          "./dist/cjs/fetch-b673a242.js",
          "./dist/cjs/form-data-9342e967.js",
          "./dist/cjs/functions-77ef3f22.js",
          "./dist/cjs/get-query-arg-53bf21e2.js",
          "./dist/cjs/getters-6c916233.js",
          "./dist/cjs/getters-c6087113.js",
          "./dist/cjs/getters-fd8a6c1d.js",
          "./dist/cjs/global-0a635475.js",
          "./dist/cjs/index-2840f0ff.js",
          "./dist/cjs/index-9c866aeb.js",
          "./dist/cjs/index-cf22257b.js",
          "./dist/cjs/index-f6f80680.js",
          "./dist/cjs/index.cjs.js",
          "./dist/cjs/lazy-bc8baeab.js",
          "./dist/cjs/library-289cf13f.js",
          "./dist/cjs/loader.cjs.js",
          "./dist/cjs/mutations-5cf514b3.js",
          "./dist/cjs/page-align-bf197eb4.js",
          "./dist/cjs/price-d3e21aa4.js",
          "./dist/cjs/pure-5be33f24.js",
          "./dist/cjs/sc-address_3.cjs.entry.js",
          "./dist/cjs/sc-alert.cjs.entry.js",
          "./dist/cjs/sc-avatar_7.cjs.entry.js",
          "./dist/cjs/sc-badge-notice.cjs.entry.js",
          "./dist/cjs/sc-block-ui.cjs.entry.js",
          "./dist/cjs/sc-breadcrumb.cjs.entry.js",
          "./dist/cjs/sc-breadcrumbs.cjs.entry.js",
          "./dist/cjs/sc-button-group.cjs.entry.js",
          "./dist/cjs/sc-cancel-dialog_2.cjs.entry.js",
          "./dist/cjs/sc-cancel-discount_4.cjs.entry.js",
          "./dist/cjs/sc-card_2.cjs.entry.js",
          "./dist/cjs/sc-cart-form-submit.cjs.entry.js",
          "./dist/cjs/sc-cart-form.cjs.entry.js",
          "./dist/cjs/sc-cart-header.cjs.entry.js",
          "./dist/cjs/sc-cart-icon_4.cjs.entry.js",
          "./dist/cjs/sc-cart-loader.cjs.entry.js",
          "./dist/cjs/sc-cart-submit.cjs.entry.js",
          "./dist/cjs/sc-cart.cjs.entry.js",
          "./dist/cjs/sc-cc-logo_2.cjs.entry.js",
          "./dist/cjs/sc-charges-list.cjs.entry.js",
          "./dist/cjs/sc-checkbox.cjs.entry.js",
          "./dist/cjs/sc-checkout-form-errors.cjs.entry.js",
          "./dist/cjs/sc-checkout-mollie-payment.cjs.entry.js",
          "./dist/cjs/sc-checkout-unsaved-changes-warning_7.cjs.entry.js",
          "./dist/cjs/sc-checkout.cjs.entry.js",
          "./dist/cjs/sc-choice-container.cjs.entry.js",
          "./dist/cjs/sc-choice.cjs.entry.js",
          "./dist/cjs/sc-choices.cjs.entry.js",
          "./dist/cjs/sc-column_2.cjs.entry.js",
          "./dist/cjs/sc-compact-address_6.cjs.entry.js",
          "./dist/cjs/sc-conditional-form.cjs.entry.js",
          "./dist/cjs/sc-consumer.cjs.entry.js",
          "./dist/cjs/sc-coupon-form.cjs.entry.js",
          "./dist/cjs/sc-custom-order-price-input.cjs.entry.js",
          "./dist/cjs/sc-customer-details.cjs.entry.js",
          "./dist/cjs/sc-customer-edit.cjs.entry.js",
          "./dist/cjs/sc-customer-email.cjs.entry.js",
          "./dist/cjs/sc-customer-firstname.cjs.entry.js",
          "./dist/cjs/sc-customer-lastname.cjs.entry.js",
          "./dist/cjs/sc-customer-name.cjs.entry.js",
          "./dist/cjs/sc-dashboard-customer-details.cjs.entry.js",
          "./dist/cjs/sc-dashboard-downloads-list.cjs.entry.js",
          "./dist/cjs/sc-dialog.cjs.entry.js",
          "./dist/cjs/sc-divider.cjs.entry.js",
          "./dist/cjs/sc-donation-choices.cjs.entry.js",
          "./dist/cjs/sc-downloads-list.cjs.entry.js",
          "./dist/cjs/sc-empty_3.cjs.entry.js",
          "./dist/cjs/sc-express-payment.cjs.entry.js",
          "./dist/cjs/sc-flex.cjs.entry.js",
          "./dist/cjs/sc-form-control_2.cjs.entry.js",
          "./dist/cjs/sc-form-row.cjs.entry.js",
          "./dist/cjs/sc-form.cjs.entry.js",
          "./dist/cjs/sc-format-bytes.cjs.entry.js",
          "./dist/cjs/sc-format-date.cjs.entry.js",
          "./dist/cjs/sc-format-interval.cjs.entry.js",
          "./dist/cjs/sc-format-number.cjs.entry.js",
          "./dist/cjs/sc-heading_2.cjs.entry.js",
          "./dist/cjs/sc-invoices-list.cjs.entry.js",
          "./dist/cjs/sc-licenses-list.cjs.entry.js",
          "./dist/cjs/sc-line-item-bump.cjs.entry.js",
          "./dist/cjs/sc-line-item-total.cjs.entry.js",
          "./dist/cjs/sc-line-item.cjs.entry.js",
          "./dist/cjs/sc-line-items-provider.cjs.entry.js",
          "./dist/cjs/sc-line-items.cjs.entry.js",
          "./dist/cjs/sc-login-form.cjs.entry.js",
          "./dist/cjs/sc-menu-divider.cjs.entry.js",
          "./dist/cjs/sc-menu-label.cjs.entry.js",
          "./dist/cjs/sc-mollie-add-method.cjs.entry.js",
          "./dist/cjs/sc-order-confirmation-customer.cjs.entry.js",
          "./dist/cjs/sc-order-confirmation-details.cjs.entry.js",
          "./dist/cjs/sc-order-confirmation-line-items_2.cjs.entry.js",
          "./dist/cjs/sc-order-confirmation.cjs.entry.js",
          "./dist/cjs/sc-order-coupon-form.cjs.entry.js",
          "./dist/cjs/sc-order-detail.cjs.entry.js",
          "./dist/cjs/sc-order-manual-instructions.cjs.entry.js",
          "./dist/cjs/sc-order-password.cjs.entry.js",
          "./dist/cjs/sc-order-status-badge.cjs.entry.js",
          "./dist/cjs/sc-order-submit.cjs.entry.js",
          "./dist/cjs/sc-order-summary.cjs.entry.js",
          "./dist/cjs/sc-order.cjs.entry.js",
          "./dist/cjs/sc-orders-list.cjs.entry.js",
          "./dist/cjs/sc-pagination.cjs.entry.js",
          "./dist/cjs/sc-password-nag.cjs.entry.js",
          "./dist/cjs/sc-payment-method-choice_2.cjs.entry.js",
          "./dist/cjs/sc-payment-methods-list.cjs.entry.js",
          "./dist/cjs/sc-payment.cjs.entry.js",
          "./dist/cjs/sc-paypal-add-method.cjs.entry.js",
          "./dist/cjs/sc-paypal-buttons_2.cjs.entry.js",
          "./dist/cjs/sc-premium-tag.cjs.entry.js",
          "./dist/cjs/sc-price-choice.cjs.entry.js",
          "./dist/cjs/sc-price-choices.cjs.entry.js",
          "./dist/cjs/sc-price-input.cjs.entry.js",
          "./dist/cjs/sc-price-range.cjs.entry.js",
          "./dist/cjs/sc-product-line-item_2.cjs.entry.js",
          "./dist/cjs/sc-product-selected-price.cjs.entry.js",
          "./dist/cjs/sc-prose.cjs.entry.js",
          "./dist/cjs/sc-provider.cjs.entry.js",
          "./dist/cjs/sc-purchase-downloads-list_2.cjs.entry.js",
          "./dist/cjs/sc-radio-group.cjs.entry.js",
          "./dist/cjs/sc-radio.cjs.entry.js",
          "./dist/cjs/sc-rich-text.cjs.entry.js",
          "./dist/cjs/sc-skeleton.cjs.entry.js",
          "./dist/cjs/sc-stripe-add-method.cjs.entry.js",
          "./dist/cjs/sc-stripe-element.cjs.entry.js",
          "./dist/cjs/sc-stripe-payment-element.cjs.entry.js",
          "./dist/cjs/sc-stripe-payment-request.cjs.entry.js",
          "./dist/cjs/sc-subscription-ad-hoc-confirm.cjs.entry.js",
          "./dist/cjs/sc-subscription-details_2.cjs.entry.js",
          "./dist/cjs/sc-subscription-payment-method.cjs.entry.js",
          "./dist/cjs/sc-subscription-payment.cjs.entry.js",
          "./dist/cjs/sc-subscription-switch.cjs.entry.js",
          "./dist/cjs/sc-subscription.cjs.entry.js",
          "./dist/cjs/sc-subscriptions-list.cjs.entry.js",
          "./dist/cjs/sc-switch.cjs.entry.js",
          "./dist/cjs/sc-tab-group.cjs.entry.js",
          "./dist/cjs/sc-tab-panel.cjs.entry.js",
          "./dist/cjs/sc-tab.cjs.entry.js",
          "./dist/cjs/sc-table-head.cjs.entry.js",
          "./dist/cjs/sc-table_3.cjs.entry.js",
          "./dist/cjs/sc-tag.cjs.entry.js",
          "./dist/cjs/sc-text.cjs.entry.js",
          "./dist/cjs/sc-toggle.cjs.entry.js",
          "./dist/cjs/sc-toggles.cjs.entry.js",
          "./dist/cjs/sc-tooltip.cjs.entry.js",
          "./dist/cjs/sc-total.cjs.entry.js",
          "./dist/cjs/sc-upcoming-invoice.cjs.entry.js",
          "./dist/cjs/sc-upgrade-required.cjs.entry.js",
          "./dist/cjs/sc-wordpress-password-edit.cjs.entry.js",
          "./dist/cjs/sc-wordpress-user-edit.cjs.entry.js",
          "./dist/cjs/sc-wordpress-user.cjs.entry.js",
          "./dist/cjs/store-6708f186.js",
          "./dist/cjs/surecart.cjs.js",
          "./dist/cjs/tax-39abdb3c.js",
          "./dist/cjs/ui-180b96fe.js",
          "./dist/cjs/universe-28bdab41.js",
          "./dist/cjs/util-98cb3494.js",
          "./dist/cjs/utils-806dad60.js",
          "./dist/cjs/watchers-203d7acd.js",
          "./dist/cjs/watchers-be62d6ad.js",
          "./dist/cjs/watchers-d5742848.js",
          "./dist/esm/ManualPaymentMethods-587d7637.js",
          "./dist/esm/_commonjsHelpers-9943807e.js",
          "./dist/esm/add-query-args-f4c5962b.js",
          "./dist/esm/address-c40a6eb5.js",
          "./dist/esm/animation-registry-ec34572e.js",
          "./dist/esm/consumer-b5087188.js",
          "./dist/esm/countries-dfee7456.js",
          "./dist/esm/fetch-34712ac6.js",
          "./dist/esm/form-data-2d60f23e.js",
          "./dist/esm/functions-b67a547b.js",
          "./dist/esm/get-query-arg-cb6b8763.js",
          "./dist/esm/getters-1925da80.js",
          "./dist/esm/getters-c6fb954d.js",
          "./dist/esm/getters-edc6a0db.js",
          "./dist/esm/global-2a97ac90.js",
          "./dist/esm/index-1ef9aa85.js",
          "./dist/esm/index-26bbcef3.js",
          "./dist/esm/index-93eba176.js",
          "./dist/esm/index-fd4790f6.js",
          "./dist/esm/index.js",
          "./dist/esm/lazy-64c2bf3b.js",
          "./dist/esm/library-19af6c52.js",
          "./dist/esm/loader.js",
          "./dist/esm/mutations-8030ef46.js",
          "./dist/esm/page-align-8602c4c7.js",
          "./dist/esm/price-a4ea8b5f.js",
          "./dist/esm/pure-4f52cebf.js",
          "./dist/esm/sc-address_3.entry.js",
          "./dist/esm/sc-alert.entry.js",
          "./dist/esm/sc-avatar_7.entry.js",
          "./dist/esm/sc-badge-notice.entry.js",
          "./dist/esm/sc-block-ui.entry.js",
          "./dist/esm/sc-breadcrumb.entry.js",
          "./dist/esm/sc-breadcrumbs.entry.js",
          "./dist/esm/sc-button-group.entry.js",
          "./dist/esm/sc-cancel-dialog_2.entry.js",
          "./dist/esm/sc-cancel-discount_4.entry.js",
          "./dist/esm/sc-card_2.entry.js",
          "./dist/esm/sc-cart-form-submit.entry.js",
          "./dist/esm/sc-cart-form.entry.js",
          "./dist/esm/sc-cart-header.entry.js",
          "./dist/esm/sc-cart-icon_4.entry.js",
          "./dist/esm/sc-cart-loader.entry.js",
          "./dist/esm/sc-cart-submit.entry.js",
          "./dist/esm/sc-cart.entry.js",
          "./dist/esm/sc-cc-logo_2.entry.js",
          "./dist/esm/sc-charges-list.entry.js",
          "./dist/esm/sc-checkbox.entry.js",
          "./dist/esm/sc-checkout-form-errors.entry.js",
          "./dist/esm/sc-checkout-mollie-payment.entry.js",
          "./dist/esm/sc-checkout-unsaved-changes-warning_7.entry.js",
          "./dist/esm/sc-checkout.entry.js",
          "./dist/esm/sc-choice-container.entry.js",
          "./dist/esm/sc-choice.entry.js",
          "./dist/esm/sc-choices.entry.js",
          "./dist/esm/sc-column_2.entry.js",
          "./dist/esm/sc-compact-address_6.entry.js",
          "./dist/esm/sc-conditional-form.entry.js",
          "./dist/esm/sc-consumer.entry.js",
          "./dist/esm/sc-coupon-form.entry.js",
          "./dist/esm/sc-custom-order-price-input.entry.js",
          "./dist/esm/sc-customer-details.entry.js",
          "./dist/esm/sc-customer-edit.entry.js",
          "./dist/esm/sc-customer-email.entry.js",
          "./dist/esm/sc-customer-firstname.entry.js",
          "./dist/esm/sc-customer-lastname.entry.js",
          "./dist/esm/sc-customer-name.entry.js",
          "./dist/esm/sc-dashboard-customer-details.entry.js",
          "./dist/esm/sc-dashboard-downloads-list.entry.js",
          "./dist/esm/sc-dialog.entry.js",
          "./dist/esm/sc-divider.entry.js",
          "./dist/esm/sc-donation-choices.entry.js",
          "./dist/esm/sc-downloads-list.entry.js",
          "./dist/esm/sc-empty_3.entry.js",
          "./dist/esm/sc-express-payment.entry.js",
          "./dist/esm/sc-flex.entry.js",
          "./dist/esm/sc-form-control_2.entry.js",
          "./dist/esm/sc-form-row.entry.js",
          "./dist/esm/sc-form.entry.js",
          "./dist/esm/sc-format-bytes.entry.js",
          "./dist/esm/sc-format-date.entry.js",
          "./dist/esm/sc-format-interval.entry.js",
          "./dist/esm/sc-format-number.entry.js",
          "./dist/esm/sc-heading_2.entry.js",
          "./dist/esm/sc-invoices-list.entry.js",
          "./dist/esm/sc-licenses-list.entry.js",
          "./dist/esm/sc-line-item-bump.entry.js",
          "./dist/esm/sc-line-item-total.entry.js",
          "./dist/esm/sc-line-item.entry.js",
          "./dist/esm/sc-line-items-provider.entry.js",
          "./dist/esm/sc-line-items.entry.js",
          "./dist/esm/sc-login-form.entry.js",
          "./dist/esm/sc-menu-divider.entry.js",
          "./dist/esm/sc-menu-label.entry.js",
          "./dist/esm/sc-mollie-add-method.entry.js",
          "./dist/esm/sc-order-confirmation-customer.entry.js",
          "./dist/esm/sc-order-confirmation-details.entry.js",
          "./dist/esm/sc-order-confirmation-line-items_2.entry.js",
          "./dist/esm/sc-order-confirmation.entry.js",
          "./dist/esm/sc-order-coupon-form.entry.js",
          "./dist/esm/sc-order-detail.entry.js",
          "./dist/esm/sc-order-manual-instructions.entry.js",
          "./dist/esm/sc-order-password.entry.js",
          "./dist/esm/sc-order-status-badge.entry.js",
          "./dist/esm/sc-order-submit.entry.js",
          "./dist/esm/sc-order-summary.entry.js",
          "./dist/esm/sc-order.entry.js",
          "./dist/esm/sc-orders-list.entry.js",
          "./dist/esm/sc-pagination.entry.js",
          "./dist/esm/sc-password-nag.entry.js",
          "./dist/esm/sc-payment-method-choice_2.entry.js",
          "./dist/esm/sc-payment-methods-list.entry.js",
          "./dist/esm/sc-payment.entry.js",
          "./dist/esm/sc-paypal-add-method.entry.js",
          "./dist/esm/sc-paypal-buttons_2.entry.js",
          "./dist/esm/sc-premium-tag.entry.js",
          "./dist/esm/sc-price-choice.entry.js",
          "./dist/esm/sc-price-choices.entry.js",
          "./dist/esm/sc-price-input.entry.js",
          "./dist/esm/sc-price-range.entry.js",
          "./dist/esm/sc-product-line-item_2.entry.js",
          "./dist/esm/sc-product-selected-price.entry.js",
          "./dist/esm/sc-prose.entry.js",
          "./dist/esm/sc-provider.entry.js",
          "./dist/esm/sc-purchase-downloads-list_2.entry.js",
          "./dist/esm/sc-radio-group.entry.js",
          "./dist/esm/sc-radio.entry.js",
          "./dist/esm/sc-rich-text.entry.js",
          "./dist/esm/sc-skeleton.entry.js",
          "./dist/esm/sc-stripe-add-method.entry.js",
          "./dist/esm/sc-stripe-element.entry.js",
          "./dist/esm/sc-stripe-payment-element.entry.js",
          "./dist/esm/sc-stripe-payment-request.entry.js",
          "./dist/esm/sc-subscription-ad-hoc-confirm.entry.js",
          "./dist/esm/sc-subscription-details_2.entry.js",
          "./dist/esm/sc-subscription-payment-method.entry.js",
          "./dist/esm/sc-subscription-payment.entry.js",
          "./dist/esm/sc-subscription-switch.entry.js",
          "./dist/esm/sc-subscription.entry.js",
          "./dist/esm/sc-subscriptions-list.entry.js",
          "./dist/esm/sc-switch.entry.js",
          "./dist/esm/sc-tab-group.entry.js",
          "./dist/esm/sc-tab-panel.entry.js",
          "./dist/esm/sc-tab.entry.js",
          "./dist/esm/sc-table-head.entry.js",
          "./dist/esm/sc-table_3.entry.js",
          "./dist/esm/sc-tag.entry.js",
          "./dist/esm/sc-text.entry.js",
          "./dist/esm/sc-toggle.entry.js",
          "./dist/esm/sc-toggles.entry.js",
          "./dist/esm/sc-tooltip.entry.js",
          "./dist/esm/sc-total.entry.js",
          "./dist/esm/sc-upcoming-invoice.entry.js",
          "./dist/esm/sc-upgrade-required.entry.js",
          "./dist/esm/sc-wordpress-password-edit.entry.js",
          "./dist/esm/sc-wordpress-user-edit.entry.js",
          "./dist/esm/sc-wordpress-user.entry.js",
          "./dist/esm/store-3645d641.js",
          "./dist/esm/surecart.js",
          "./dist/esm/tax-83f264de.js",
          "./dist/esm/ui-bfbc2b0b.js",
          "./dist/esm/universe-e944e399.js",
          "./dist/esm/util-1396ff7b.js",
          "./dist/esm/utils-967e8d60.js",
          "./dist/esm/watchers-0c38e1b1.js",
          "./dist/esm/watchers-0c79cf4e.js",
          "./dist/esm/watchers-e86a5dda.js",
          "./dist/index.cjs.js",
          "./dist/index.js",
          "./dist/surecart/index.esm.js",
          "./dist/surecart/p-04184ff7.entry.js",
          "./dist/surecart/p-043ce7d0.entry.js",
          "./dist/surecart/p-07af5327.entry.js",
          "./dist/surecart/p-0b18bd1a.entry.js",
          "./dist/surecart/p-0bb69f38.js",
          "./dist/surecart/p-0be51e8d.entry.js",
          "./dist/surecart/p-0ca6b473.entry.js",
          "./dist/surecart/p-0e51e0f8.entry.js",
          "./dist/surecart/p-10aa7556.js",
          "./dist/surecart/p-112455b1.js",
          "./dist/surecart/p-121438f5.js",
          "./dist/surecart/p-13071564.entry.js",
          "./dist/surecart/p-13c054c1.entry.js",
          "./dist/surecart/p-1557b98a.entry.js",
          "./dist/surecart/p-16669755.entry.js",
          "./dist/surecart/p-1c2e2695.js",
          "./dist/surecart/p-1eee11c9.entry.js",
          "./dist/surecart/p-225020d7.entry.js",
          "./dist/surecart/p-23d844dd.entry.js",
          "./dist/surecart/p-251ee8cd.entry.js",
          "./dist/surecart/p-2a595353.entry.js",
          "./dist/surecart/p-2ab22b0b.entry.js",
          "./dist/surecart/p-2b82dc79.entry.js",
          "./dist/surecart/p-2fef9f25.entry.js",
          "./dist/surecart/p-30ecac60.js",
          "./dist/surecart/p-3281dc5e.entry.js",
          "./dist/surecart/p-334e8abf.entry.js",
          "./dist/surecart/p-34773b08.entry.js",
          "./dist/surecart/p-357f3690.entry.js",
          "./dist/surecart/p-35c4916d.js",
          "./dist/surecart/p-368dc3e6.entry.js",
          "./dist/surecart/p-38601031.entry.js",
          "./dist/surecart/p-3a1aba68.js",
          "./dist/surecart/p-3a8772ae.entry.js",
          "./dist/surecart/p-3acacd9a.entry.js",
          "./dist/surecart/p-3ba1646a.entry.js",
          "./dist/surecart/p-3e9f06ab.entry.js",
          "./dist/surecart/p-42ad14e1.entry.js",
          "./dist/surecart/p-42e56bdd.entry.js",
          "./dist/surecart/p-468023a1.js",
          "./dist/surecart/p-47d251a3.js",
          "./dist/surecart/p-48303b2f.entry.js",
          "./dist/surecart/p-49e70137.entry.js",
          "./dist/surecart/p-4d73f82a.js",
          "./dist/surecart/p-4e510724.entry.js",
          "./dist/surecart/p-505c69fc.entry.js",
          "./dist/surecart/p-57d82274.js",
          "./dist/surecart/p-58229247.entry.js",
          "./dist/surecart/p-592ee0cb.entry.js",
          "./dist/surecart/p-59916e56.js",
          "./dist/surecart/p-627bb0d3.entry.js",
          "./dist/surecart/p-66bad83f.entry.js",
          "./dist/surecart/p-67c53ef8.entry.js",
          "./dist/surecart/p-6b752a69.entry.js",
          "./dist/surecart/p-6e675fe9.entry.js",
          "./dist/surecart/p-6f48b449.js",
          "./dist/surecart/p-70fd8614.entry.js",
          "./dist/surecart/p-754a2802.entry.js",
          "./dist/surecart/p-75c9e181.js",
          "./dist/surecart/p-78bf3c3d.entry.js",
          "./dist/surecart/p-7af40517.entry.js",
          "./dist/surecart/p-7ec538f6.entry.js",
          "./dist/surecart/p-80ac2186.entry.js",
          "./dist/surecart/p-824877ba.entry.js",
          "./dist/surecart/p-85b4ea35.entry.js",
          "./dist/surecart/p-8706fa47.entry.js",
          "./dist/surecart/p-8886b64f.entry.js",
          "./dist/surecart/p-893a5d15.entry.js",
          "./dist/surecart/p-8a6147f1.entry.js",
          "./dist/surecart/p-8aaf9d0f.entry.js",
          "./dist/surecart/p-8b16245c.entry.js",
          "./dist/surecart/p-8c1a5e64.entry.js",
          "./dist/surecart/p-8c2704c3.entry.js",
          "./dist/surecart/p-8ca73848.entry.js",
          "./dist/surecart/p-8cb138b6.entry.js",
          "./dist/surecart/p-8de7baaf.entry.js",
          "./dist/surecart/p-8e37fde7.entry.js",
          "./dist/surecart/p-913d1772.entry.js",
          "./dist/surecart/p-925a4341.entry.js",
          "./dist/surecart/p-9388d52a.entry.js",
          "./dist/surecart/p-957480ca.entry.js",
          "./dist/surecart/p-95b2740b.entry.js",
          "./dist/surecart/p-98198888.entry.js",
          "./dist/surecart/p-985a142c.entry.js",
          "./dist/surecart/p-98cc4120.entry.js",
          "./dist/surecart/p-98d6ec4c.entry.js",
          "./dist/surecart/p-98da902c.entry.js",
          "./dist/surecart/p-98f622fd.entry.js",
          "./dist/surecart/p-9b6c2663.js",
          "./dist/surecart/p-9cc61896.js",
          "./dist/surecart/p-9d0670a5.entry.js",
          "./dist/surecart/p-9df3d23d.entry.js",
          "./dist/surecart/p-9e447d06.entry.js",
          "./dist/surecart/p-a0a91ecb.js",
          "./dist/surecart/p-a23d36d5.entry.js",
          "./dist/surecart/p-a31f544a.entry.js",
          "./dist/surecart/p-a447ac09.js",
          "./dist/surecart/p-a63bc831.entry.js",
          "./dist/surecart/p-a6b67f6b.entry.js",
          "./dist/surecart/p-ab46c07b.entry.js",
          "./dist/surecart/p-ac439c4e.entry.js",
          "./dist/surecart/p-ac9f7c0a.entry.js",
          "./dist/surecart/p-acba1ca3.entry.js",
          "./dist/surecart/p-af582256.entry.js",
          "./dist/surecart/p-af5f184b.entry.js",
          "./dist/surecart/p-afcbd440.js",
          "./dist/surecart/p-b3c4dea3.entry.js",
          "./dist/surecart/p-b3e4d295.entry.js",
          "./dist/surecart/p-b63b299a.entry.js",
          "./dist/surecart/p-b787131f.entry.js",
          "./dist/surecart/p-bab64437.entry.js",
          "./dist/surecart/p-bb467682.entry.js",
          "./dist/surecart/p-bbba5084.entry.js",
          "./dist/surecart/p-bc7a4850.entry.js",
          "./dist/surecart/p-bc8cf292.entry.js",
          "./dist/surecart/p-be8c3903.entry.js",
          "./dist/surecart/p-bea4abc6.entry.js",
          "./dist/surecart/p-bead2308.entry.js",
          "./dist/surecart/p-c004519c.entry.js",
          "./dist/surecart/p-c2833cb1.js",
          "./dist/surecart/p-c38b1f0e.entry.js",
          "./dist/surecart/p-c3aea7bc.entry.js",
          "./dist/surecart/p-c4f56fa2.entry.js",
          "./dist/surecart/p-c7dd942d.js",
          "./dist/surecart/p-c9fd3aaa.entry.js",
          "./dist/surecart/p-ca6b4b0f.entry.js",
          "./dist/surecart/p-cb97b504.entry.js",
          "./dist/surecart/p-cba4fdb2.entry.js",
          "./dist/surecart/p-cc4e7e82.entry.js",
          "./dist/surecart/p-ccdc1518.entry.js",
          "./dist/surecart/p-cda2037d.entry.js",
          "./dist/surecart/p-d2678eaa.entry.js",
          "./dist/surecart/p-d2bff080.entry.js",
          "./dist/surecart/p-d318a919.entry.js",
          "./dist/surecart/p-d556eec7.js",
          "./dist/surecart/p-d63f2554.js",
          "./dist/surecart/p-d83e58e6.js",
          "./dist/surecart/p-d8453138.js",
          "./dist/surecart/p-d88aa393.entry.js",
          "./dist/surecart/p-d8d81408.entry.js",
          "./dist/surecart/p-d9dd38a0.entry.js",
          "./dist/surecart/p-dc961aa6.entry.js",
          "./dist/surecart/p-de000edf.entry.js",
          "./dist/surecart/p-de9cdea1.entry.js",
          "./dist/surecart/p-df8994cd.js",
          "./dist/surecart/p-dfbe004d.js",
          "./dist/surecart/p-e26a3990.entry.js",
          "./dist/surecart/p-e43cbf64.entry.js",
          "./dist/surecart/p-e52a5539.entry.js",
          "./dist/surecart/p-e63219fd.entry.js",
          "./dist/surecart/p-e64dc29e.entry.js",
          "./dist/surecart/p-ea406267.entry.js",
          "./dist/surecart/p-ea78c070.js",
          "./dist/surecart/p-ec9ca067.js",
          "./dist/surecart/p-ed997982.entry.js",
          "./dist/surecart/p-f0bb2283.js",
          "./dist/surecart/p-f1a6f9ec.js",
          "./dist/surecart/p-f27e9c79.entry.js",
          "./dist/surecart/p-f4c18346.entry.js",
          "./dist/surecart/p-f56cd460.js",
          "./dist/surecart/p-f6adb9cf.entry.js",
          "./dist/surecart/p-f8e50a05.entry.js",
          "./dist/surecart/p-fdf1a4f6.entry.js",
          "./dist/surecart/p-febfc8ad.js",
          "./dist/surecart/surecart.esm.js",
          "./www/build/index.esm.js",
          "./www/build/p-04184ff7.entry.js",
          "./www/build/p-043ce7d0.entry.js",
          "./www/build/p-07af5327.entry.js",
          "./www/build/p-0b18bd1a.entry.js",
          "./www/build/p-0bb69f38.js",
          "./www/build/p-0be51e8d.entry.js",
          "./www/build/p-0ca6b473.entry.js",
          "./www/build/p-0e51e0f8.entry.js",
          "./www/build/p-10aa7556.js",
          "./www/build/p-112455b1.js",
          "./www/build/p-121438f5.js",
          "./www/build/p-13071564.entry.js",
          "./www/build/p-13c054c1.entry.js",
          "./www/build/p-1557b98a.entry.js",
          "./www/build/p-16669755.entry.js",
          "./www/build/p-1c2e2695.js",
          "./www/build/p-1eee11c9.entry.js",
          "./www/build/p-225020d7.entry.js",
          "./www/build/p-23d844dd.entry.js",
          "./www/build/p-251ee8cd.entry.js",
          "./www/build/p-2a595353.entry.js",
          "./www/build/p-2ab22b0b.entry.js",
          "./www/build/p-2b82dc79.entry.js",
          "./www/build/p-2fef9f25.entry.js",
          "./www/build/p-30ecac60.js",
          "./www/build/p-3281dc5e.entry.js",
          "./www/build/p-334e8abf.entry.js",
          "./www/build/p-34773b08.entry.js",
          "./www/build/p-357f3690.entry.js",
          "./www/build/p-35c4916d.js",
          "./www/build/p-368dc3e6.entry.js",
          "./www/build/p-38601031.entry.js",
          "./www/build/p-3a1aba68.js",
          "./www/build/p-3a8772ae.entry.js",
          "./www/build/p-3acacd9a.entry.js",
          "./www/build/p-3ba1646a.entry.js",
          "./www/build/p-3e9f06ab.entry.js",
          "./www/build/p-42ad14e1.entry.js",
          "./www/build/p-42e56bdd.entry.js",
          "./www/build/p-468023a1.js",
          "./www/build/p-47d251a3.js",
          "./www/build/p-48303b2f.entry.js",
          "./www/build/p-49e70137.entry.js",
          "./www/build/p-4d73f82a.js",
          "./www/build/p-4e510724.entry.js",
          "./www/build/p-505c69fc.entry.js",
          "./www/build/p-57d82274.js",
          "./www/build/p-58229247.entry.js",
          "./www/build/p-592ee0cb.entry.js",
          "./www/build/p-59916e56.js",
          "./www/build/p-627bb0d3.entry.js",
          "./www/build/p-66bad83f.entry.js",
          "./www/build/p-67c53ef8.entry.js",
          "./www/build/p-6b752a69.entry.js",
          "./www/build/p-6e675fe9.entry.js",
          "./www/build/p-6f48b449.js",
          "./www/build/p-70fd8614.entry.js",
          "./www/build/p-754a2802.entry.js",
          "./www/build/p-75c9e181.js",
          "./www/build/p-78bf3c3d.entry.js",
          "./www/build/p-7af40517.entry.js",
          "./www/build/p-7ec538f6.entry.js",
          "./www/build/p-80ac2186.entry.js",
          "./www/build/p-824877ba.entry.js",
          "./www/build/p-85b4ea35.entry.js",
          "./www/build/p-8706fa47.entry.js",
          "./www/build/p-8886b64f.entry.js",
          "./www/build/p-893a5d15.entry.js",
          "./www/build/p-8a6147f1.entry.js",
          "./www/build/p-8aaf9d0f.entry.js",
          "./www/build/p-8b16245c.entry.js",
          "./www/build/p-8c1a5e64.entry.js",
          "./www/build/p-8c2704c3.entry.js",
          "./www/build/p-8ca73848.entry.js",
          "./www/build/p-8cb138b6.entry.js",
          "./www/build/p-8de7baaf.entry.js",
          "./www/build/p-8e37fde7.entry.js",
          "./www/build/p-913d1772.entry.js",
          "./www/build/p-925a4341.entry.js",
          "./www/build/p-9388d52a.entry.js",
          "./www/build/p-957480ca.entry.js",
          "./www/build/p-95b2740b.entry.js",
          "./www/build/p-98198888.entry.js",
          "./www/build/p-985a142c.entry.js",
          "./www/build/p-98cc4120.entry.js",
          "./www/build/p-98d6ec4c.entry.js",
          "./www/build/p-98da902c.entry.js",
          "./www/build/p-98f622fd.entry.js",
          "./www/build/p-9b6c2663.js",
          "./www/build/p-9cc61896.js",
          "./www/build/p-9d0670a5.entry.js",
          "./www/build/p-9df3d23d.entry.js",
          "./www/build/p-9e447d06.entry.js",
          "./www/build/p-a0a91ecb.js",
          "./www/build/p-a23d36d5.entry.js",
          "./www/build/p-a31f544a.entry.js",
          "./www/build/p-a447ac09.js",
          "./www/build/p-a63bc831.entry.js",
          "./www/build/p-a6b67f6b.entry.js",
          "./www/build/p-ab46c07b.entry.js",
          "./www/build/p-ac439c4e.entry.js",
          "./www/build/p-ac9f7c0a.entry.js",
          "./www/build/p-acba1ca3.entry.js",
          "./www/build/p-af582256.entry.js",
          "./www/build/p-af5f184b.entry.js",
          "./www/build/p-afcbd440.js",
          "./www/build/p-b3c4dea3.entry.js",
          "./www/build/p-b3e4d295.entry.js",
          "./www/build/p-b63b299a.entry.js",
          "./www/build/p-b787131f.entry.js",
          "./www/build/p-bab64437.entry.js",
          "./www/build/p-bb467682.entry.js",
          "./www/build/p-bbba5084.entry.js",
          "./www/build/p-bc7a4850.entry.js",
          "./www/build/p-bc8cf292.entry.js",
          "./www/build/p-be8c3903.entry.js",
          "./www/build/p-bea4abc6.entry.js",
          "./www/build/p-bead2308.entry.js",
          "./www/build/p-c004519c.entry.js",
          "./www/build/p-c2833cb1.js",
          "./www/build/p-c38b1f0e.entry.js",
          "./www/build/p-c3aea7bc.entry.js",
          "./www/build/p-c4f56fa2.entry.js",
          "./www/build/p-c7dd942d.js",
          "./www/build/p-c9fd3aaa.entry.js",
          "./www/build/p-ca6b4b0f.entry.js",
          "./www/build/p-cb97b504.entry.js",
          "./www/build/p-cba4fdb2.entry.js",
          "./www/build/p-cc4e7e82.entry.js",
          "./www/build/p-ccdc1518.entry.js",
          "./www/build/p-cda2037d.entry.js",
          "./www/build/p-d2678eaa.entry.js",
          "./www/build/p-d2bff080.entry.js",
          "./www/build/p-d318a919.entry.js",
          "./www/build/p-d556eec7.js",
          "./www/build/p-d63f2554.js",
          "./www/build/p-d83e58e6.js",
          "./www/build/p-d8453138.js",
          "./www/build/p-d88aa393.entry.js",
          "./www/build/p-d8d81408.entry.js",
          "./www/build/p-d9dd38a0.entry.js",
          "./www/build/p-dc961aa6.entry.js",
          "./www/build/p-de000edf.entry.js",
          "./www/build/p-de9cdea1.entry.js",
          "./www/build/p-df8994cd.js",
          "./www/build/p-dfbe004d.js",
          "./www/build/p-e26a3990.entry.js",
          "./www/build/p-e43cbf64.entry.js",
          "./www/build/p-e52a5539.entry.js",
          "./www/build/p-e63219fd.entry.js",
          "./www/build/p-e64dc29e.entry.js",
          "./www/build/p-ea406267.entry.js",
          "./www/build/p-ea78c070.js",
          "./www/build/p-ec9ca067.js",
          "./www/build/p-ed997982.entry.js",
          "./www/build/p-f0bb2283.js",
          "./www/build/p-f1a6f9ec.js",
          "./www/build/p-f27e9c79.entry.js",
          "./www/build/p-f4c18346.entry.js",
          "./www/build/p-f56cd460.js",
          "./www/build/p-f6adb9cf.entry.js",
          "./www/build/p-f8e50a05.entry.js",
          "./www/build/p-fdf1a4f6.entry.js",
          "./www/build/p-febfc8ad.js",
          "./www/build/surecart.esm.js"
        ]
      },
      {
        "name": "dist-types",
        "files": 1,
        "generatedFiles": [
          "./dist/types/stencil-public-runtime.d.ts"
        ]
      },
      {
        "name": "www",
        "files": 2,
        "generatedFiles": [
          "./www/host.config.json",
          "./www/index.html"
        ]
      }
    ]
  },
  "options": {
    "minifyJs": true,
    "minifyCss": true,
    "hashFileNames": true,
    "hashedFileNameLength": 8,
    "buildEs5": false
  },
  "formats": {
    "esmBrowser": [
      {
        "key": "sc-avatar.sc-button.sc-dropdown.sc-icon.sc-menu.sc-menu-item.sc-spinner.entry",
        "components": [
          "sc-avatar",
          "sc-button",
          "sc-dropdown",
          "sc-icon",
          "sc-menu",
          "sc-menu-item",
          "sc-spinner"
        ],
        "bundleId": "p-225020d7",
        "fileName": "p-225020d7.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js",
          "p-a0a91ecb.js"
        ],
        "originalByteSize": 78574
      },
      {
        "key": "sc-badge-notice.entry",
        "components": [
          "sc-badge-notice"
        ],
        "bundleId": "p-6b752a69",
        "fileName": "p-6b752a69.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1391
      },
      {
        "key": "sc-breadcrumb.entry",
        "components": [
          "sc-breadcrumb"
        ],
        "bundleId": "p-70fd8614",
        "fileName": "p-70fd8614.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 3066
      },
      {
        "key": "sc-breadcrumbs.entry",
        "components": [
          "sc-breadcrumbs"
        ],
        "bundleId": "p-c3aea7bc",
        "fileName": "p-c3aea7bc.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 2135
      },
      {
        "key": "sc-button-group.entry",
        "components": [
          "sc-button-group"
        ],
        "bundleId": "p-f8e50a05",
        "fileName": "p-f8e50a05.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 2592
      },
      {
        "key": "sc-cart.entry",
        "components": [
          "sc-cart"
        ],
        "bundleId": "p-3281dc5e",
        "fileName": "p-3281dc5e.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c7dd942d.js",
          "p-ec9ca067.js",
          "p-10aa7556.js",
          "p-57d82274.js",
          "p-1c2e2695.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-35c4916d.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 6130
      },
      {
        "key": "sc-cart-form.entry",
        "components": [
          "sc-cart-form"
        ],
        "bundleId": "p-d2bff080",
        "fileName": "p-d2bff080.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-c7dd942d.js",
          "p-afcbd440.js",
          "p-ec9ca067.js",
          "p-10aa7556.js",
          "p-57d82274.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-35c4916d.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-d8453138.js",
          "p-1c2e2695.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 5143
      },
      {
        "key": "sc-cart-form-submit.entry",
        "components": [
          "sc-cart-form-submit"
        ],
        "bundleId": "p-fdf1a4f6",
        "fileName": "p-fdf1a4f6.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 847
      },
      {
        "key": "sc-cart-header.entry",
        "components": [
          "sc-cart-header"
        ],
        "bundleId": "p-505c69fc",
        "fileName": "p-505c69fc.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 1361
      },
      {
        "key": "sc-cart-loader.entry",
        "components": [
          "sc-cart-loader"
        ],
        "bundleId": "p-ac9f7c0a",
        "fileName": "p-ac9f7c0a.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-10aa7556.js",
          "p-57d82274.js",
          "p-35c4916d.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 1511
      },
      {
        "key": "sc-cart-submit.entry",
        "components": [
          "sc-cart-submit"
        ],
        "bundleId": "p-b3e4d295",
        "fileName": "p-b3e4d295.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 918
      },
      {
        "key": "sc-charges-list.entry",
        "components": [
          "sc-charges-list"
        ],
        "bundleId": "p-f6adb9cf",
        "fileName": "p-f6adb9cf.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 4944
      },
      {
        "key": "sc-checkbox.entry",
        "components": [
          "sc-checkbox"
        ],
        "bundleId": "p-9df3d23d",
        "fileName": "p-9df3d23d.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f1a6f9ec.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 7666
      },
      {
        "key": "sc-checkout.entry",
        "components": [
          "sc-checkout"
        ],
        "bundleId": "p-42ad14e1",
        "fileName": "p-42ad14e1.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-10aa7556.js",
          "p-47d251a3.js",
          "p-0bb69f38.js",
          "p-75c9e181.js",
          "p-c7dd942d.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-ea78c070.js",
          "p-9b6c2663.js"
        ],
        "originalByteSize": 9887
      },
      {
        "key": "sc-conditional-form.entry",
        "components": [
          "sc-conditional-form"
        ],
        "bundleId": "p-e52a5539",
        "fileName": "p-e52a5539.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-ea78c070.js",
          "p-f56cd460.js",
          "p-35c4916d.js",
          "p-10aa7556.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 5299
      },
      {
        "key": "sc-consumer.entry",
        "components": [
          "sc-consumer"
        ],
        "bundleId": "p-13c054c1",
        "fileName": "p-13c054c1.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 708
      },
      {
        "key": "sc-custom-order-price-input.entry",
        "components": [
          "sc-custom-order-price-input"
        ],
        "bundleId": "p-0be51e8d",
        "fileName": "p-0be51e8d.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-d63f2554.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 3566
      },
      {
        "key": "sc-customer-edit.entry",
        "components": [
          "sc-customer-edit"
        ],
        "bundleId": "p-13071564",
        "fileName": "p-13071564.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 5596
      },
      {
        "key": "sc-customer-email.entry",
        "components": [
          "sc-customer-email"
        ],
        "bundleId": "p-58229247",
        "fileName": "p-58229247.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-ec9ca067.js",
          "p-10aa7556.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-d8453138.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 4569
      },
      {
        "key": "sc-customer-firstname.entry",
        "components": [
          "sc-customer-firstname"
        ],
        "bundleId": "p-af5f184b",
        "fileName": "p-af5f184b.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 3213
      },
      {
        "key": "sc-customer-lastname.entry",
        "components": [
          "sc-customer-lastname"
        ],
        "bundleId": "p-42e56bdd",
        "fileName": "p-42e56bdd.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 3200
      },
      {
        "key": "sc-customer-name.entry",
        "components": [
          "sc-customer-name"
        ],
        "bundleId": "p-98198888",
        "fileName": "p-98198888.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-ec9ca067.js",
          "p-d63f2554.js",
          "p-10aa7556.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-d8453138.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 3842
      },
      {
        "key": "sc-dashboard-customer-details.entry",
        "components": [
          "sc-dashboard-customer-details"
        ],
        "bundleId": "p-16669755",
        "fileName": "p-16669755.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 1663
      },
      {
        "key": "sc-dashboard-downloads-list.entry",
        "components": [
          "sc-dashboard-downloads-list"
        ],
        "bundleId": "p-e63219fd",
        "fileName": "p-e63219fd.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 3138
      },
      {
        "key": "sc-donation-choices.entry",
        "components": [
          "sc-donation-choices"
        ],
        "bundleId": "p-ab46c07b",
        "fileName": "p-ab46c07b.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 5908
      },
      {
        "key": "sc-downloads-list.entry",
        "components": [
          "sc-downloads-list"
        ],
        "bundleId": "p-334e8abf",
        "fileName": "p-334e8abf.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 5418
      },
      {
        "key": "sc-express-payment.entry",
        "components": [
          "sc-express-payment"
        ],
        "bundleId": "p-0b18bd1a",
        "fileName": "p-0b18bd1a.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 2040
      },
      {
        "key": "sc-form-row.entry",
        "components": [
          "sc-form-row"
        ],
        "bundleId": "p-e26a3990",
        "fileName": "p-e26a3990.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1079
      },
      {
        "key": "sc-format-interval.entry",
        "components": [
          "sc-format-interval"
        ],
        "bundleId": "p-592ee0cb",
        "fileName": "p-592ee0cb.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-468023a1.js"
        ],
        "originalByteSize": 500
      },
      {
        "key": "sc-invoices-list.entry",
        "components": [
          "sc-invoices-list"
        ],
        "bundleId": "p-c004519c",
        "fileName": "p-c004519c.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 6330
      },
      {
        "key": "sc-licenses-list.entry",
        "components": [
          "sc-licenses-list"
        ],
        "bundleId": "p-7af40517",
        "fileName": "p-7af40517.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 2330
      },
      {
        "key": "sc-line-item-bump.entry",
        "components": [
          "sc-line-item-bump"
        ],
        "bundleId": "p-dc961aa6",
        "fileName": "p-dc961aa6.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 1013
      },
      {
        "key": "sc-line-items.entry",
        "components": [
          "sc-line-items"
        ],
        "bundleId": "p-07af5327",
        "fileName": "p-07af5327.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-afcbd440.js",
          "p-468023a1.js"
        ],
        "originalByteSize": 5926
      },
      {
        "key": "sc-login-form.entry",
        "components": [
          "sc-login-form"
        ],
        "bundleId": "p-de9cdea1",
        "fileName": "p-de9cdea1.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 6979
      },
      {
        "key": "sc-menu-divider.entry",
        "components": [
          "sc-menu-divider"
        ],
        "bundleId": "p-98da902c",
        "fileName": "p-98da902c.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 516
      },
      {
        "key": "sc-mollie-add-method.entry",
        "components": [
          "sc-mollie-add-method"
        ],
        "bundleId": "p-c4f56fa2",
        "fileName": "p-c4f56fa2.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 4480
      },
      {
        "key": "sc-order.entry",
        "components": [
          "sc-order"
        ],
        "bundleId": "p-bc7a4850",
        "fileName": "p-bc7a4850.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-468023a1.js",
          "p-121438f5.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 10935
      },
      {
        "key": "sc-order-confirmation.entry",
        "components": [
          "sc-order-confirmation"
        ],
        "bundleId": "p-754a2802",
        "fileName": "p-754a2802.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c7dd942d.js",
          "p-4d73f82a.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 4756
      },
      {
        "key": "sc-order-confirmation-customer.entry",
        "components": [
          "sc-order-confirmation-customer"
        ],
        "bundleId": "p-8a6147f1",
        "fileName": "p-8a6147f1.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 819
      },
      {
        "key": "sc-order-confirmation-details.entry",
        "components": [
          "sc-order-confirmation-details"
        ],
        "bundleId": "p-a23d36d5",
        "fileName": "p-a23d36d5.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 2637
      },
      {
        "key": "sc-order-coupon-form.entry",
        "components": [
          "sc-order-coupon-form"
        ],
        "bundleId": "p-2fef9f25",
        "fileName": "p-2fef9f25.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 2793
      },
      {
        "key": "sc-order-detail.entry",
        "components": [
          "sc-order-detail"
        ],
        "bundleId": "p-368dc3e6",
        "fileName": "p-368dc3e6.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 7082
      },
      {
        "key": "sc-order-password.entry",
        "components": [
          "sc-order-password"
        ],
        "bundleId": "p-3e9f06ab",
        "fileName": "p-3e9f06ab.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 2912
      },
      {
        "key": "sc-order-submit.entry",
        "components": [
          "sc-order-submit"
        ],
        "bundleId": "p-4e510724",
        "fileName": "p-4e510724.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f56cd460.js",
          "p-0bb69f38.js",
          "p-ea78c070.js",
          "p-d63f2554.js",
          "p-10aa7556.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-9b6c2663.js"
        ],
        "originalByteSize": 3103
      },
      {
        "key": "sc-order-summary.entry",
        "components": [
          "sc-order-summary"
        ],
        "bundleId": "p-bb467682",
        "fileName": "p-bb467682.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-10aa7556.js",
          "p-a447ac09.js",
          "p-febfc8ad.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-75c9e181.js"
        ],
        "originalByteSize": 7363
      },
      {
        "key": "sc-orders-list.entry",
        "components": [
          "sc-orders-list"
        ],
        "bundleId": "p-c9fd3aaa",
        "fileName": "p-c9fd3aaa.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 6683
      },
      {
        "key": "sc-password-nag.entry",
        "components": [
          "sc-password-nag"
        ],
        "bundleId": "p-cc4e7e82",
        "fileName": "p-cc4e7e82.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 3730
      },
      {
        "key": "sc-payment.entry",
        "components": [
          "sc-payment"
        ],
        "bundleId": "p-7ec538f6",
        "fileName": "p-7ec538f6.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-10aa7556.js",
          "p-47d251a3.js",
          "p-0bb69f38.js",
          "p-ea78c070.js",
          "p-6f48b449.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-9b6c2663.js"
        ],
        "originalByteSize": 4992
      },
      {
        "key": "sc-payment-methods-list.entry",
        "components": [
          "sc-payment-methods-list"
        ],
        "bundleId": "p-8b16245c",
        "fileName": "p-8b16245c.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 9685
      },
      {
        "key": "sc-paypal-add-method.entry",
        "components": [
          "sc-paypal-add-method"
        ],
        "bundleId": "p-ccdc1518",
        "fileName": "p-ccdc1518.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d83e58e6.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 4395
      },
      {
        "key": "sc-premium-tag.entry",
        "components": [
          "sc-premium-tag"
        ],
        "bundleId": "p-b3c4dea3",
        "fileName": "p-b3c4dea3.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 371
      },
      {
        "key": "sc-price-choice.entry",
        "components": [
          "sc-price-choice"
        ],
        "bundleId": "p-85b4ea35",
        "fileName": "p-85b4ea35.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-afcbd440.js",
          "p-468023a1.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 27751
      },
      {
        "key": "sc-price-choices.entry",
        "components": [
          "sc-price-choices"
        ],
        "bundleId": "p-f27e9c79",
        "fileName": "p-f27e9c79.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-afcbd440.js"
        ],
        "originalByteSize": 1881
      },
      {
        "key": "sc-price-range.entry",
        "components": [
          "sc-price-range"
        ],
        "bundleId": "p-2a595353",
        "fileName": "p-2a595353.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1384
      },
      {
        "key": "sc-product-selected-price.entry",
        "components": [
          "sc-product-selected-price"
        ],
        "bundleId": "p-cda2037d",
        "fileName": "p-cda2037d.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-468023a1.js",
          "p-f56cd460.js",
          "p-a447ac09.js",
          "p-10aa7556.js",
          "p-75c9e181.js",
          "p-35c4916d.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 5056
      },
      {
        "key": "sc-prose.entry",
        "components": [
          "sc-prose"
        ],
        "bundleId": "p-8cb138b6",
        "fileName": "p-8cb138b6.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 4771
      },
      {
        "key": "sc-provider.entry",
        "components": [
          "sc-provider"
        ],
        "bundleId": "p-9e447d06",
        "fileName": "p-9e447d06.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1014
      },
      {
        "key": "sc-radio.entry",
        "components": [
          "sc-radio"
        ],
        "bundleId": "p-8c1a5e64",
        "fileName": "p-8c1a5e64.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f1a6f9ec.js"
        ],
        "originalByteSize": 7129
      },
      {
        "key": "sc-radio-group.entry",
        "components": [
          "sc-radio-group"
        ],
        "bundleId": "p-357f3690",
        "fileName": "p-357f3690.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 2212
      },
      {
        "key": "sc-rich-text.entry",
        "components": [
          "sc-rich-text"
        ],
        "bundleId": "p-3acacd9a",
        "fileName": "p-3acacd9a.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 720600
      },
      {
        "key": "sc-stripe-add-method.entry",
        "components": [
          "sc-stripe-add-method"
        ],
        "bundleId": "p-925a4341",
        "fileName": "p-925a4341.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f0bb2283.js",
          "p-d8453138.js",
          "p-112455b1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 6380
      },
      {
        "key": "sc-stripe-element.entry",
        "components": [
          "sc-stripe-element"
        ],
        "bundleId": "p-cb97b504",
        "fileName": "p-cb97b504.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f0bb2283.js",
          "p-d63f2554.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-112455b1.js",
          "p-35c4916d.js",
          "p-9b6c2663.js",
          "p-10aa7556.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 10626
      },
      {
        "key": "sc-stripe-payment-element.entry",
        "components": [
          "sc-stripe-payment-element"
        ],
        "bundleId": "p-bea4abc6",
        "fileName": "p-bea4abc6.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f0bb2283.js",
          "p-d63f2554.js",
          "p-ea78c070.js",
          "p-1c2e2695.js",
          "p-112455b1.js",
          "p-35c4916d.js"
        ],
        "originalByteSize": 10470
      },
      {
        "key": "sc-subscription.entry",
        "components": [
          "sc-subscription"
        ],
        "bundleId": "p-0e51e0f8",
        "fileName": "p-0e51e0f8.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 7693
      },
      {
        "key": "sc-subscription-ad-hoc-confirm.entry",
        "components": [
          "sc-subscription-ad-hoc-confirm"
        ],
        "bundleId": "p-98d6ec4c",
        "fileName": "p-98d6ec4c.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-468023a1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 1399
      },
      {
        "key": "sc-subscription-payment.entry",
        "components": [
          "sc-subscription-payment"
        ],
        "bundleId": "p-bab64437",
        "fileName": "p-bab64437.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 5054
      },
      {
        "key": "sc-subscription-payment-method.entry",
        "components": [
          "sc-subscription-payment-method"
        ],
        "bundleId": "p-ac439c4e",
        "fileName": "p-ac439c4e.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 7187
      },
      {
        "key": "sc-subscription-switch.entry",
        "components": [
          "sc-subscription-switch"
        ],
        "bundleId": "p-ed997982",
        "fileName": "p-ed997982.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-468023a1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 11454
      },
      {
        "key": "sc-subscriptions-list.entry",
        "components": [
          "sc-subscriptions-list"
        ],
        "bundleId": "p-de000edf",
        "fileName": "p-de000edf.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 5417
      },
      {
        "key": "sc-tab.entry",
        "components": [
          "sc-tab"
        ],
        "bundleId": "p-95b2740b",
        "fileName": "p-95b2740b.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 3913
      },
      {
        "key": "sc-tab-group.entry",
        "components": [
          "sc-tab-group"
        ],
        "bundleId": "p-cba4fdb2",
        "fileName": "p-cba4fdb2.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 6173
      },
      {
        "key": "sc-tab-panel.entry",
        "components": [
          "sc-tab-panel"
        ],
        "bundleId": "p-8886b64f",
        "fileName": "p-8886b64f.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1131
      },
      {
        "key": "sc-table-head.entry",
        "components": [
          "sc-table-head"
        ],
        "bundleId": "p-bbba5084",
        "fileName": "p-bbba5084.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 389
      },
      {
        "key": "sc-upcoming-invoice.entry",
        "components": [
          "sc-upcoming-invoice"
        ],
        "bundleId": "p-913d1772",
        "fileName": "p-913d1772.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-c2833cb1.js",
          "p-468023a1.js",
          "p-121438f5.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 11535
      },
      {
        "key": "sc-upgrade-required.entry",
        "components": [
          "sc-upgrade-required"
        ],
        "bundleId": "p-8706fa47",
        "fileName": "p-8706fa47.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1829
      },
      {
        "key": "sc-wordpress-password-edit.entry",
        "components": [
          "sc-wordpress-password-edit"
        ],
        "bundleId": "p-d2678eaa",
        "fileName": "p-d2678eaa.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 2119
      },
      {
        "key": "sc-wordpress-user.entry",
        "components": [
          "sc-wordpress-user"
        ],
        "bundleId": "p-ca6b4b0f",
        "fileName": "p-ca6b4b0f.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 2681
      },
      {
        "key": "sc-wordpress-user-edit.entry",
        "components": [
          "sc-wordpress-user-edit"
        ],
        "bundleId": "p-98cc4120",
        "fileName": "p-98cc4120.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 2469
      },
      {
        "key": "sc-cancel-dialog.sc-subscription-next-payment.entry",
        "components": [
          "sc-cancel-dialog",
          "sc-subscription-next-payment"
        ],
        "bundleId": "p-824877ba",
        "fileName": "p-824877ba.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-468023a1.js",
          "p-121438f5.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 10143
      },
      {
        "key": "sc-cart-icon.sc-cart-session-provider.sc-drawer.sc-error.entry",
        "components": [
          "sc-cart-icon",
          "sc-cart-session-provider",
          "sc-drawer",
          "sc-error"
        ],
        "bundleId": "p-1eee11c9",
        "fileName": "p-1eee11c9.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-ec9ca067.js",
          "p-febfc8ad.js",
          "p-10aa7556.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-d8453138.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 18121
      },
      {
        "key": "sc-checkout-mollie-payment.entry",
        "components": [
          "sc-checkout-mollie-payment"
        ],
        "bundleId": "p-957480ca",
        "fileName": "p-957480ca.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-ea78c070.js",
          "p-47d251a3.js",
          "p-0bb69f38.js",
          "p-10aa7556.js",
          "p-f56cd460.js",
          "p-30ecac60.js",
          "p-d8453138.js",
          "p-6f48b449.js",
          "p-1c2e2695.js",
          "p-35c4916d.js",
          "p-9b6c2663.js"
        ],
        "originalByteSize": 5729
      },
      {
        "key": "sc-checkout-unsaved-changes-warning.sc-form-components-validator.sc-form-error-provider.sc-form-state-provider.sc-login-provider.sc-order-confirm-provider.sc-session-provider.entry",
        "components": [
          "sc-checkout-unsaved-changes-warning",
          "sc-form-components-validator",
          "sc-form-error-provider",
          "sc-form-state-provider",
          "sc-login-provider",
          "sc-order-confirm-provider",
          "sc-session-provider"
        ],
        "bundleId": "p-8aaf9d0f",
        "fileName": "p-8aaf9d0f.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-75c9e181.js",
          "p-d8453138.js",
          "p-ec9ca067.js",
          "p-10aa7556.js",
          "p-30ecac60.js",
          "p-1c2e2695.js",
          "p-ea78c070.js",
          "p-f1a6f9ec.js",
          "p-4d73f82a.js",
          "p-35c4916d.js",
          "p-47d251a3.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js"
        ],
        "originalByteSize": 33176
      },
      {
        "key": "sc-choice-container.entry",
        "components": [
          "sc-choice-container"
        ],
        "bundleId": "p-be8c3903",
        "fileName": "p-be8c3903.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f1a6f9ec.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 10851
      },
      {
        "key": "sc-heading.sc-order-confirm-components-validator.entry",
        "components": [
          "sc-heading",
          "sc-order-confirm-components-validator"
        ],
        "bundleId": "p-98f622fd",
        "fileName": "p-98f622fd.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 2641
      },
      {
        "key": "sc-order-confirmation-line-items.sc-order-confirmation-totals.entry",
        "components": [
          "sc-order-confirmation-line-items",
          "sc-order-confirmation-totals"
        ],
        "bundleId": "p-043ce7d0",
        "fileName": "p-043ce7d0.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-afcbd440.js",
          "p-468023a1.js",
          "p-121438f5.js"
        ],
        "originalByteSize": 6218
      },
      {
        "key": "sc-paypal-buttons.sc-secure-notice.entry",
        "components": [
          "sc-paypal-buttons",
          "sc-secure-notice"
        ],
        "bundleId": "p-bead2308",
        "fileName": "p-bead2308.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d83e58e6.js",
          "p-d8453138.js",
          "p-afcbd440.js",
          "p-ec9ca067.js",
          "p-1c2e2695.js",
          "p-10aa7556.js",
          "p-35c4916d.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 9105
      },
      {
        "key": "sc-stripe-payment-request.entry",
        "components": [
          "sc-stripe-payment-request"
        ],
        "bundleId": "p-66bad83f",
        "fileName": "p-66bad83f.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f0bb2283.js",
          "p-d63f2554.js",
          "p-ec9ca067.js",
          "p-112455b1.js",
          "p-10aa7556.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-d8453138.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 15497
      },
      {
        "key": "sc-table.sc-table-cell.sc-table-row.entry",
        "components": [
          "sc-table",
          "sc-table-cell",
          "sc-table-row"
        ],
        "bundleId": "p-38601031",
        "fileName": "p-38601031.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 2071
      },
      {
        "key": "sc-toggles.entry",
        "components": [
          "sc-toggles"
        ],
        "bundleId": "p-9d0670a5",
        "fileName": "p-9d0670a5.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 2018
      },
      {
        "key": "sc-cancel-discount.sc-cancel-survey.sc-subscription-cancel.sc-textarea.entry",
        "components": [
          "sc-cancel-discount",
          "sc-cancel-survey",
          "sc-subscription-cancel",
          "sc-textarea"
        ],
        "bundleId": "p-b787131f",
        "fileName": "p-b787131f.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-468023a1.js",
          "p-1c2e2695.js",
          "p-f1a6f9ec.js"
        ],
        "originalByteSize": 20540
      },
      {
        "key": "sc-checkout-form-errors.entry",
        "components": [
          "sc-checkout-form-errors"
        ],
        "bundleId": "p-a63bc831",
        "fileName": "p-a63bc831.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 1887
      },
      {
        "key": "sc-column.sc-columns.entry",
        "components": [
          "sc-column",
          "sc-columns"
        ],
        "bundleId": "p-b63b299a",
        "fileName": "p-b63b299a.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 3352
      },
      {
        "key": "sc-coupon-form.entry",
        "components": [
          "sc-coupon-form"
        ],
        "bundleId": "p-acba1ca3",
        "fileName": "p-acba1ca3.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js",
          "p-468023a1.js"
        ],
        "originalByteSize": 6732
      },
      {
        "key": "sc-customer-details.entry",
        "components": [
          "sc-customer-details"
        ],
        "bundleId": "p-d9dd38a0",
        "fileName": "p-d9dd38a0.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-112455b1.js",
          "p-9cc61896.js",
          "p-121438f5.js"
        ],
        "originalByteSize": 14308
      },
      {
        "key": "sc-compact-address.sc-line-item-tax.sc-order-bump.sc-order-bumps.sc-order-shipping-address.sc-order-tax-id-input.entry",
        "components": [
          "sc-compact-address",
          "sc-line-item-tax",
          "sc-order-bump",
          "sc-order-bumps",
          "sc-order-shipping-address",
          "sc-order-tax-id-input"
        ],
        "bundleId": "p-0ca6b473",
        "fileName": "p-0ca6b473.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-9cc61896.js",
          "p-f1a6f9ec.js",
          "p-d63f2554.js",
          "p-afcbd440.js",
          "p-468023a1.js",
          "p-10aa7556.js",
          "p-30ecac60.js",
          "p-ec9ca067.js",
          "p-35c4916d.js",
          "p-1c2e2695.js",
          "p-47d251a3.js",
          "p-ea78c070.js",
          "p-0bb69f38.js",
          "p-9b6c2663.js",
          "p-d8453138.js",
          "p-4d73f82a.js"
        ],
        "originalByteSize": 23366
      },
      {
        "key": "sc-line-item-total.entry",
        "components": [
          "sc-line-item-total"
        ],
        "bundleId": "p-893a5d15",
        "fileName": "p-893a5d15.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 3300
      },
      {
        "key": "sc-payment-method-choice.sc-payment-selected.entry",
        "components": [
          "sc-payment-method-choice",
          "sc-payment-selected"
        ],
        "bundleId": "p-e43cbf64",
        "fileName": "p-e43cbf64.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-ea78c070.js",
          "p-35c4916d.js"
        ],
        "originalByteSize": 3759
      },
      {
        "key": "sc-purchase-downloads-list.sc-spacing.entry",
        "components": [
          "sc-purchase-downloads-list",
          "sc-spacing"
        ],
        "bundleId": "p-9388d52a",
        "fileName": "p-9388d52a.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 4058
      },
      {
        "key": "sc-switch.entry",
        "components": [
          "sc-switch"
        ],
        "bundleId": "p-8ca73848",
        "fileName": "p-8ca73848.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f1a6f9ec.js"
        ],
        "originalByteSize": 8393
      },
      {
        "key": "sc-order-manual-instructions.entry",
        "components": [
          "sc-order-manual-instructions"
        ],
        "bundleId": "p-bc8cf292",
        "fileName": "p-bc8cf292.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 887
      },
      {
        "key": "sc-subscription-details.sc-subscription-status-badge.entry",
        "components": [
          "sc-subscription-details",
          "sc-subscription-status-badge"
        ],
        "bundleId": "p-1557b98a",
        "fileName": "p-1557b98a.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d8453138.js",
          "p-468023a1.js",
          "p-1c2e2695.js"
        ],
        "originalByteSize": 11160
      },
      {
        "key": "sc-toggle.entry",
        "components": [
          "sc-toggle"
        ],
        "bundleId": "p-d318a919",
        "fileName": "p-d318a919.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-febfc8ad.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 7624
      },
      {
        "key": "sc-address.sc-select.sc-tax-id-input.entry",
        "components": [
          "sc-address",
          "sc-select",
          "sc-tax-id-input"
        ],
        "bundleId": "p-f4c18346",
        "fileName": "p-f4c18346.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-9cc61896.js",
          "p-f1a6f9ec.js",
          "p-9b6c2663.js",
          "p-121438f5.js"
        ],
        "originalByteSize": 68031
      },
      {
        "key": "sc-format-bytes.entry",
        "components": [
          "sc-format-bytes"
        ],
        "bundleId": "p-2b82dc79",
        "fileName": "p-2b82dc79.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1194
      },
      {
        "key": "sc-line-items-provider.entry",
        "components": [
          "sc-line-items-provider"
        ],
        "bundleId": "p-627bb0d3",
        "fileName": "p-627bb0d3.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-afcbd440.js"
        ],
        "originalByteSize": 3536
      },
      {
        "key": "sc-order-status-badge.entry",
        "components": [
          "sc-order-status-badge"
        ],
        "bundleId": "p-78bf3c3d",
        "fileName": "p-78bf3c3d.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1491
      },
      {
        "key": "sc-price-input.entry",
        "components": [
          "sc-price-input"
        ],
        "bundleId": "p-985a142c",
        "fileName": "p-985a142c.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-468023a1.js",
          "p-f1a6f9ec.js",
          "p-df8994cd.js"
        ],
        "originalByteSize": 4599
      },
      {
        "key": "sc-pagination.entry",
        "components": [
          "sc-pagination"
        ],
        "bundleId": "p-d88aa393",
        "fileName": "p-d88aa393.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1755
      },
      {
        "key": "sc-total.entry",
        "components": [
          "sc-total"
        ],
        "bundleId": "p-8c2704c3",
        "fileName": "p-8c2704c3.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 1065
      },
      {
        "key": "sc-menu-label.entry",
        "components": [
          "sc-menu-label"
        ],
        "bundleId": "p-3a8772ae",
        "fileName": "p-3a8772ae.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 722
      },
      {
        "key": "sc-cc-logo.sc-payment-method.entry",
        "components": [
          "sc-cc-logo",
          "sc-payment-method"
        ],
        "bundleId": "p-80ac2186",
        "fileName": "p-80ac2186.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 5170
      },
      {
        "key": "sc-product-line-item.sc-quantity-select.entry",
        "components": [
          "sc-product-line-item",
          "sc-quantity-select"
        ],
        "bundleId": "p-23d844dd",
        "fileName": "p-23d844dd.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 12908
      },
      {
        "key": "sc-choices.entry",
        "components": [
          "sc-choices"
        ],
        "bundleId": "p-8e37fde7",
        "fileName": "p-8e37fde7.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 3737
      },
      {
        "key": "sc-choice.entry",
        "components": [
          "sc-choice"
        ],
        "bundleId": "p-d8d81408",
        "fileName": "p-d8d81408.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-f1a6f9ec.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 12542
      },
      {
        "key": "sc-dialog.entry",
        "components": [
          "sc-dialog"
        ],
        "bundleId": "p-251ee8cd",
        "fileName": "p-251ee8cd.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-febfc8ad.js"
        ],
        "originalByteSize": 9579
      },
      {
        "key": "sc-empty.sc-stacked-list.sc-stacked-list-row.entry",
        "components": [
          "sc-empty",
          "sc-stacked-list",
          "sc-stacked-list-row"
        ],
        "bundleId": "p-48303b2f",
        "fileName": "p-48303b2f.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 4270
      },
      {
        "key": "sc-format-date.entry",
        "components": [
          "sc-format-date"
        ],
        "bundleId": "p-3ba1646a",
        "fileName": "p-3ba1646a.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1122
      },
      {
        "key": "sc-text.entry",
        "components": [
          "sc-text"
        ],
        "bundleId": "p-8de7baaf",
        "fileName": "p-8de7baaf.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 1086
      },
      {
        "key": "sc-line-item.entry",
        "components": [
          "sc-line-item"
        ],
        "bundleId": "p-04184ff7",
        "fileName": "p-04184ff7.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 4342
      },
      {
        "key": "sc-form.entry",
        "components": [
          "sc-form"
        ],
        "bundleId": "p-ea406267",
        "fileName": "p-ea406267.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 3330
      },
      {
        "key": "sc-flex.entry",
        "components": [
          "sc-flex"
        ],
        "bundleId": "p-2ab22b0b",
        "fileName": "p-2ab22b0b.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1885
      },
      {
        "key": "sc-divider.entry",
        "components": [
          "sc-divider"
        ],
        "bundleId": "p-af582256",
        "fileName": "p-af582256.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1117
      },
      {
        "key": "sc-form-control.sc-input.entry",
        "components": [
          "sc-form-control",
          "sc-input"
        ],
        "bundleId": "p-e64dc29e",
        "fileName": "p-e64dc29e.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js",
          "p-d556eec7.js",
          "p-f1a6f9ec.js"
        ],
        "originalByteSize": 16638
      },
      {
        "key": "sc-tag.entry",
        "components": [
          "sc-tag"
        ],
        "bundleId": "p-c38b1f0e",
        "fileName": "p-c38b1f0e.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 4266
      },
      {
        "key": "sc-card.sc-dashboard-module.entry",
        "components": [
          "sc-card",
          "sc-dashboard-module"
        ],
        "bundleId": "p-67c53ef8",
        "fileName": "p-67c53ef8.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d63f2554.js"
        ],
        "originalByteSize": 3320
      },
      {
        "key": "sc-format-number.entry",
        "components": [
          "sc-format-number"
        ],
        "bundleId": "p-6e675fe9",
        "fileName": "p-6e675fe9.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-df8994cd.js"
        ],
        "originalByteSize": 1508
      },
      {
        "key": "sc-block-ui.entry",
        "components": [
          "sc-block-ui"
        ],
        "bundleId": "p-49e70137",
        "fileName": "p-49e70137.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1151
      },
      {
        "key": "sc-skeleton.entry",
        "components": [
          "sc-skeleton"
        ],
        "bundleId": "p-a31f544a",
        "fileName": "p-a31f544a.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 1553
      },
      {
        "key": "sc-tooltip.entry",
        "components": [
          "sc-tooltip"
        ],
        "bundleId": "p-34773b08",
        "fileName": "p-34773b08.entry.js",
        "imports": [
          "p-dfbe004d.js"
        ],
        "originalByteSize": 3882
      },
      {
        "key": "sc-alert.entry",
        "components": [
          "sc-alert"
        ],
        "bundleId": "p-a6b67f6b",
        "fileName": "p-a6b67f6b.entry.js",
        "imports": [
          "p-dfbe004d.js",
          "p-d556eec7.js"
        ],
        "originalByteSize": 7101
      }
    ],
    "esm": [
      {
        "key": "sc-avatar.sc-button.sc-dropdown.sc-icon.sc-menu.sc-menu-item.sc-spinner.entry",
        "components": [
          "sc-avatar",
          "sc-button",
          "sc-dropdown",
          "sc-icon",
          "sc-menu",
          "sc-menu-item",
          "sc-spinner"
        ],
        "bundleId": "sc-avatar_7",
        "fileName": "sc-avatar_7.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js",
          "library-19af6c52.js"
        ],
        "originalByteSize": 78593
      },
      {
        "key": "sc-badge-notice.entry",
        "components": [
          "sc-badge-notice"
        ],
        "bundleId": "sc-badge-notice",
        "fileName": "sc-badge-notice.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1395
      },
      {
        "key": "sc-breadcrumb.entry",
        "components": [
          "sc-breadcrumb"
        ],
        "bundleId": "sc-breadcrumb",
        "fileName": "sc-breadcrumb.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 3070
      },
      {
        "key": "sc-breadcrumbs.entry",
        "components": [
          "sc-breadcrumbs"
        ],
        "bundleId": "sc-breadcrumbs",
        "fileName": "sc-breadcrumbs.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 2139
      },
      {
        "key": "sc-button-group.entry",
        "components": [
          "sc-button-group"
        ],
        "bundleId": "sc-button-group",
        "fileName": "sc-button-group.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 2596
      },
      {
        "key": "sc-cart.entry",
        "components": [
          "sc-cart"
        ],
        "bundleId": "sc-cart",
        "fileName": "sc-cart.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "universe-e944e399.js",
          "index-93eba176.js",
          "watchers-0c79cf4e.js",
          "ui-bfbc2b0b.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "index-26bbcef3.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 6209
      },
      {
        "key": "sc-cart-form.entry",
        "components": [
          "sc-cart-form"
        ],
        "bundleId": "sc-cart-form",
        "fileName": "sc-cart-form.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "universe-e944e399.js",
          "index-1ef9aa85.js",
          "index-93eba176.js",
          "watchers-0c79cf4e.js",
          "ui-bfbc2b0b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "index-26bbcef3.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 5226
      },
      {
        "key": "sc-cart-form-submit.entry",
        "components": [
          "sc-cart-form-submit"
        ],
        "bundleId": "sc-cart-form-submit",
        "fileName": "sc-cart-form-submit.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 858
      },
      {
        "key": "sc-cart-header.entry",
        "components": [
          "sc-cart-header"
        ],
        "bundleId": "sc-cart-header",
        "fileName": "sc-cart-header.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 1372
      },
      {
        "key": "sc-cart-loader.entry",
        "components": [
          "sc-cart-loader"
        ],
        "bundleId": "sc-cart-loader",
        "fileName": "sc-cart-loader.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-0c79cf4e.js",
          "ui-bfbc2b0b.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 1540
      },
      {
        "key": "sc-cart-submit.entry",
        "components": [
          "sc-cart-submit"
        ],
        "bundleId": "sc-cart-submit",
        "fileName": "sc-cart-submit.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 929
      },
      {
        "key": "sc-charges-list.entry",
        "components": [
          "sc-charges-list"
        ],
        "bundleId": "sc-charges-list",
        "fileName": "sc-charges-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 4968
      },
      {
        "key": "sc-checkbox.entry",
        "components": [
          "sc-checkbox"
        ],
        "bundleId": "sc-checkbox",
        "fileName": "sc-checkbox.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "form-data-2d60f23e.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 7687
      },
      {
        "key": "sc-checkout.entry",
        "components": [
          "sc-checkout"
        ],
        "bundleId": "sc-checkout",
        "fileName": "sc-checkout.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-0c79cf4e.js",
          "watchers-0c38e1b1.js",
          "getters-c6fb954d.js",
          "store-3645d641.js",
          "universe-e944e399.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "watchers-e86a5dda.js",
          "util-1396ff7b.js"
        ],
        "originalByteSize": 9949
      },
      {
        "key": "sc-conditional-form.entry",
        "components": [
          "sc-conditional-form"
        ],
        "bundleId": "sc-conditional-form",
        "fileName": "sc-conditional-form.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-e86a5dda.js",
          "getters-edc6a0db.js",
          "index-26bbcef3.js",
          "watchers-0c79cf4e.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 5340
      },
      {
        "key": "sc-consumer.entry",
        "components": [
          "sc-consumer"
        ],
        "bundleId": "sc-consumer",
        "fileName": "sc-consumer.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 712
      },
      {
        "key": "sc-custom-order-price-input.entry",
        "components": [
          "sc-custom-order-price-input"
        ],
        "bundleId": "sc-custom-order-price-input",
        "fileName": "sc-custom-order-price-input.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "consumer-b5087188.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 3594
      },
      {
        "key": "sc-customer-edit.entry",
        "components": [
          "sc-customer-edit"
        ],
        "bundleId": "sc-customer-edit",
        "fileName": "sc-customer-edit.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 5617
      },
      {
        "key": "sc-customer-email.entry",
        "components": [
          "sc-customer-email"
        ],
        "bundleId": "sc-customer-email",
        "fileName": "sc-customer-email.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "index-93eba176.js",
          "watchers-0c79cf4e.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "fetch-34712ac6.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 4647
      },
      {
        "key": "sc-customer-firstname.entry",
        "components": [
          "sc-customer-firstname"
        ],
        "bundleId": "sc-customer-firstname",
        "fileName": "sc-customer-firstname.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 3224
      },
      {
        "key": "sc-customer-lastname.entry",
        "components": [
          "sc-customer-lastname"
        ],
        "bundleId": "sc-customer-lastname",
        "fileName": "sc-customer-lastname.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 3211
      },
      {
        "key": "sc-customer-name.entry",
        "components": [
          "sc-customer-name"
        ],
        "bundleId": "sc-customer-name",
        "fileName": "sc-customer-name.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "index-93eba176.js",
          "consumer-b5087188.js",
          "watchers-0c79cf4e.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "fetch-34712ac6.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 3920
      },
      {
        "key": "sc-dashboard-customer-details.entry",
        "components": [
          "sc-dashboard-customer-details"
        ],
        "bundleId": "sc-dashboard-customer-details",
        "fileName": "sc-dashboard-customer-details.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 1687
      },
      {
        "key": "sc-dashboard-downloads-list.entry",
        "components": [
          "sc-dashboard-downloads-list"
        ],
        "bundleId": "sc-dashboard-downloads-list",
        "fileName": "sc-dashboard-downloads-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 3162
      },
      {
        "key": "sc-donation-choices.entry",
        "components": [
          "sc-donation-choices"
        ],
        "bundleId": "sc-donation-choices",
        "fileName": "sc-donation-choices.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 5919
      },
      {
        "key": "sc-downloads-list.entry",
        "components": [
          "sc-downloads-list"
        ],
        "bundleId": "sc-downloads-list",
        "fileName": "sc-downloads-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 5439
      },
      {
        "key": "sc-express-payment.entry",
        "components": [
          "sc-express-payment"
        ],
        "bundleId": "sc-express-payment",
        "fileName": "sc-express-payment.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 2051
      },
      {
        "key": "sc-form-row.entry",
        "components": [
          "sc-form-row"
        ],
        "bundleId": "sc-form-row",
        "fileName": "sc-form-row.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1083
      },
      {
        "key": "sc-format-interval.entry",
        "components": [
          "sc-format-interval"
        ],
        "bundleId": "sc-format-interval",
        "fileName": "sc-format-interval.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "price-a4ea8b5f.js"
        ],
        "originalByteSize": 508
      },
      {
        "key": "sc-invoices-list.entry",
        "components": [
          "sc-invoices-list"
        ],
        "bundleId": "sc-invoices-list",
        "fileName": "sc-invoices-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 6354
      },
      {
        "key": "sc-licenses-list.entry",
        "components": [
          "sc-licenses-list"
        ],
        "bundleId": "sc-licenses-list",
        "fileName": "sc-licenses-list.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 2334
      },
      {
        "key": "sc-line-item-bump.entry",
        "components": [
          "sc-line-item-bump"
        ],
        "bundleId": "sc-line-item-bump",
        "fileName": "sc-line-item-bump.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 1024
      },
      {
        "key": "sc-line-items.entry",
        "components": [
          "sc-line-items"
        ],
        "bundleId": "sc-line-items",
        "fileName": "sc-line-items.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "index-1ef9aa85.js",
          "price-a4ea8b5f.js"
        ],
        "originalByteSize": 5945
      },
      {
        "key": "sc-login-form.entry",
        "components": [
          "sc-login-form"
        ],
        "bundleId": "sc-login-form",
        "fileName": "sc-login-form.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 7000
      },
      {
        "key": "sc-menu-divider.entry",
        "components": [
          "sc-menu-divider"
        ],
        "bundleId": "sc-menu-divider",
        "fileName": "sc-menu-divider.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 520
      },
      {
        "key": "sc-mollie-add-method.entry",
        "components": [
          "sc-mollie-add-method"
        ],
        "bundleId": "sc-mollie-add-method",
        "fileName": "sc-mollie-add-method.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 4501
      },
      {
        "key": "sc-order.entry",
        "components": [
          "sc-order"
        ],
        "bundleId": "sc-order",
        "fileName": "sc-order.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "price-a4ea8b5f.js",
          "tax-83f264de.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 10965
      },
      {
        "key": "sc-order-confirmation.entry",
        "components": [
          "sc-order-confirmation"
        ],
        "bundleId": "sc-order-confirmation",
        "fileName": "sc-order-confirmation.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "universe-e944e399.js",
          "get-query-arg-cb6b8763.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 4796
      },
      {
        "key": "sc-order-confirmation-customer.entry",
        "components": [
          "sc-order-confirmation-customer"
        ],
        "bundleId": "sc-order-confirmation-customer",
        "fileName": "sc-order-confirmation-customer.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 830
      },
      {
        "key": "sc-order-confirmation-details.entry",
        "components": [
          "sc-order-confirmation-details"
        ],
        "bundleId": "sc-order-confirmation-details",
        "fileName": "sc-order-confirmation-details.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 2648
      },
      {
        "key": "sc-order-coupon-form.entry",
        "components": [
          "sc-order-coupon-form"
        ],
        "bundleId": "sc-order-coupon-form",
        "fileName": "sc-order-coupon-form.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 2813
      },
      {
        "key": "sc-order-detail.entry",
        "components": [
          "sc-order-detail"
        ],
        "bundleId": "sc-order-detail",
        "fileName": "sc-order-detail.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 7093
      },
      {
        "key": "sc-order-password.entry",
        "components": [
          "sc-order-password"
        ],
        "bundleId": "sc-order-password",
        "fileName": "sc-order-password.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 2923
      },
      {
        "key": "sc-order-submit.entry",
        "components": [
          "sc-order-submit"
        ],
        "bundleId": "sc-order-submit",
        "fileName": "sc-order-submit.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "getters-edc6a0db.js",
          "getters-c6fb954d.js",
          "watchers-e86a5dda.js",
          "consumer-b5087188.js",
          "watchers-0c79cf4e.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "util-1396ff7b.js"
        ],
        "originalByteSize": 3160
      },
      {
        "key": "sc-order-summary.entry",
        "components": [
          "sc-order-summary"
        ],
        "bundleId": "sc-order-summary",
        "fileName": "sc-order-summary.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-0c79cf4e.js",
          "getters-1925da80.js",
          "animation-registry-ec34572e.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "store-3645d641.js"
        ],
        "originalByteSize": 7418
      },
      {
        "key": "sc-orders-list.entry",
        "components": [
          "sc-orders-list"
        ],
        "bundleId": "sc-orders-list",
        "fileName": "sc-orders-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 6707
      },
      {
        "key": "sc-password-nag.entry",
        "components": [
          "sc-password-nag"
        ],
        "bundleId": "sc-password-nag",
        "fileName": "sc-password-nag.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 3751
      },
      {
        "key": "sc-payment.entry",
        "components": [
          "sc-payment"
        ],
        "bundleId": "sc-payment",
        "fileName": "sc-payment.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-0c79cf4e.js",
          "watchers-0c38e1b1.js",
          "getters-c6fb954d.js",
          "watchers-e86a5dda.js",
          "ManualPaymentMethods-587d7637.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "util-1396ff7b.js"
        ],
        "originalByteSize": 5062
      },
      {
        "key": "sc-payment-methods-list.entry",
        "components": [
          "sc-payment-methods-list"
        ],
        "bundleId": "sc-payment-methods-list",
        "fileName": "sc-payment-methods-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 9709
      },
      {
        "key": "sc-paypal-add-method.entry",
        "components": [
          "sc-paypal-add-method"
        ],
        "bundleId": "sc-paypal-add-method",
        "fileName": "sc-paypal-add-method.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "functions-b67a547b.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 4424
      },
      {
        "key": "sc-premium-tag.entry",
        "components": [
          "sc-premium-tag"
        ],
        "bundleId": "sc-premium-tag",
        "fileName": "sc-premium-tag.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 375
      },
      {
        "key": "sc-price-choice.entry",
        "components": [
          "sc-price-choice"
        ],
        "bundleId": "sc-price-choice",
        "fileName": "sc-price-choice.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "index-1ef9aa85.js",
          "price-a4ea8b5f.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 27787
      },
      {
        "key": "sc-price-choices.entry",
        "components": [
          "sc-price-choices"
        ],
        "bundleId": "sc-price-choices",
        "fileName": "sc-price-choices.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "index-1ef9aa85.js"
        ],
        "originalByteSize": 1896
      },
      {
        "key": "sc-price-range.entry",
        "components": [
          "sc-price-range"
        ],
        "bundleId": "sc-price-range",
        "fileName": "sc-price-range.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1388
      },
      {
        "key": "sc-product-selected-price.entry",
        "components": [
          "sc-product-selected-price"
        ],
        "bundleId": "sc-product-selected-price",
        "fileName": "sc-product-selected-price.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "price-a4ea8b5f.js",
          "getters-edc6a0db.js",
          "getters-1925da80.js",
          "watchers-0c79cf4e.js",
          "store-3645d641.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 5104
      },
      {
        "key": "sc-prose.entry",
        "components": [
          "sc-prose"
        ],
        "bundleId": "sc-prose",
        "fileName": "sc-prose.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 4775
      },
      {
        "key": "sc-provider.entry",
        "components": [
          "sc-provider"
        ],
        "bundleId": "sc-provider",
        "fileName": "sc-provider.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1018
      },
      {
        "key": "sc-radio.entry",
        "components": [
          "sc-radio"
        ],
        "bundleId": "sc-radio",
        "fileName": "sc-radio.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "form-data-2d60f23e.js"
        ],
        "originalByteSize": 7141
      },
      {
        "key": "sc-radio-group.entry",
        "components": [
          "sc-radio-group"
        ],
        "bundleId": "sc-radio-group",
        "fileName": "sc-radio-group.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 2225
      },
      {
        "key": "sc-rich-text.entry",
        "components": [
          "sc-rich-text"
        ],
        "bundleId": "sc-rich-text",
        "fileName": "sc-rich-text.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 720604
      },
      {
        "key": "sc-stripe-add-method.entry",
        "components": [
          "sc-stripe-add-method"
        ],
        "bundleId": "sc-stripe-add-method",
        "fileName": "sc-stripe-add-method.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "pure-4f52cebf.js",
          "fetch-34712ac6.js",
          "_commonjsHelpers-9943807e.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 6419
      },
      {
        "key": "sc-stripe-element.entry",
        "components": [
          "sc-stripe-element"
        ],
        "bundleId": "sc-stripe-element",
        "fileName": "sc-stripe-element.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "pure-4f52cebf.js",
          "consumer-b5087188.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "_commonjsHelpers-9943807e.js",
          "index-26bbcef3.js",
          "util-1396ff7b.js",
          "watchers-0c79cf4e.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 10695
      },
      {
        "key": "sc-stripe-payment-element.entry",
        "components": [
          "sc-stripe-payment-element"
        ],
        "bundleId": "sc-stripe-payment-element",
        "fileName": "sc-stripe-payment-element.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "pure-4f52cebf.js",
          "consumer-b5087188.js",
          "watchers-e86a5dda.js",
          "add-query-args-f4c5962b.js",
          "_commonjsHelpers-9943807e.js",
          "index-26bbcef3.js"
        ],
        "originalByteSize": 10523
      },
      {
        "key": "sc-subscription.entry",
        "components": [
          "sc-subscription"
        ],
        "bundleId": "sc-subscription",
        "fileName": "sc-subscription.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 7729
      },
      {
        "key": "sc-subscription-ad-hoc-confirm.entry",
        "components": [
          "sc-subscription-ad-hoc-confirm"
        ],
        "bundleId": "sc-subscription-ad-hoc-confirm",
        "fileName": "sc-subscription-ad-hoc-confirm.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "price-a4ea8b5f.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 1420
      },
      {
        "key": "sc-subscription-payment.entry",
        "components": [
          "sc-subscription-payment"
        ],
        "bundleId": "sc-subscription-payment",
        "fileName": "sc-subscription-payment.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 5075
      },
      {
        "key": "sc-subscription-payment-method.entry",
        "components": [
          "sc-subscription-payment-method"
        ],
        "bundleId": "sc-subscription-payment-method",
        "fileName": "sc-subscription-payment-method.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 7211
      },
      {
        "key": "sc-subscription-switch.entry",
        "components": [
          "sc-subscription-switch"
        ],
        "bundleId": "sc-subscription-switch",
        "fileName": "sc-subscription-switch.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "price-a4ea8b5f.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 11482
      },
      {
        "key": "sc-subscriptions-list.entry",
        "components": [
          "sc-subscriptions-list"
        ],
        "bundleId": "sc-subscriptions-list",
        "fileName": "sc-subscriptions-list.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 5441
      },
      {
        "key": "sc-tab.entry",
        "components": [
          "sc-tab"
        ],
        "bundleId": "sc-tab",
        "fileName": "sc-tab.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 3926
      },
      {
        "key": "sc-tab-group.entry",
        "components": [
          "sc-tab-group"
        ],
        "bundleId": "sc-tab-group",
        "fileName": "sc-tab-group.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 6177
      },
      {
        "key": "sc-tab-panel.entry",
        "components": [
          "sc-tab-panel"
        ],
        "bundleId": "sc-tab-panel",
        "fileName": "sc-tab-panel.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1135
      },
      {
        "key": "sc-table-head.entry",
        "components": [
          "sc-table-head"
        ],
        "bundleId": "sc-table-head",
        "fileName": "sc-table-head.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 393
      },
      {
        "key": "sc-upcoming-invoice.entry",
        "components": [
          "sc-upcoming-invoice"
        ],
        "bundleId": "sc-upcoming-invoice",
        "fileName": "sc-upcoming-invoice.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "lazy-64c2bf3b.js",
          "price-a4ea8b5f.js",
          "tax-83f264de.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 11565
      },
      {
        "key": "sc-upgrade-required.entry",
        "components": [
          "sc-upgrade-required"
        ],
        "bundleId": "sc-upgrade-required",
        "fileName": "sc-upgrade-required.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1833
      },
      {
        "key": "sc-wordpress-password-edit.entry",
        "components": [
          "sc-wordpress-password-edit"
        ],
        "bundleId": "sc-wordpress-password-edit",
        "fileName": "sc-wordpress-password-edit.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 2140
      },
      {
        "key": "sc-wordpress-user.entry",
        "components": [
          "sc-wordpress-user"
        ],
        "bundleId": "sc-wordpress-user",
        "fileName": "sc-wordpress-user.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 2698
      },
      {
        "key": "sc-wordpress-user-edit.entry",
        "components": [
          "sc-wordpress-user-edit"
        ],
        "bundleId": "sc-wordpress-user-edit",
        "fileName": "sc-wordpress-user-edit.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 2490
      },
      {
        "key": "sc-cancel-dialog.sc-subscription-next-payment.entry",
        "components": [
          "sc-cancel-dialog",
          "sc-subscription-next-payment"
        ],
        "bundleId": "sc-cancel-dialog_2",
        "fileName": "sc-cancel-dialog_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "price-a4ea8b5f.js",
          "tax-83f264de.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 10170
      },
      {
        "key": "sc-cart-icon.sc-cart-session-provider.sc-drawer.sc-error.entry",
        "components": [
          "sc-cart-icon",
          "sc-cart-session-provider",
          "sc-drawer",
          "sc-error"
        ],
        "bundleId": "sc-cart-icon_4",
        "fileName": "sc-cart-icon_4.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "index-93eba176.js",
          "animation-registry-ec34572e.js",
          "watchers-0c79cf4e.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "fetch-34712ac6.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 18209
      },
      {
        "key": "sc-checkout-mollie-payment.entry",
        "components": [
          "sc-checkout-mollie-payment"
        ],
        "bundleId": "sc-checkout-mollie-payment",
        "fileName": "sc-checkout-mollie-payment.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-e86a5dda.js",
          "watchers-0c38e1b1.js",
          "getters-c6fb954d.js",
          "watchers-0c79cf4e.js",
          "getters-edc6a0db.js",
          "mutations-8030ef46.js",
          "fetch-34712ac6.js",
          "ManualPaymentMethods-587d7637.js",
          "add-query-args-f4c5962b.js",
          "index-26bbcef3.js",
          "util-1396ff7b.js"
        ],
        "originalByteSize": 5817
      },
      {
        "key": "sc-checkout-unsaved-changes-warning.sc-form-components-validator.sc-form-error-provider.sc-form-state-provider.sc-login-provider.sc-order-confirm-provider.sc-session-provider.entry",
        "components": [
          "sc-checkout-unsaved-changes-warning",
          "sc-form-components-validator",
          "sc-form-error-provider",
          "sc-form-state-provider",
          "sc-login-provider",
          "sc-order-confirm-provider",
          "sc-session-provider"
        ],
        "bundleId": "sc-checkout-unsaved-changes-warning_7",
        "fileName": "sc-checkout-unsaved-changes-warning_7.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "store-3645d641.js",
          "fetch-34712ac6.js",
          "index-93eba176.js",
          "watchers-0c79cf4e.js",
          "mutations-8030ef46.js",
          "add-query-args-f4c5962b.js",
          "watchers-e86a5dda.js",
          "form-data-2d60f23e.js",
          "get-query-arg-cb6b8763.js",
          "index-26bbcef3.js",
          "watchers-0c38e1b1.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js"
        ],
        "originalByteSize": 33267
      },
      {
        "key": "sc-choice-container.entry",
        "components": [
          "sc-choice-container"
        ],
        "bundleId": "sc-choice-container",
        "fileName": "sc-choice-container.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "form-data-2d60f23e.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 10872
      },
      {
        "key": "sc-heading.sc-order-confirm-components-validator.entry",
        "components": [
          "sc-heading",
          "sc-order-confirm-components-validator"
        ],
        "bundleId": "sc-heading_2",
        "fileName": "sc-heading_2.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 2645
      },
      {
        "key": "sc-order-confirmation-line-items.sc-order-confirmation-totals.entry",
        "components": [
          "sc-order-confirmation-line-items",
          "sc-order-confirmation-totals"
        ],
        "bundleId": "sc-order-confirmation-line-items_2",
        "fileName": "sc-order-confirmation-line-items_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "index-1ef9aa85.js",
          "price-a4ea8b5f.js",
          "tax-83f264de.js"
        ],
        "originalByteSize": 6239
      },
      {
        "key": "sc-paypal-buttons.sc-secure-notice.entry",
        "components": [
          "sc-paypal-buttons",
          "sc-secure-notice"
        ],
        "bundleId": "sc-paypal-buttons_2",
        "fileName": "sc-paypal-buttons_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "functions-b67a547b.js",
          "fetch-34712ac6.js",
          "index-1ef9aa85.js",
          "index-93eba176.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c79cf4e.js",
          "index-26bbcef3.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 9188
      },
      {
        "key": "sc-stripe-payment-request.entry",
        "components": [
          "sc-stripe-payment-request"
        ],
        "bundleId": "sc-stripe-payment-request",
        "fileName": "sc-stripe-payment-request.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "pure-4f52cebf.js",
          "consumer-b5087188.js",
          "index-93eba176.js",
          "_commonjsHelpers-9943807e.js",
          "watchers-0c79cf4e.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "fetch-34712ac6.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 15593
      },
      {
        "key": "sc-table.sc-table-cell.sc-table-row.entry",
        "components": [
          "sc-table",
          "sc-table-cell",
          "sc-table-row"
        ],
        "bundleId": "sc-table_3",
        "fileName": "sc-table_3.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 2075
      },
      {
        "key": "sc-toggles.entry",
        "components": [
          "sc-toggles"
        ],
        "bundleId": "sc-toggles",
        "fileName": "sc-toggles.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 2022
      },
      {
        "key": "sc-cancel-discount.sc-cancel-survey.sc-subscription-cancel.sc-textarea.entry",
        "components": [
          "sc-cancel-discount",
          "sc-cancel-survey",
          "sc-subscription-cancel",
          "sc-textarea"
        ],
        "bundleId": "sc-cancel-discount_4",
        "fileName": "sc-cancel-discount_4.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "price-a4ea8b5f.js",
          "add-query-args-f4c5962b.js",
          "form-data-2d60f23e.js"
        ],
        "originalByteSize": 20573
      },
      {
        "key": "sc-checkout-form-errors.entry",
        "components": [
          "sc-checkout-form-errors"
        ],
        "bundleId": "sc-checkout-form-errors",
        "fileName": "sc-checkout-form-errors.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 1898
      },
      {
        "key": "sc-column.sc-columns.entry",
        "components": [
          "sc-column",
          "sc-columns"
        ],
        "bundleId": "sc-column_2",
        "fileName": "sc-column_2.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 3356
      },
      {
        "key": "sc-coupon-form.entry",
        "components": [
          "sc-coupon-form"
        ],
        "bundleId": "sc-coupon-form",
        "fileName": "sc-coupon-form.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js",
          "price-a4ea8b5f.js"
        ],
        "originalByteSize": 6749
      },
      {
        "key": "sc-customer-details.entry",
        "components": [
          "sc-customer-details"
        ],
        "bundleId": "sc-customer-details",
        "fileName": "sc-customer-details.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "_commonjsHelpers-9943807e.js",
          "address-c40a6eb5.js",
          "tax-83f264de.js"
        ],
        "originalByteSize": 14335
      },
      {
        "key": "sc-compact-address.sc-line-item-tax.sc-order-bump.sc-order-bumps.sc-order-shipping-address.sc-order-tax-id-input.entry",
        "components": [
          "sc-compact-address",
          "sc-line-item-tax",
          "sc-order-bump",
          "sc-order-bumps",
          "sc-order-shipping-address",
          "sc-order-tax-id-input"
        ],
        "bundleId": "sc-compact-address_6",
        "fileName": "sc-compact-address_6.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "address-c40a6eb5.js",
          "form-data-2d60f23e.js",
          "consumer-b5087188.js",
          "index-1ef9aa85.js",
          "price-a4ea8b5f.js",
          "watchers-0c79cf4e.js",
          "mutations-8030ef46.js",
          "index-93eba176.js",
          "index-26bbcef3.js",
          "add-query-args-f4c5962b.js",
          "watchers-0c38e1b1.js",
          "watchers-e86a5dda.js",
          "getters-c6fb954d.js",
          "util-1396ff7b.js",
          "fetch-34712ac6.js",
          "get-query-arg-cb6b8763.js"
        ],
        "originalByteSize": 23482
      },
      {
        "key": "sc-line-item-total.entry",
        "components": [
          "sc-line-item-total"
        ],
        "bundleId": "sc-line-item-total",
        "fileName": "sc-line-item-total.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 3311
      },
      {
        "key": "sc-payment-method-choice.sc-payment-selected.entry",
        "components": [
          "sc-payment-method-choice",
          "sc-payment-selected"
        ],
        "bundleId": "sc-payment-method-choice_2",
        "fileName": "sc-payment-method-choice_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "watchers-e86a5dda.js",
          "index-26bbcef3.js"
        ],
        "originalByteSize": 3774
      },
      {
        "key": "sc-purchase-downloads-list.sc-spacing.entry",
        "components": [
          "sc-purchase-downloads-list",
          "sc-spacing"
        ],
        "bundleId": "sc-purchase-downloads-list_2",
        "fileName": "sc-purchase-downloads-list_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 4075
      },
      {
        "key": "sc-switch.entry",
        "components": [
          "sc-switch"
        ],
        "bundleId": "sc-switch",
        "fileName": "sc-switch.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "form-data-2d60f23e.js"
        ],
        "originalByteSize": 8405
      },
      {
        "key": "sc-order-manual-instructions.entry",
        "components": [
          "sc-order-manual-instructions"
        ],
        "bundleId": "sc-order-manual-instructions",
        "fileName": "sc-order-manual-instructions.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 898
      },
      {
        "key": "sc-subscription-details.sc-subscription-status-badge.entry",
        "components": [
          "sc-subscription-details",
          "sc-subscription-status-badge"
        ],
        "bundleId": "sc-subscription-details_2",
        "fileName": "sc-subscription-details_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "fetch-34712ac6.js",
          "price-a4ea8b5f.js",
          "add-query-args-f4c5962b.js"
        ],
        "originalByteSize": 11185
      },
      {
        "key": "sc-toggle.entry",
        "components": [
          "sc-toggle"
        ],
        "bundleId": "sc-toggle",
        "fileName": "sc-toggle.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "animation-registry-ec34572e.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 7654
      },
      {
        "key": "sc-address.sc-select.sc-tax-id-input.entry",
        "components": [
          "sc-address",
          "sc-select",
          "sc-tax-id-input"
        ],
        "bundleId": "sc-address_3",
        "fileName": "sc-address_3.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "address-c40a6eb5.js",
          "form-data-2d60f23e.js",
          "util-1396ff7b.js",
          "tax-83f264de.js"
        ],
        "originalByteSize": 68062
      },
      {
        "key": "sc-format-bytes.entry",
        "components": [
          "sc-format-bytes"
        ],
        "bundleId": "sc-format-bytes",
        "fileName": "sc-format-bytes.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1198
      },
      {
        "key": "sc-line-items-provider.entry",
        "components": [
          "sc-line-items-provider"
        ],
        "bundleId": "sc-line-items-provider",
        "fileName": "sc-line-items-provider.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "index-1ef9aa85.js"
        ],
        "originalByteSize": 3544
      },
      {
        "key": "sc-order-status-badge.entry",
        "components": [
          "sc-order-status-badge"
        ],
        "bundleId": "sc-order-status-badge",
        "fileName": "sc-order-status-badge.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1495
      },
      {
        "key": "sc-price-input.entry",
        "components": [
          "sc-price-input"
        ],
        "bundleId": "sc-price-input",
        "fileName": "sc-price-input.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "price-a4ea8b5f.js",
          "form-data-2d60f23e.js",
          "utils-967e8d60.js"
        ],
        "originalByteSize": 4619
      },
      {
        "key": "sc-pagination.entry",
        "components": [
          "sc-pagination"
        ],
        "bundleId": "sc-pagination",
        "fileName": "sc-pagination.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1759
      },
      {
        "key": "sc-total.entry",
        "components": [
          "sc-total"
        ],
        "bundleId": "sc-total",
        "fileName": "sc-total.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 1076
      },
      {
        "key": "sc-menu-label.entry",
        "components": [
          "sc-menu-label"
        ],
        "bundleId": "sc-menu-label",
        "fileName": "sc-menu-label.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 726
      },
      {
        "key": "sc-cc-logo.sc-payment-method.entry",
        "components": [
          "sc-cc-logo",
          "sc-payment-method"
        ],
        "bundleId": "sc-cc-logo_2",
        "fileName": "sc-cc-logo_2.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 5174
      },
      {
        "key": "sc-product-line-item.sc-quantity-select.entry",
        "components": [
          "sc-product-line-item",
          "sc-quantity-select"
        ],
        "bundleId": "sc-product-line-item_2",
        "fileName": "sc-product-line-item_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 12921
      },
      {
        "key": "sc-choices.entry",
        "components": [
          "sc-choices"
        ],
        "bundleId": "sc-choices",
        "fileName": "sc-choices.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 3741
      },
      {
        "key": "sc-choice.entry",
        "components": [
          "sc-choice"
        ],
        "bundleId": "sc-choice",
        "fileName": "sc-choice.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "form-data-2d60f23e.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 12563
      },
      {
        "key": "sc-dialog.entry",
        "components": [
          "sc-dialog"
        ],
        "bundleId": "sc-dialog",
        "fileName": "sc-dialog.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "animation-registry-ec34572e.js"
        ],
        "originalByteSize": 9600
      },
      {
        "key": "sc-empty.sc-stacked-list.sc-stacked-list-row.entry",
        "components": [
          "sc-empty",
          "sc-stacked-list",
          "sc-stacked-list-row"
        ],
        "bundleId": "sc-empty_3",
        "fileName": "sc-empty_3.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 4283
      },
      {
        "key": "sc-format-date.entry",
        "components": [
          "sc-format-date"
        ],
        "bundleId": "sc-format-date",
        "fileName": "sc-format-date.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1126
      },
      {
        "key": "sc-text.entry",
        "components": [
          "sc-text"
        ],
        "bundleId": "sc-text",
        "fileName": "sc-text.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 1099
      },
      {
        "key": "sc-line-item.entry",
        "components": [
          "sc-line-item"
        ],
        "bundleId": "sc-line-item",
        "fileName": "sc-line-item.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 4355
      },
      {
        "key": "sc-form.entry",
        "components": [
          "sc-form"
        ],
        "bundleId": "sc-form",
        "fileName": "sc-form.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 3334
      },
      {
        "key": "sc-flex.entry",
        "components": [
          "sc-flex"
        ],
        "bundleId": "sc-flex",
        "fileName": "sc-flex.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1889
      },
      {
        "key": "sc-divider.entry",
        "components": [
          "sc-divider"
        ],
        "bundleId": "sc-divider",
        "fileName": "sc-divider.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1121
      },
      {
        "key": "sc-form-control.sc-input.entry",
        "components": [
          "sc-form-control",
          "sc-input"
        ],
        "bundleId": "sc-form-control_2",
        "fileName": "sc-form-control_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js",
          "page-align-8602c4c7.js",
          "form-data-2d60f23e.js"
        ],
        "originalByteSize": 16666
      },
      {
        "key": "sc-tag.entry",
        "components": [
          "sc-tag"
        ],
        "bundleId": "sc-tag",
        "fileName": "sc-tag.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 4270
      },
      {
        "key": "sc-card.sc-dashboard-module.entry",
        "components": [
          "sc-card",
          "sc-dashboard-module"
        ],
        "bundleId": "sc-card_2",
        "fileName": "sc-card_2.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "consumer-b5087188.js"
        ],
        "originalByteSize": 3331
      },
      {
        "key": "sc-format-number.entry",
        "components": [
          "sc-format-number"
        ],
        "bundleId": "sc-format-number",
        "fileName": "sc-format-number.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "utils-967e8d60.js"
        ],
        "originalByteSize": 1516
      },
      {
        "key": "sc-block-ui.entry",
        "components": [
          "sc-block-ui"
        ],
        "bundleId": "sc-block-ui",
        "fileName": "sc-block-ui.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1155
      },
      {
        "key": "sc-skeleton.entry",
        "components": [
          "sc-skeleton"
        ],
        "bundleId": "sc-skeleton",
        "fileName": "sc-skeleton.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 1557
      },
      {
        "key": "sc-tooltip.entry",
        "components": [
          "sc-tooltip"
        ],
        "bundleId": "sc-tooltip",
        "fileName": "sc-tooltip.entry.js",
        "imports": [
          "index-fd4790f6.js"
        ],
        "originalByteSize": 3886
      },
      {
        "key": "sc-alert.entry",
        "components": [
          "sc-alert"
        ],
        "bundleId": "sc-alert",
        "fileName": "sc-alert.entry.js",
        "imports": [
          "index-fd4790f6.js",
          "page-align-8602c4c7.js"
        ],
        "originalByteSize": 7114
      }
    ],
    "es5": [],
    "system": [],
    "commonjs": [
      {
        "key": "sc-avatar.sc-button.sc-dropdown.sc-icon.sc-menu.sc-menu-item.sc-spinner.entry",
        "components": [
          "sc-avatar",
          "sc-button",
          "sc-dropdown",
          "sc-icon",
          "sc-menu",
          "sc-menu-item",
          "sc-spinner"
        ],
        "bundleId": "sc-avatar_7.cjs",
        "fileName": "sc-avatar_7.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js",
          "library-289cf13f.js"
        ],
        "originalByteSize": 79017
      },
      {
        "key": "sc-badge-notice.entry",
        "components": [
          "sc-badge-notice"
        ],
        "bundleId": "sc-badge-notice.cjs",
        "fileName": "sc-badge-notice.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1476
      },
      {
        "key": "sc-breadcrumb.entry",
        "components": [
          "sc-breadcrumb"
        ],
        "bundleId": "sc-breadcrumb.cjs",
        "fileName": "sc-breadcrumb.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 3182
      },
      {
        "key": "sc-breadcrumbs.entry",
        "components": [
          "sc-breadcrumbs"
        ],
        "bundleId": "sc-breadcrumbs.cjs",
        "fileName": "sc-breadcrumbs.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 2218
      },
      {
        "key": "sc-button-group.entry",
        "components": [
          "sc-button-group"
        ],
        "bundleId": "sc-button-group.cjs",
        "fileName": "sc-button-group.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 2660
      },
      {
        "key": "sc-cart.entry",
        "components": [
          "sc-cart"
        ],
        "bundleId": "sc-cart.cjs",
        "fileName": "sc-cart.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "universe-28bdab41.js",
          "index-2840f0ff.js",
          "watchers-203d7acd.js",
          "ui-180b96fe.js",
          "add-query-args-17c551b6.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "index-f6f80680.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 6375
      },
      {
        "key": "sc-cart-form.entry",
        "components": [
          "sc-cart-form"
        ],
        "bundleId": "sc-cart-form.cjs",
        "fileName": "sc-cart-form.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "universe-28bdab41.js",
          "index-cf22257b.js",
          "index-2840f0ff.js",
          "watchers-203d7acd.js",
          "ui-180b96fe.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "index-f6f80680.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 5315
      },
      {
        "key": "sc-cart-form-submit.entry",
        "components": [
          "sc-cart-form-submit"
        ],
        "bundleId": "sc-cart-form-submit.cjs",
        "fileName": "sc-cart-form-submit.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 940
      },
      {
        "key": "sc-cart-header.entry",
        "components": [
          "sc-cart-header"
        ],
        "bundleId": "sc-cart-header.cjs",
        "fileName": "sc-cart-header.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 1454
      },
      {
        "key": "sc-cart-loader.entry",
        "components": [
          "sc-cart-loader"
        ],
        "bundleId": "sc-cart-loader.cjs",
        "fileName": "sc-cart-loader.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-203d7acd.js",
          "ui-180b96fe.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 1610
      },
      {
        "key": "sc-cart-submit.entry",
        "components": [
          "sc-cart-submit"
        ],
        "bundleId": "sc-cart-submit.cjs",
        "fileName": "sc-cart-submit.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 1011
      },
      {
        "key": "sc-charges-list.entry",
        "components": [
          "sc-charges-list"
        ],
        "bundleId": "sc-charges-list.cjs",
        "fileName": "sc-charges-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5188
      },
      {
        "key": "sc-checkbox.entry",
        "components": [
          "sc-checkbox"
        ],
        "bundleId": "sc-checkbox.cjs",
        "fileName": "sc-checkbox.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "form-data-9342e967.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 7850
      },
      {
        "key": "sc-checkout.entry",
        "components": [
          "sc-checkout"
        ],
        "bundleId": "sc-checkout.cjs",
        "fileName": "sc-checkout.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-203d7acd.js",
          "watchers-be62d6ad.js",
          "getters-c6087113.js",
          "store-6708f186.js",
          "universe-28bdab41.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "watchers-d5742848.js",
          "util-98cb3494.js"
        ],
        "originalByteSize": 10411
      },
      {
        "key": "sc-conditional-form.entry",
        "components": [
          "sc-conditional-form"
        ],
        "bundleId": "sc-conditional-form.cjs",
        "fileName": "sc-conditional-form.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-d5742848.js",
          "getters-6c916233.js",
          "index-f6f80680.js",
          "watchers-203d7acd.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5438
      },
      {
        "key": "sc-consumer.entry",
        "components": [
          "sc-consumer"
        ],
        "bundleId": "sc-consumer.cjs",
        "fileName": "sc-consumer.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 766
      },
      {
        "key": "sc-custom-order-price-input.entry",
        "components": [
          "sc-custom-order-price-input"
        ],
        "bundleId": "sc-custom-order-price-input.cjs",
        "fileName": "sc-custom-order-price-input.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "consumer-3f5ce850.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 3690
      },
      {
        "key": "sc-customer-edit.entry",
        "components": [
          "sc-customer-edit"
        ],
        "bundleId": "sc-customer-edit.cjs",
        "fileName": "sc-customer-edit.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5820
      },
      {
        "key": "sc-customer-email.entry",
        "components": [
          "sc-customer-email"
        ],
        "bundleId": "sc-customer-email.cjs",
        "fileName": "sc-customer-email.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "index-2840f0ff.js",
          "watchers-203d7acd.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "fetch-b673a242.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 4785
      },
      {
        "key": "sc-customer-firstname.entry",
        "components": [
          "sc-customer-firstname"
        ],
        "bundleId": "sc-customer-firstname.cjs",
        "fileName": "sc-customer-firstname.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 3318
      },
      {
        "key": "sc-customer-lastname.entry",
        "components": [
          "sc-customer-lastname"
        ],
        "bundleId": "sc-customer-lastname.cjs",
        "fileName": "sc-customer-lastname.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 3305
      },
      {
        "key": "sc-customer-name.entry",
        "components": [
          "sc-customer-name"
        ],
        "bundleId": "sc-customer-name.cjs",
        "fileName": "sc-customer-name.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "index-2840f0ff.js",
          "consumer-3f5ce850.js",
          "watchers-203d7acd.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "fetch-b673a242.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 4021
      },
      {
        "key": "sc-dashboard-customer-details.entry",
        "components": [
          "sc-dashboard-customer-details"
        ],
        "bundleId": "sc-dashboard-customer-details.cjs",
        "fileName": "sc-dashboard-customer-details.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 1757
      },
      {
        "key": "sc-dashboard-downloads-list.entry",
        "components": [
          "sc-dashboard-downloads-list"
        ],
        "bundleId": "sc-dashboard-downloads-list.cjs",
        "fileName": "sc-dashboard-downloads-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 3237
      },
      {
        "key": "sc-donation-choices.entry",
        "components": [
          "sc-donation-choices"
        ],
        "bundleId": "sc-donation-choices.cjs",
        "fileName": "sc-donation-choices.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 6038
      },
      {
        "key": "sc-downloads-list.entry",
        "components": [
          "sc-downloads-list"
        ],
        "bundleId": "sc-downloads-list.cjs",
        "fileName": "sc-downloads-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5606
      },
      {
        "key": "sc-express-payment.entry",
        "components": [
          "sc-express-payment"
        ],
        "bundleId": "sc-express-payment.cjs",
        "fileName": "sc-express-payment.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 2134
      },
      {
        "key": "sc-form-row.entry",
        "components": [
          "sc-form-row"
        ],
        "bundleId": "sc-form-row.cjs",
        "fileName": "sc-form-row.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1147
      },
      {
        "key": "sc-format-interval.entry",
        "components": [
          "sc-format-interval"
        ],
        "bundleId": "sc-format-interval.cjs",
        "fileName": "sc-format-interval.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "price-d3e21aa4.js"
        ],
        "originalByteSize": 564
      },
      {
        "key": "sc-invoices-list.entry",
        "components": [
          "sc-invoices-list"
        ],
        "bundleId": "sc-invoices-list.cjs",
        "fileName": "sc-invoices-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 6573
      },
      {
        "key": "sc-licenses-list.entry",
        "components": [
          "sc-licenses-list"
        ],
        "bundleId": "sc-licenses-list.cjs",
        "fileName": "sc-licenses-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 2511
      },
      {
        "key": "sc-line-item-bump.entry",
        "components": [
          "sc-line-item-bump"
        ],
        "bundleId": "sc-line-item-bump.cjs",
        "fileName": "sc-line-item-bump.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 1113
      },
      {
        "key": "sc-line-items.entry",
        "components": [
          "sc-line-items"
        ],
        "bundleId": "sc-line-items.cjs",
        "fileName": "sc-line-items.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "index-cf22257b.js",
          "price-d3e21aa4.js"
        ],
        "originalByteSize": 6046
      },
      {
        "key": "sc-login-form.entry",
        "components": [
          "sc-login-form"
        ],
        "bundleId": "sc-login-form.cjs",
        "fileName": "sc-login-form.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 7295
      },
      {
        "key": "sc-menu-divider.entry",
        "components": [
          "sc-menu-divider"
        ],
        "bundleId": "sc-menu-divider.cjs",
        "fileName": "sc-menu-divider.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 589
      },
      {
        "key": "sc-mollie-add-method.entry",
        "components": [
          "sc-mollie-add-method"
        ],
        "bundleId": "sc-mollie-add-method.cjs",
        "fileName": "sc-mollie-add-method.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 4668
      },
      {
        "key": "sc-order.entry",
        "components": [
          "sc-order"
        ],
        "bundleId": "sc-order.cjs",
        "fileName": "sc-order.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "price-d3e21aa4.js",
          "tax-39abdb3c.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 11312
      },
      {
        "key": "sc-order-confirmation.entry",
        "components": [
          "sc-order-confirmation"
        ],
        "bundleId": "sc-order-confirmation.cjs",
        "fileName": "sc-order-confirmation.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "universe-28bdab41.js",
          "get-query-arg-53bf21e2.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 4949
      },
      {
        "key": "sc-order-confirmation-customer.entry",
        "components": [
          "sc-order-confirmation-customer"
        ],
        "bundleId": "sc-order-confirmation-customer.cjs",
        "fileName": "sc-order-confirmation-customer.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 912
      },
      {
        "key": "sc-order-confirmation-details.entry",
        "components": [
          "sc-order-confirmation-details"
        ],
        "bundleId": "sc-order-confirmation-details.cjs",
        "fileName": "sc-order-confirmation-details.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 2874
      },
      {
        "key": "sc-order-coupon-form.entry",
        "components": [
          "sc-order-coupon-form"
        ],
        "bundleId": "sc-order-coupon-form.cjs",
        "fileName": "sc-order-coupon-form.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 2881
      },
      {
        "key": "sc-order-detail.entry",
        "components": [
          "sc-order-detail"
        ],
        "bundleId": "sc-order-detail.cjs",
        "fileName": "sc-order-detail.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 7223
      },
      {
        "key": "sc-order-password.entry",
        "components": [
          "sc-order-password"
        ],
        "bundleId": "sc-order-password.cjs",
        "fileName": "sc-order-password.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 3006
      },
      {
        "key": "sc-order-submit.entry",
        "components": [
          "sc-order-submit"
        ],
        "bundleId": "sc-order-submit.cjs",
        "fileName": "sc-order-submit.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "getters-6c916233.js",
          "getters-c6087113.js",
          "watchers-d5742848.js",
          "consumer-3f5ce850.js",
          "watchers-203d7acd.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "util-98cb3494.js"
        ],
        "originalByteSize": 3358
      },
      {
        "key": "sc-order-summary.entry",
        "components": [
          "sc-order-summary"
        ],
        "bundleId": "sc-order-summary.cjs",
        "fileName": "sc-order-summary.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-203d7acd.js",
          "getters-fd8a6c1d.js",
          "animation-registry-58bec802.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "store-6708f186.js"
        ],
        "originalByteSize": 7868
      },
      {
        "key": "sc-orders-list.entry",
        "components": [
          "sc-orders-list"
        ],
        "bundleId": "sc-orders-list.cjs",
        "fileName": "sc-orders-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 6939
      },
      {
        "key": "sc-password-nag.entry",
        "components": [
          "sc-password-nag"
        ],
        "bundleId": "sc-password-nag.cjs",
        "fileName": "sc-password-nag.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 3932
      },
      {
        "key": "sc-payment.entry",
        "components": [
          "sc-payment"
        ],
        "bundleId": "sc-payment.cjs",
        "fileName": "sc-payment.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-203d7acd.js",
          "watchers-be62d6ad.js",
          "getters-c6087113.js",
          "watchers-d5742848.js",
          "ManualPaymentMethods-c235e978.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "util-98cb3494.js"
        ],
        "originalByteSize": 5266
      },
      {
        "key": "sc-payment-methods-list.entry",
        "components": [
          "sc-payment-methods-list"
        ],
        "bundleId": "sc-payment-methods-list.cjs",
        "fileName": "sc-payment-methods-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 10105
      },
      {
        "key": "sc-paypal-add-method.entry",
        "components": [
          "sc-paypal-add-method"
        ],
        "bundleId": "sc-paypal-add-method.cjs",
        "fileName": "sc-paypal-add-method.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "functions-77ef3f22.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 4502
      },
      {
        "key": "sc-premium-tag.entry",
        "components": [
          "sc-premium-tag"
        ],
        "bundleId": "sc-premium-tag.cjs",
        "fileName": "sc-premium-tag.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 444
      },
      {
        "key": "sc-price-choice.entry",
        "components": [
          "sc-price-choice"
        ],
        "bundleId": "sc-price-choice.cjs",
        "fileName": "sc-price-choice.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "index-cf22257b.js",
          "price-d3e21aa4.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 27973
      },
      {
        "key": "sc-price-choices.entry",
        "components": [
          "sc-price-choices"
        ],
        "bundleId": "sc-price-choices.cjs",
        "fileName": "sc-price-choices.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "index-cf22257b.js"
        ],
        "originalByteSize": 1943
      },
      {
        "key": "sc-price-range.entry",
        "components": [
          "sc-price-range"
        ],
        "bundleId": "sc-price-range.cjs",
        "fileName": "sc-price-range.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1494
      },
      {
        "key": "sc-product-selected-price.entry",
        "components": [
          "sc-product-selected-price"
        ],
        "bundleId": "sc-product-selected-price.cjs",
        "fileName": "sc-product-selected-price.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "price-d3e21aa4.js",
          "getters-6c916233.js",
          "getters-fd8a6c1d.js",
          "watchers-203d7acd.js",
          "store-6708f186.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5293
      },
      {
        "key": "sc-prose.entry",
        "components": [
          "sc-prose"
        ],
        "bundleId": "sc-prose.cjs",
        "fileName": "sc-prose.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 4845
      },
      {
        "key": "sc-provider.entry",
        "components": [
          "sc-provider"
        ],
        "bundleId": "sc-provider.cjs",
        "fileName": "sc-provider.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1075
      },
      {
        "key": "sc-radio.entry",
        "components": [
          "sc-radio"
        ],
        "bundleId": "sc-radio.cjs",
        "fileName": "sc-radio.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "form-data-9342e967.js"
        ],
        "originalByteSize": 7246
      },
      {
        "key": "sc-radio-group.entry",
        "components": [
          "sc-radio-group"
        ],
        "bundleId": "sc-radio-group.cjs",
        "fileName": "sc-radio-group.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 2328
      },
      {
        "key": "sc-rich-text.entry",
        "components": [
          "sc-rich-text"
        ],
        "bundleId": "sc-rich-text.cjs",
        "fileName": "sc-rich-text.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 720776
      },
      {
        "key": "sc-stripe-add-method.entry",
        "components": [
          "sc-stripe-add-method"
        ],
        "bundleId": "sc-stripe-add-method.cjs",
        "fileName": "sc-stripe-add-method.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "pure-5be33f24.js",
          "fetch-b673a242.js",
          "_commonjsHelpers-537d719a.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 6600
      },
      {
        "key": "sc-stripe-element.entry",
        "components": [
          "sc-stripe-element"
        ],
        "bundleId": "sc-stripe-element.cjs",
        "fileName": "sc-stripe-element.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "pure-5be33f24.js",
          "consumer-3f5ce850.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "_commonjsHelpers-537d719a.js",
          "index-f6f80680.js",
          "util-98cb3494.js",
          "watchers-203d7acd.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 10792
      },
      {
        "key": "sc-stripe-payment-element.entry",
        "components": [
          "sc-stripe-payment-element"
        ],
        "bundleId": "sc-stripe-payment-element.cjs",
        "fileName": "sc-stripe-payment-element.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "pure-5be33f24.js",
          "consumer-3f5ce850.js",
          "watchers-d5742848.js",
          "add-query-args-17c551b6.js",
          "_commonjsHelpers-537d719a.js",
          "index-f6f80680.js"
        ],
        "originalByteSize": 10718
      },
      {
        "key": "sc-subscription.entry",
        "components": [
          "sc-subscription"
        ],
        "bundleId": "sc-subscription.cjs",
        "fileName": "sc-subscription.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 8004
      },
      {
        "key": "sc-subscription-ad-hoc-confirm.entry",
        "components": [
          "sc-subscription-ad-hoc-confirm"
        ],
        "bundleId": "sc-subscription-ad-hoc-confirm.cjs",
        "fileName": "sc-subscription-ad-hoc-confirm.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "price-d3e21aa4.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 1533
      },
      {
        "key": "sc-subscription-payment.entry",
        "components": [
          "sc-subscription-payment"
        ],
        "bundleId": "sc-subscription-payment.cjs",
        "fileName": "sc-subscription-payment.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5300
      },
      {
        "key": "sc-subscription-payment-method.entry",
        "components": [
          "sc-subscription-payment-method"
        ],
        "bundleId": "sc-subscription-payment-method.cjs",
        "fileName": "sc-subscription-payment-method.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 7438
      },
      {
        "key": "sc-subscription-switch.entry",
        "components": [
          "sc-subscription-switch"
        ],
        "bundleId": "sc-subscription-switch.cjs",
        "fileName": "sc-subscription-switch.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "price-d3e21aa4.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 11786
      },
      {
        "key": "sc-subscriptions-list.entry",
        "components": [
          "sc-subscriptions-list"
        ],
        "bundleId": "sc-subscriptions-list.cjs",
        "fileName": "sc-subscriptions-list.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 5643
      },
      {
        "key": "sc-tab.entry",
        "components": [
          "sc-tab"
        ],
        "bundleId": "sc-tab.cjs",
        "fileName": "sc-tab.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 4030
      },
      {
        "key": "sc-tab-group.entry",
        "components": [
          "sc-tab-group"
        ],
        "bundleId": "sc-tab-group.cjs",
        "fileName": "sc-tab-group.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 6265
      },
      {
        "key": "sc-tab-panel.entry",
        "components": [
          "sc-tab-panel"
        ],
        "bundleId": "sc-tab-panel.cjs",
        "fileName": "sc-tab-panel.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1200
      },
      {
        "key": "sc-table-head.entry",
        "components": [
          "sc-table-head"
        ],
        "bundleId": "sc-table-head.cjs",
        "fileName": "sc-table-head.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 463
      },
      {
        "key": "sc-upcoming-invoice.entry",
        "components": [
          "sc-upcoming-invoice"
        ],
        "bundleId": "sc-upcoming-invoice.cjs",
        "fileName": "sc-upcoming-invoice.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "lazy-bc8baeab.js",
          "price-d3e21aa4.js",
          "tax-39abdb3c.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 11979
      },
      {
        "key": "sc-upgrade-required.entry",
        "components": [
          "sc-upgrade-required"
        ],
        "bundleId": "sc-upgrade-required.cjs",
        "fileName": "sc-upgrade-required.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1981
      },
      {
        "key": "sc-wordpress-password-edit.entry",
        "components": [
          "sc-wordpress-password-edit"
        ],
        "bundleId": "sc-wordpress-password-edit.cjs",
        "fileName": "sc-wordpress-password-edit.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 2270
      },
      {
        "key": "sc-wordpress-user.entry",
        "components": [
          "sc-wordpress-user"
        ],
        "bundleId": "sc-wordpress-user.cjs",
        "fileName": "sc-wordpress-user.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 2929
      },
      {
        "key": "sc-wordpress-user-edit.entry",
        "components": [
          "sc-wordpress-user-edit"
        ],
        "bundleId": "sc-wordpress-user-edit.cjs",
        "fileName": "sc-wordpress-user-edit.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 2644
      },
      {
        "key": "sc-cancel-dialog.sc-subscription-next-payment.entry",
        "components": [
          "sc-cancel-dialog",
          "sc-subscription-next-payment"
        ],
        "bundleId": "sc-cancel-dialog_2.cjs",
        "fileName": "sc-cancel-dialog_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "price-d3e21aa4.js",
          "tax-39abdb3c.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 10527
      },
      {
        "key": "sc-cart-icon.sc-cart-session-provider.sc-drawer.sc-error.entry",
        "components": [
          "sc-cart-icon",
          "sc-cart-session-provider",
          "sc-drawer",
          "sc-error"
        ],
        "bundleId": "sc-cart-icon_4.cjs",
        "fileName": "sc-cart-icon_4.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "index-2840f0ff.js",
          "animation-registry-58bec802.js",
          "watchers-203d7acd.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "fetch-b673a242.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 18895
      },
      {
        "key": "sc-checkout-mollie-payment.entry",
        "components": [
          "sc-checkout-mollie-payment"
        ],
        "bundleId": "sc-checkout-mollie-payment.cjs",
        "fileName": "sc-checkout-mollie-payment.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-d5742848.js",
          "watchers-be62d6ad.js",
          "getters-c6087113.js",
          "watchers-203d7acd.js",
          "getters-6c916233.js",
          "mutations-5cf514b3.js",
          "fetch-b673a242.js",
          "ManualPaymentMethods-c235e978.js",
          "add-query-args-17c551b6.js",
          "index-f6f80680.js",
          "util-98cb3494.js"
        ],
        "originalByteSize": 5958
      },
      {
        "key": "sc-checkout-unsaved-changes-warning.sc-form-components-validator.sc-form-error-provider.sc-form-state-provider.sc-login-provider.sc-order-confirm-provider.sc-session-provider.entry",
        "components": [
          "sc-checkout-unsaved-changes-warning",
          "sc-form-components-validator",
          "sc-form-error-provider",
          "sc-form-state-provider",
          "sc-login-provider",
          "sc-order-confirm-provider",
          "sc-session-provider"
        ],
        "bundleId": "sc-checkout-unsaved-changes-warning_7.cjs",
        "fileName": "sc-checkout-unsaved-changes-warning_7.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "store-6708f186.js",
          "fetch-b673a242.js",
          "index-2840f0ff.js",
          "watchers-203d7acd.js",
          "mutations-5cf514b3.js",
          "add-query-args-17c551b6.js",
          "watchers-d5742848.js",
          "form-data-9342e967.js",
          "get-query-arg-53bf21e2.js",
          "index-f6f80680.js",
          "watchers-be62d6ad.js",
          "getters-c6087113.js",
          "util-98cb3494.js"
        ],
        "originalByteSize": 34166
      },
      {
        "key": "sc-choice-container.entry",
        "components": [
          "sc-choice-container"
        ],
        "bundleId": "sc-choice-container.cjs",
        "fileName": "sc-choice-container.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "form-data-9342e967.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 11036
      },
      {
        "key": "sc-heading.sc-order-confirm-components-validator.entry",
        "components": [
          "sc-heading",
          "sc-order-confirm-components-validator"
        ],
        "bundleId": "sc-heading_2.cjs",
        "fileName": "sc-heading_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 2764
      },
      {
        "key": "sc-order-confirmation-line-items.sc-order-confirmation-totals.entry",
        "components": [
          "sc-order-confirmation-line-items",
          "sc-order-confirmation-totals"
        ],
        "bundleId": "sc-order-confirmation-line-items_2.cjs",
        "fileName": "sc-order-confirmation-line-items_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "index-cf22257b.js",
          "price-d3e21aa4.js",
          "tax-39abdb3c.js"
        ],
        "originalByteSize": 6452
      },
      {
        "key": "sc-paypal-buttons.sc-secure-notice.entry",
        "components": [
          "sc-paypal-buttons",
          "sc-secure-notice"
        ],
        "bundleId": "sc-paypal-buttons_2.cjs",
        "fileName": "sc-paypal-buttons_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "functions-77ef3f22.js",
          "fetch-b673a242.js",
          "index-cf22257b.js",
          "index-2840f0ff.js",
          "add-query-args-17c551b6.js",
          "watchers-203d7acd.js",
          "index-f6f80680.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 9323
      },
      {
        "key": "sc-stripe-payment-request.entry",
        "components": [
          "sc-stripe-payment-request"
        ],
        "bundleId": "sc-stripe-payment-request.cjs",
        "fileName": "sc-stripe-payment-request.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "pure-5be33f24.js",
          "consumer-3f5ce850.js",
          "index-2840f0ff.js",
          "_commonjsHelpers-537d719a.js",
          "watchers-203d7acd.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "fetch-b673a242.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 15703
      },
      {
        "key": "sc-table.sc-table-cell.sc-table-row.entry",
        "components": [
          "sc-table",
          "sc-table-cell",
          "sc-table-row"
        ],
        "bundleId": "sc-table_3.cjs",
        "fileName": "sc-table_3.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 2219
      },
      {
        "key": "sc-toggles.entry",
        "components": [
          "sc-toggles"
        ],
        "bundleId": "sc-toggles.cjs",
        "fileName": "sc-toggles.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 2086
      },
      {
        "key": "sc-cancel-discount.sc-cancel-survey.sc-subscription-cancel.sc-textarea.entry",
        "components": [
          "sc-cancel-discount",
          "sc-cancel-survey",
          "sc-subscription-cancel",
          "sc-textarea"
        ],
        "bundleId": "sc-cancel-discount_4.cjs",
        "fileName": "sc-cancel-discount_4.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "price-d3e21aa4.js",
          "add-query-args-17c551b6.js",
          "form-data-9342e967.js"
        ],
        "originalByteSize": 20960
      },
      {
        "key": "sc-checkout-form-errors.entry",
        "components": [
          "sc-checkout-form-errors"
        ],
        "bundleId": "sc-checkout-form-errors.cjs",
        "fileName": "sc-checkout-form-errors.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 1999
      },
      {
        "key": "sc-column.sc-columns.entry",
        "components": [
          "sc-column",
          "sc-columns"
        ],
        "bundleId": "sc-column_2.cjs",
        "fileName": "sc-column_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 3457
      },
      {
        "key": "sc-coupon-form.entry",
        "components": [
          "sc-coupon-form"
        ],
        "bundleId": "sc-coupon-form.cjs",
        "fileName": "sc-coupon-form.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js",
          "price-d3e21aa4.js"
        ],
        "originalByteSize": 6967
      },
      {
        "key": "sc-customer-details.entry",
        "components": [
          "sc-customer-details"
        ],
        "bundleId": "sc-customer-details.cjs",
        "fileName": "sc-customer-details.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "_commonjsHelpers-537d719a.js",
          "address-23549efd.js",
          "tax-39abdb3c.js"
        ],
        "originalByteSize": 14663
      },
      {
        "key": "sc-compact-address.sc-line-item-tax.sc-order-bump.sc-order-bumps.sc-order-shipping-address.sc-order-tax-id-input.entry",
        "components": [
          "sc-compact-address",
          "sc-line-item-tax",
          "sc-order-bump",
          "sc-order-bumps",
          "sc-order-shipping-address",
          "sc-order-tax-id-input"
        ],
        "bundleId": "sc-compact-address_6.cjs",
        "fileName": "sc-compact-address_6.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "address-23549efd.js",
          "form-data-9342e967.js",
          "consumer-3f5ce850.js",
          "index-cf22257b.js",
          "price-d3e21aa4.js",
          "watchers-203d7acd.js",
          "mutations-5cf514b3.js",
          "index-2840f0ff.js",
          "index-f6f80680.js",
          "add-query-args-17c551b6.js",
          "watchers-be62d6ad.js",
          "watchers-d5742848.js",
          "getters-c6087113.js",
          "util-98cb3494.js",
          "fetch-b673a242.js",
          "get-query-arg-53bf21e2.js"
        ],
        "originalByteSize": 23969
      },
      {
        "key": "sc-line-item-total.entry",
        "components": [
          "sc-line-item-total"
        ],
        "bundleId": "sc-line-item-total.cjs",
        "fileName": "sc-line-item-total.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 3513
      },
      {
        "key": "sc-payment-method-choice.sc-payment-selected.entry",
        "components": [
          "sc-payment-method-choice",
          "sc-payment-selected"
        ],
        "bundleId": "sc-payment-method-choice_2.cjs",
        "fileName": "sc-payment-method-choice_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "watchers-d5742848.js",
          "index-f6f80680.js"
        ],
        "originalByteSize": 4059
      },
      {
        "key": "sc-purchase-downloads-list.sc-spacing.entry",
        "components": [
          "sc-purchase-downloads-list",
          "sc-spacing"
        ],
        "bundleId": "sc-purchase-downloads-list_2.cjs",
        "fileName": "sc-purchase-downloads-list_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 4315
      },
      {
        "key": "sc-switch.entry",
        "components": [
          "sc-switch"
        ],
        "bundleId": "sc-switch.cjs",
        "fileName": "sc-switch.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "form-data-9342e967.js"
        ],
        "originalByteSize": 8504
      },
      {
        "key": "sc-order-manual-instructions.entry",
        "components": [
          "sc-order-manual-instructions"
        ],
        "bundleId": "sc-order-manual-instructions.cjs",
        "fileName": "sc-order-manual-instructions.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 981
      },
      {
        "key": "sc-subscription-details.sc-subscription-status-badge.entry",
        "components": [
          "sc-subscription-details",
          "sc-subscription-status-badge"
        ],
        "bundleId": "sc-subscription-details_2.cjs",
        "fileName": "sc-subscription-details_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "fetch-b673a242.js",
          "price-d3e21aa4.js",
          "add-query-args-17c551b6.js"
        ],
        "originalByteSize": 11481
      },
      {
        "key": "sc-toggle.entry",
        "components": [
          "sc-toggle"
        ],
        "bundleId": "sc-toggle.cjs",
        "fileName": "sc-toggle.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "animation-registry-58bec802.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 7888
      },
      {
        "key": "sc-address.sc-select.sc-tax-id-input.entry",
        "components": [
          "sc-address",
          "sc-select",
          "sc-tax-id-input"
        ],
        "bundleId": "sc-address_3.cjs",
        "fileName": "sc-address_3.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "address-23549efd.js",
          "form-data-9342e967.js",
          "util-98cb3494.js",
          "tax-39abdb3c.js"
        ],
        "originalByteSize": 68502
      },
      {
        "key": "sc-format-bytes.entry",
        "components": [
          "sc-format-bytes"
        ],
        "bundleId": "sc-format-bytes.cjs",
        "fileName": "sc-format-bytes.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1264
      },
      {
        "key": "sc-line-items-provider.entry",
        "components": [
          "sc-line-items-provider"
        ],
        "bundleId": "sc-line-items-provider.cjs",
        "fileName": "sc-line-items-provider.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "index-cf22257b.js"
        ],
        "originalByteSize": 3582
      },
      {
        "key": "sc-order-status-badge.entry",
        "components": [
          "sc-order-status-badge"
        ],
        "bundleId": "sc-order-status-badge.cjs",
        "fileName": "sc-order-status-badge.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1564
      },
      {
        "key": "sc-price-input.entry",
        "components": [
          "sc-price-input"
        ],
        "bundleId": "sc-price-input.cjs",
        "fileName": "sc-price-input.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "price-d3e21aa4.js",
          "form-data-9342e967.js",
          "utils-806dad60.js"
        ],
        "originalByteSize": 4665
      },
      {
        "key": "sc-pagination.entry",
        "components": [
          "sc-pagination"
        ],
        "bundleId": "sc-pagination.cjs",
        "fileName": "sc-pagination.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1846
      },
      {
        "key": "sc-total.entry",
        "components": [
          "sc-total"
        ],
        "bundleId": "sc-total.cjs",
        "fileName": "sc-total.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 1146
      },
      {
        "key": "sc-menu-label.entry",
        "components": [
          "sc-menu-label"
        ],
        "bundleId": "sc-menu-label.cjs",
        "fileName": "sc-menu-label.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 801
      },
      {
        "key": "sc-cc-logo.sc-payment-method.entry",
        "components": [
          "sc-cc-logo",
          "sc-payment-method"
        ],
        "bundleId": "sc-cc-logo_2.cjs",
        "fileName": "sc-cc-logo_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 5382
      },
      {
        "key": "sc-product-line-item.sc-quantity-select.entry",
        "components": [
          "sc-product-line-item",
          "sc-quantity-select"
        ],
        "bundleId": "sc-product-line-item_2.cjs",
        "fileName": "sc-product-line-item_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 13237
      },
      {
        "key": "sc-choices.entry",
        "components": [
          "sc-choices"
        ],
        "bundleId": "sc-choices.cjs",
        "fileName": "sc-choices.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 3817
      },
      {
        "key": "sc-choice.entry",
        "components": [
          "sc-choice"
        ],
        "bundleId": "sc-choice.cjs",
        "fileName": "sc-choice.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "form-data-9342e967.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 12787
      },
      {
        "key": "sc-dialog.entry",
        "components": [
          "sc-dialog"
        ],
        "bundleId": "sc-dialog.cjs",
        "fileName": "sc-dialog.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "animation-registry-58bec802.js"
        ],
        "originalByteSize": 10022
      },
      {
        "key": "sc-empty.sc-stacked-list.sc-stacked-list-row.entry",
        "components": [
          "sc-empty",
          "sc-stacked-list",
          "sc-stacked-list-row"
        ],
        "bundleId": "sc-empty_3.cjs",
        "fileName": "sc-empty_3.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 4431
      },
      {
        "key": "sc-format-date.entry",
        "components": [
          "sc-format-date"
        ],
        "bundleId": "sc-format-date.cjs",
        "fileName": "sc-format-date.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1192
      },
      {
        "key": "sc-text.entry",
        "components": [
          "sc-text"
        ],
        "bundleId": "sc-text.cjs",
        "fileName": "sc-text.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 1184
      },
      {
        "key": "sc-line-item.entry",
        "components": [
          "sc-line-item"
        ],
        "bundleId": "sc-line-item.cjs",
        "fileName": "sc-line-item.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 4513
      },
      {
        "key": "sc-form.entry",
        "components": [
          "sc-form"
        ],
        "bundleId": "sc-form.cjs",
        "fileName": "sc-form.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 3404
      },
      {
        "key": "sc-flex.entry",
        "components": [
          "sc-flex"
        ],
        "bundleId": "sc-flex.cjs",
        "fileName": "sc-flex.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1964
      },
      {
        "key": "sc-divider.entry",
        "components": [
          "sc-divider"
        ],
        "bundleId": "sc-divider.cjs",
        "fileName": "sc-divider.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1220
      },
      {
        "key": "sc-form-control.sc-input.entry",
        "components": [
          "sc-form-control",
          "sc-input"
        ],
        "bundleId": "sc-form-control_2.cjs",
        "fileName": "sc-form-control_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js",
          "page-align-bf197eb4.js",
          "form-data-9342e967.js"
        ],
        "originalByteSize": 16898
      },
      {
        "key": "sc-tag.entry",
        "components": [
          "sc-tag"
        ],
        "bundleId": "sc-tag.cjs",
        "fileName": "sc-tag.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 4351
      },
      {
        "key": "sc-card.sc-dashboard-module.entry",
        "components": [
          "sc-card",
          "sc-dashboard-module"
        ],
        "bundleId": "sc-card_2.cjs",
        "fileName": "sc-card_2.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "consumer-3f5ce850.js"
        ],
        "originalByteSize": 3475
      },
      {
        "key": "sc-format-number.entry",
        "components": [
          "sc-format-number"
        ],
        "bundleId": "sc-format-number.cjs",
        "fileName": "sc-format-number.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "utils-806dad60.js"
        ],
        "originalByteSize": 1571
      },
      {
        "key": "sc-block-ui.entry",
        "components": [
          "sc-block-ui"
        ],
        "bundleId": "sc-block-ui.cjs",
        "fileName": "sc-block-ui.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1248
      },
      {
        "key": "sc-skeleton.entry",
        "components": [
          "sc-skeleton"
        ],
        "bundleId": "sc-skeleton.cjs",
        "fileName": "sc-skeleton.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 1632
      },
      {
        "key": "sc-tooltip.entry",
        "components": [
          "sc-tooltip"
        ],
        "bundleId": "sc-tooltip.cjs",
        "fileName": "sc-tooltip.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js"
        ],
        "originalByteSize": 3962
      },
      {
        "key": "sc-alert.entry",
        "components": [
          "sc-alert"
        ],
        "bundleId": "sc-alert.cjs",
        "fileName": "sc-alert.cjs.entry.js",
        "imports": [
          "index-9c866aeb.js",
          "page-align-bf197eb4.js"
        ],
        "originalByteSize": 7249
      }
    ]
  },
  "components": [
    {
      "tag": "sc-address",
      "path": "./src/components/ui/address/sc-address.js",
      "source": "./src/components/ui/address/sc-address.tsx",
      "elementRef": "el",
      "componentClassName": "ScAddress",
      "assetsDirs": [],
      "dependencies": [
        "sc-block-ui",
        "sc-dropdown",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-select",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-shipping-address"
      ],
      "directDependencies": [
        "sc-form-control",
        "sc-input",
        "sc-select",
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-customer-edit",
        "sc-order-shipping-address"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input__base - The inputs base element."
          },
          {
            "name": "part",
            "text": "select__base - The select boxes base element."
          },
          {
            "name": "part",
            "text": "input - The html input element."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          },
          {
            "name": "part",
            "text": "trigger - The select box trigger."
          },
          {
            "name": "part",
            "text": "panel - The select box panel."
          },
          {
            "name": "part",
            "text": "caret - The select box caret."
          },
          {
            "name": "part",
            "text": "search__base - The select search base."
          },
          {
            "name": "part",
            "text": "search__input - The select search input."
          },
          {
            "name": "part",
            "text": "search__form-control - The select search form control."
          },
          {
            "name": "part",
            "text": "menu__base - The select menu base."
          },
          {
            "name": "part",
            "text": "spinner__base  - The select spinner base."
          },
          {
            "name": "part",
            "text": "empty - The select empty message."
          },
          {
            "name": "part",
            "text": "block-ui - The block ui base component."
          },
          {
            "name": "part",
            "text": "block-ui__content - The block ui content (spinner)."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChangeAddress",
          "method": "scChangeAddress",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Address change event."
          },
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scInputAddress",
          "method": "scInputAddress",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Address change event."
          },
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-form-control",
        "sc-input",
        "sc-select",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "address",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    country: null,\n    city: null,\n    line_1: null,\n    line_2: null,\n    postal_code: null,\n    state: null,\n  }",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The address."
          },
          "internal": false
        },
        {
          "name": "names",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    name: 'shipping_name',\n    country: 'shipping_country',\n    city: 'shipping_city',\n    line_1: 'shipping_line_1',\n    line_2: 'shipping_line_2',\n    postal_code: 'shipping_postal_code',\n    state: 'shipping_state',\n  }",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "placeholders",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{}",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading?"
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this disabled?"
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The label for the field."
          },
          "internal": false
        },
        {
          "name": "showName",
          "type": "boolean",
          "attribute": "show-name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show name field?"
          },
          "internal": false
        },
        {
          "name": "showLine2",
          "type": "boolean",
          "attribute": "show-line-2",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show name field?"
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "showCity"
        },
        {
          "name": "showPostal"
        },
        {
          "name": "regions"
        },
        {
          "name": "countryChoices"
        }
      ]
    },
    {
      "tag": "sc-alert",
      "path": "./src/components/ui/alert/sc-alert.js",
      "source": "./src/components/ui/alert/sc-alert.tsx",
      "elementRef": "el",
      "componentClassName": "ScAlert",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-cart",
        "sc-cart-form",
        "sc-charges-list",
        "sc-checkout",
        "sc-checkout-form-errors",
        "sc-checkout-mollie-payment",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-dashboard-module",
        "sc-downloads-list",
        "sc-error",
        "sc-express-payment",
        "sc-form-error-provider",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-order",
        "sc-order-confirm-components-validator",
        "sc-order-confirm-provider",
        "sc-order-confirmation",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-order-coupon-form",
        "sc-order-manual-instructions",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-methods-list",
        "sc-paypal-add-method",
        "sc-price-choice",
        "sc-purchase-downloads-list",
        "sc-stripe-add-method",
        "sc-stripe-payment-request",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-cart-form",
        "sc-checkout",
        "sc-checkout-form-errors",
        "sc-checkout-mollie-payment",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-dashboard-module",
        "sc-error",
        "sc-login-form",
        "sc-login-provider",
        "sc-order-confirm-provider",
        "sc-order-confirmation",
        "sc-order-manual-instructions",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-methods-list",
        "sc-paypal-add-method",
        "sc-price-choice",
        "sc-stripe-add-method",
        "sc-stripe-payment-request",
        "sc-subscription-switch",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "icon - The alert icon."
          },
          {
            "name": "part",
            "text": "text - The alert text."
          },
          {
            "name": "part",
            "text": "title - The alert title."
          },
          {
            "name": "part",
            "text": "message - The alert message."
          },
          {
            "name": "part",
            "text": "close - The close icon."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scHide",
          "method": "scHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "When alert is hidden"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scShow",
          "method": "scShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "When alert is shown"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "show",
          "docs": {
            "text": "Shows the alert.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "hide",
          "docs": {
            "text": "Hides the alert",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates whether or not the alert is open. You can use this in lieu of the show/hide methods."
          },
          "internal": false
        },
        {
          "name": "title",
          "type": "string",
          "attribute": "title",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The title."
          },
          "internal": false
        },
        {
          "name": "closable",
          "type": "boolean",
          "attribute": "closable",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the alert closable."
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'primary'",
          "complexType": {
            "original": "'primary' | 'success' | 'info' | 'warning' | 'danger'",
            "resolved": "\"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The type of alert."
          },
          "internal": false
        },
        {
          "name": "duration",
          "type": "number",
          "attribute": "duration",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "Infinity",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The length of time, in milliseconds, the alert will show before closing itself. If the user interacts with\nthe alert before it closes (e.g. moves the mouse over it), the timer will restart. Defaults to `Infinity`."
          },
          "internal": false
        },
        {
          "name": "scrollOnOpen",
          "type": "boolean",
          "attribute": "scroll-on-open",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Scroll into view."
          },
          "internal": false
        },
        {
          "name": "scrollMargin",
          "type": "string",
          "attribute": "scroll-margin",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'0px'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Scroll margin"
          },
          "internal": false
        },
        {
          "name": "noIcon",
          "type": "boolean",
          "attribute": "no-icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "No icon"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "autoHideTimeout"
        }
      ]
    },
    {
      "tag": "sc-avatar",
      "path": "./src/components/ui/sc-avatar/sc-avatar.js",
      "source": "./src/components/ui/sc-avatar/sc-avatar.tsx",
      "elementRef": null,
      "componentClassName": "ScAvatar",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sl-icon"
      ],
      "properties": [
        {
          "name": "image",
          "type": "string",
          "attribute": "image",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The image source to use for the avatar."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "A label to use to describe the avatar to assistive devices."
          },
          "internal": false
        },
        {
          "name": "initials",
          "type": "string",
          "attribute": "initials",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Initials to use as a fallback when no image is available (1-2 characters max recommended)."
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "string",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'eager'",
          "complexType": {
            "original": "'eager' | 'lazy'",
            "resolved": "\"eager\" | \"lazy\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates how the browser should load the image."
          },
          "internal": false
        },
        {
          "name": "shape",
          "type": "string",
          "attribute": "shape",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'circle'",
          "complexType": {
            "original": "'circle' | 'square' | 'rounded'",
            "resolved": "\"circle\" | \"rounded\" | \"square\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The shape of the avatar."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasError"
        }
      ]
    },
    {
      "tag": "sc-badge-notice",
      "path": "./src/components/ui/badge-notice/sc-badge-notice.js",
      "source": "./src/components/ui/badge-notice/sc-badge-notice.tsx",
      "elementRef": null,
      "componentClassName": "ScBadgeNotice",
      "assetsDirs": [],
      "dependencies": [
        "sc-tag"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag"
      ],
      "properties": [
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'primary'",
          "complexType": {
            "original": "'primary' | 'success' | 'info' | 'warning' | 'danger' | 'default'",
            "resolved": "\"danger\" | \"default\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'small'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-block-ui",
      "path": "./src/components/ui/block-ui/sc-block-ui.js",
      "source": "./src/components/ui/block-ui/sc-block-ui.tsx",
      "elementRef": null,
      "componentClassName": "ScBlockUi",
      "assetsDirs": [],
      "dependencies": [
        "sc-spinner"
      ],
      "dependents": [
        "sc-address",
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cart",
        "sc-charges-list",
        "sc-checkout",
        "sc-checkout-mollie-payment",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-edit",
        "sc-dashboard-downloads-list",
        "sc-donation-choices",
        "sc-express-payment",
        "sc-form-components-validator",
        "sc-form-state-provider",
        "sc-invoices-list",
        "sc-login-form",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-coupon-form",
        "sc-order-shipping-address",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [
        "sc-spinner"
      ],
      "directDependents": [
        "sc-address",
        "sc-cancel-discount",
        "sc-cart",
        "sc-charges-list",
        "sc-checkout",
        "sc-checkout-mollie-payment",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-edit",
        "sc-donation-choices",
        "sc-express-payment",
        "sc-form-state-provider",
        "sc-invoices-list",
        "sc-login-form",
        "sc-mollie-add-method",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "content - The content (spinner)"
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-spinner"
      ],
      "properties": [
        {
          "name": "zIndex",
          "type": "number",
          "attribute": "z-index",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "transparent",
          "type": "boolean",
          "attribute": "transparent",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "spinner",
          "type": "boolean",
          "attribute": "spinner",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-breadcrumb",
      "path": "./src/components/ui/breadcrumb/sc-breadcrumb.js",
      "source": "./src/components/ui/breadcrumb/sc-breadcrumb.tsx",
      "elementRef": "el",
      "componentClassName": "ScBreadcrumb",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "label - The label."
          },
          {
            "name": "part",
            "text": "suffix - The suffix item."
          },
          {
            "name": "part",
            "text": "prefix - The prefix item."
          },
          {
            "name": "part",
            "text": "separator - The separator."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": true,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Optional URL to direct the user to when the breadcrumb item is activated. When set, a link will be rendered\ninternally. When unset, a button will be rendered instead."
          },
          "internal": false
        },
        {
          "name": "target",
          "type": "string",
          "attribute": "target",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": true,
          "complexType": {
            "original": "'_blank' | '_parent' | '_self' | '_top'",
            "resolved": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tells the browser where to open the link. Only used when `href` is set."
          },
          "internal": false
        },
        {
          "name": "rel",
          "type": "string",
          "attribute": "rel",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'noreferrer noopener'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The `rel` attribute to use on the link. Only used when `href` is set."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasPrefix"
        },
        {
          "name": "hasSuffix"
        }
      ]
    },
    {
      "tag": "sc-breadcrumbs",
      "path": "./src/components/ui/breadcrumbs/sc-breadcrumbs.js",
      "source": "./src/components/ui/breadcrumbs/sc-breadcrumbs.tsx",
      "elementRef": "el",
      "componentClassName": "ScBreadcrumbs",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "separator - The separator."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'Breadcrumb'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The label to use for the breadcrumb control. This will not be shown, but it will be announced by screen readers and\nother assistive devices."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-button",
      "path": "./src/components/ui/button/sc-button.js",
      "source": "./src/components/ui/button/sc-button.tsx",
      "elementRef": "button",
      "componentClassName": "ScButton",
      "assetsDirs": [],
      "dependencies": [
        "sc-spinner"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-cart-form-submit",
        "sc-cart-submit",
        "sc-charges-list",
        "sc-checkout",
        "sc-coupon-form",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-dialog",
        "sc-donation-choices",
        "sc-downloads-list",
        "sc-form-components-validator",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirm-provider",
        "sc-order-confirmation-customer",
        "sc-order-coupon-form",
        "sc-order-submit",
        "sc-order-tax-id-input",
        "sc-orders-list",
        "sc-pagination",
        "sc-password-nag",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-product-selected-price",
        "sc-purchase-downloads-list",
        "sc-rich-text",
        "sc-stripe-add-method",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-tax-id-input",
        "sc-upcoming-invoice",
        "sc-upgrade-required",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [
        "sc-spinner"
      ],
      "directDependents": [
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-cart-form-submit",
        "sc-cart-submit",
        "sc-charges-list",
        "sc-coupon-form",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dialog",
        "sc-donation-choices",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirm-provider",
        "sc-order-submit",
        "sc-orders-list",
        "sc-pagination",
        "sc-password-nag",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-product-selected-price",
        "sc-purchase-downloads-list",
        "sc-rich-text",
        "sc-stripe-add-method",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-tax-id-input",
        "sc-upcoming-invoice",
        "sc-upgrade-required",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "label - The button label."
          },
          {
            "name": "part",
            "text": "prefix - The button prefix."
          },
          {
            "name": "part",
            "text": "suffix - The button suffix."
          },
          {
            "name": "part",
            "text": "caret - The button caret."
          },
          {
            "name": "part",
            "text": "spinner - The button spinner."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the button loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the button gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-spinner"
      ],
      "properties": [
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'default'",
          "complexType": {
            "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
            "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button's type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button's size."
          },
          "internal": false
        },
        {
          "name": "caret",
          "type": "boolean",
          "attribute": "caret",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the button with a caret for use with dropdowns, popovers, etc."
          },
          "internal": false
        },
        {
          "name": "full",
          "type": "boolean",
          "attribute": "full",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the button full-width."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the button."
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the button in a loading state."
          },
          "internal": false
        },
        {
          "name": "outline",
          "type": "boolean",
          "attribute": "outline",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws an outlined button."
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the button in a busy state."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style button with rounded edges."
          },
          "internal": false
        },
        {
          "name": "circle",
          "type": "boolean",
          "attribute": "circle",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a circle button."
          },
          "internal": false
        },
        {
          "name": "submit",
          "type": "boolean",
          "attribute": "submit",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates if activating the button should submit the form. Ignored when `href` is set."
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "An optional name for the button. Ignored when `href` is set."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "An optional value for the button. Ignored when `href` is set."
          },
          "internal": false
        },
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`."
          },
          "internal": false
        },
        {
          "name": "target",
          "type": "string",
          "attribute": "target",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'_blank' | '_parent' | '_self' | '_top'",
            "resolved": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tells the browser where to open the link. Only used when `href` is set."
          },
          "internal": false
        },
        {
          "name": "download",
          "type": "string",
          "attribute": "download",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tells the browser to download the linked file as this filename. Only used when `href` is set."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        },
        {
          "name": "hasLabel"
        },
        {
          "name": "hasPrefix"
        },
        {
          "name": "hasSuffix"
        }
      ]
    },
    {
      "tag": "sc-button-group",
      "path": "./src/components/ui/sc-button-group/sc-button-group.js",
      "source": "./src/components/ui/sc-button-group/sc-button-group.tsx",
      "elementRef": "el",
      "componentClassName": "ScButtonGroup",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form-control"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form-control"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "separate",
          "type": "boolean",
          "attribute": "separate",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-cancel-dialog",
      "path": "./src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.js",
      "source": "./src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.tsx",
      "elementRef": null,
      "componentClassName": "ScCancelDialog",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-choice",
        "sc-choices",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-format-date",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-subscription-cancel",
        "sc-textarea",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-subscription"
      ],
      "directDependencies": [
        "sc-dialog",
        "sc-button",
        "sc-icon",
        "sc-subscription-cancel",
        "sc-cancel-survey",
        "sc-cancel-discount"
      ],
      "directDependents": [
        "sc-subscription"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scRequestClose",
          "method": "scRequestClose",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "'close-button' | 'keyboard' | 'overlay'",
            "resolved": "\"close-button\" | \"keyboard\" | \"overlay\"",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scRefresh",
          "method": "scRefresh",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dialog",
        "sc-button",
        "sc-icon",
        "sc-subscription-cancel",
        "sc-cancel-survey",
        "sc-cancel-discount"
      ],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "protocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "SubscriptionProtocol",
            "resolved": "SubscriptionProtocol",
            "references": {
              "SubscriptionProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "reasons"
        },
        {
          "name": "reason"
        },
        {
          "name": "step"
        },
        {
          "name": "comment"
        }
      ]
    },
    {
      "tag": "sc-cancel-discount",
      "path": "./src/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.js",
      "source": "./src/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.tsx",
      "elementRef": null,
      "componentClassName": "ScCancelDiscount",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-dashboard-module",
        "sc-flex",
        "sc-icon",
        "sc-spinner"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-subscription"
      ],
      "directDependencies": [
        "sc-dashboard-module",
        "sc-flex",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-cancel-dialog"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scCancel",
          "method": "scCancel",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPreserved",
          "method": "scPreserved",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dashboard-module",
        "sc-flex",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "reason",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "CancellationReason",
            "resolved": "CancellationReason",
            "references": {
              "CancellationReason": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "comment",
          "type": "string",
          "attribute": "comment",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "protocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "SubscriptionProtocol",
            "resolved": "SubscriptionProtocol",
            "references": {
              "SubscriptionProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-cancel-survey",
      "path": "./src/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.js",
      "source": "./src/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.tsx",
      "elementRef": null,
      "componentClassName": "ScCancelSurvey",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-choice",
        "sc-choices",
        "sc-dashboard-module",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-textarea",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-subscription"
      ],
      "directDependencies": [
        "sc-choice",
        "sc-skeleton",
        "sc-dashboard-module",
        "sc-form",
        "sc-choices",
        "sc-textarea",
        "sc-flex",
        "sc-button",
        "sc-icon"
      ],
      "directDependents": [
        "sc-cancel-dialog"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scAbandon",
          "method": "scAbandon",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSubmitReason",
          "method": "scSubmitReason",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "{ reason: CancellationReason; comment: string }",
            "resolved": "{ reason: CancellationReason; comment: string; }",
            "references": {
              "CancellationReason": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-choice",
        "sc-skeleton",
        "sc-dashboard-module",
        "sc-form",
        "sc-choices",
        "sc-textarea",
        "sc-flex",
        "sc-button",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "protocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "SubscriptionProtocol",
            "resolved": "SubscriptionProtocol",
            "references": {
              "SubscriptionProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "reasons",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "CancellationReason[]",
            "resolved": "CancellationReason[]",
            "references": {
              "CancellationReason": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "selectedReason"
        },
        {
          "name": "comment"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-card",
      "path": "./src/components/ui/card/sc-card.js",
      "source": "./src/components/ui/card/sc-card.tsx",
      "elementRef": "el",
      "componentClassName": "ScCard",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-charges-list",
        "sc-checkout-mollie-payment",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-login-form",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-method-choice",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-charges-list",
        "sc-checkout-mollie-payment",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-login-form",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-method-choice",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "noDivider",
          "type": "boolean",
          "attribute": "no-divider",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Eliminate the divider"
          },
          "internal": false
        },
        {
          "name": "borderless",
          "type": "boolean",
          "attribute": "borderless",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this card borderless."
          },
          "internal": false
        },
        {
          "name": "noPadding",
          "type": "boolean",
          "attribute": "no-padding",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Remove padding"
          },
          "internal": false
        },
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "A link for the card."
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this card loading."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasTitleSlot"
        }
      ]
    },
    {
      "tag": "sc-cart",
      "path": "./src/components/controllers/cart/sc-cart/sc-cart.js",
      "source": "./src/components/controllers/cart/sc-cart/sc-cart.tsx",
      "elementRef": null,
      "componentClassName": "ScCart",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-cart-icon",
        "sc-cart-session-provider",
        "sc-drawer",
        "sc-error",
        "sc-icon",
        "sc-line-items-provider",
        "sc-spinner"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-cart-session-provider",
        "sc-cart-icon",
        "sc-drawer",
        "sc-error",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scSetState",
          "method": "handleSetState",
          "capture": false,
          "passive": false
        },
        {
          "name": "scError",
          "method": "handleErrorEvent",
          "capture": false,
          "passive": false
        },
        {
          "name": "scCloseCart",
          "method": "handleCloseCart",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-cart-session-provider",
        "sc-cart-icon",
        "sc-drawer",
        "sc-error",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "formId",
          "type": "string",
          "attribute": "form-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The form id to use for the cart."
          },
          "internal": false
        },
        {
          "name": "header",
          "type": "string",
          "attribute": "header",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The header for the popout."
          },
          "internal": false
        },
        {
          "name": "checkoutLink",
          "type": "string",
          "attribute": "checkout-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "cartTemplate",
          "type": "string",
          "attribute": "cart-template",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The template for the cart to inject when opened."
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'live'",
          "complexType": {
            "original": "'test' | 'live'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Are we in test or live mode."
          },
          "internal": false
        },
        {
          "name": "checkoutUrl",
          "type": "string",
          "attribute": "checkout-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The checkout url for the button."
          },
          "internal": false
        },
        {
          "name": "alwaysShow",
          "type": "boolean",
          "attribute": "always-show",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we force show the cart, even if there's a form on the page?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "open"
        },
        {
          "name": "uiState"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-cart-form",
      "path": "./src/components/controllers/cart/sc-cart-form/sc-cart-form.js",
      "source": "./src/components/controllers/cart/sc-cart-form/sc-cart-form.tsx",
      "elementRef": null,
      "componentClassName": "ScCartForm",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-form",
        "sc-icon"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form",
        "sc-alert"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form",
        "sc-alert"
      ],
      "properties": [
        {
          "name": "quantity",
          "type": "number",
          "attribute": "quantity",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The quantity"
          },
          "internal": false
        },
        {
          "name": "priceId",
          "type": "string",
          "attribute": "price-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The price id to add."
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'live'",
          "complexType": {
            "original": "'test' | 'live'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Are we in test or live mode."
          },
          "internal": false
        },
        {
          "name": "formId",
          "type": "string",
          "attribute": "form-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The form id to use for the cart."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "order"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-cart-form-submit",
      "path": "./src/components/controllers/cart/cart-form-submit/sc-cart-form-submit.js",
      "source": "./src/components/controllers/cart/cart-form-submit/sc-cart-form-submit.tsx",
      "elementRef": null,
      "componentClassName": "ScCartFormSubmit",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-icon",
        "sc-spinner"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-button",
        "sc-icon"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-button",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the cart busy"
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'primary'",
          "complexType": {
            "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
            "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button's size."
          },
          "internal": false
        },
        {
          "name": "full",
          "type": "boolean",
          "attribute": "full",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show a full-width button."
          },
          "internal": false
        },
        {
          "name": "icon",
          "type": "string",
          "attribute": "icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Icon to show."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-cart-header",
      "path": "./src/components/controllers/cart/cart-header/sc-cart-header.js",
      "source": "./src/components/controllers/cart/cart-header/sc-cart-header.tsx",
      "elementRef": null,
      "componentClassName": "ScCartHeader",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon",
        "sc-tag"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-icon",
        "sc-tag"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scCloseCart",
          "method": "scCloseCart",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon",
        "sc-tag"
      ],
      "properties": [
        {
          "name": "lineItems",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Array<LineItem>",
            "resolved": "LineItem[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "LineItem": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-cart-icon",
      "path": "./src/components/ui/sc-cart-icon/sc-cart-icon.js",
      "source": "./src/components/ui/sc-cart-icon/sc-cart-icon.tsx",
      "elementRef": null,
      "componentClassName": "ScCartIcon",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-cart"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-cart"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "container - The container."
          },
          {
            "name": "part",
            "text": "icon__base - The icon base wrapper."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "icon",
          "type": "string",
          "attribute": "icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'shopping-bag'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The icon to show."
          },
          "internal": false
        },
        {
          "name": "count",
          "type": "number",
          "attribute": "count",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The count to show in the cart icon."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-cart-loader",
      "path": "./src/components/controllers/cart/sc-cart-loader/sc-cart-loader.js",
      "source": "./src/components/controllers/cart/sc-cart-loader/sc-cart-loader.tsx",
      "elementRef": null,
      "componentClassName": "ScCartLoader",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "formId",
          "type": "string",
          "attribute": "form-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The form id to use for the cart."
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'live'",
          "complexType": {
            "original": "'live' | 'test'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The mode for the form."
          },
          "internal": false
        },
        {
          "name": "template",
          "type": "string",
          "attribute": "template",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The cart template to inject when opened."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-cart-session-provider",
      "path": "./src/components/providers/cart-session-provider/sc-cart-session-provider.js",
      "source": "./src/components/providers/cart-session-provider/sc-cart-session-provider.tsx",
      "elementRef": "el",
      "componentClassName": "ScCartSessionProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-line-items-provider"
      ],
      "dependents": [
        "sc-cart"
      ],
      "directDependencies": [
        "sc-line-items-provider"
      ],
      "directDependents": [
        "sc-cart"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update line items event"
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Error event"
          },
          "complexType": {
            "original": "{ message: string; code?: string; data?: any; additional_errors?: any } | {}",
            "resolved": "{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state"
          },
          "complexType": {
            "original": "'loading' | 'busy' | 'navigating' | 'idle'",
            "resolved": "\"busy\" | \"idle\" | \"loading\" | \"navigating\"",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scUpdateOrder",
          "method": "handleUpdateSession",
          "capture": false,
          "passive": false
        },
        {
          "name": "scApplyCoupon",
          "method": "handleCouponApply",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-items-provider"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Order Object"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "session"
        }
      ]
    },
    {
      "tag": "sc-cart-submit",
      "path": "./src/components/controllers/cart/cart-submit/sc-cart-submit.js",
      "source": "./src/components/controllers/cart/cart-submit/sc-cart-submit.tsx",
      "elementRef": null,
      "componentClassName": "ScCartSubmit",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-icon",
        "sc-spinner"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-button",
        "sc-icon"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-button",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the cart busy"
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'primary'",
          "complexType": {
            "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
            "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button's size."
          },
          "internal": false
        },
        {
          "name": "full",
          "type": "boolean",
          "attribute": "full",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show a full-width button."
          },
          "internal": false
        },
        {
          "name": "checkoutLink",
          "type": "string",
          "attribute": "checkout-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "icon",
          "type": "string",
          "attribute": "icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Icon to show."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-cc-logo",
      "path": "./src/components/ui/cc-logo/sc-cc-logo.js",
      "source": "./src/components/ui/cc-logo/sc-cc-logo.tsx",
      "elementRef": null,
      "componentClassName": "ScCcLogo",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-order",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-payment-method"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "brand",
          "type": "string",
          "attribute": "brand",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-charges-list",
      "path": "./src/components/controllers/dashboard/charges-list/sc-charges-list.js",
      "source": "./src/components/controllers/dashboard/charges-list/sc-charges-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScChargesList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-flex",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-pagination",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-text"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-format-date",
        "sc-text",
        "sc-format-number",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-stacked-list",
        "sc-pagination",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-format-date",
        "sc-text",
        "sc-format-number",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-stacked-list",
        "sc-pagination",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
          "complexType": {
            "original": "{\n    page: number;\n    per_page: number;\n  }",
            "resolved": "{ page: number; per_page: number; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Query to fetch charges"
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "showPagination",
          "type": "boolean",
          "attribute": "show-pagination",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "allLink",
          "type": "string",
          "attribute": "all-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "charges"
        },
        {
          "name": "loading"
        },
        {
          "name": "loaded"
        },
        {
          "name": "error"
        },
        {
          "name": "pagination"
        }
      ]
    },
    {
      "tag": "sc-checkbox",
      "path": "./src/components/ui/checkbox/sc-checkbox.js",
      "source": "./src/components/ui/checkbox/sc-checkbox.tsx",
      "elementRef": "el",
      "componentClassName": "ScCheckbox",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "control - The control wrapper."
          },
          {
            "name": "part",
            "text": "checked-icon - Checked icon."
          },
          {
            "name": "part",
            "text": "indeterminate-icon - Indeterminate icon."
          },
          {
            "name": "part",
            "text": "label - The label."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's checked state changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "triggerClick",
          "docs": {
            "text": "Simulates a click on the checkbox.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerFocus",
          "docs": {
            "text": "Sets focus on the checkbox.",
            "tags": []
          },
          "complexType": {
            "signature": "(options?: FocusOptions) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FocusOptions": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerBlur",
          "docs": {
            "text": "Removes focus from the checkbox.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The checkbox's name attribute."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The checkbox's value attribute."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the checkbox."
          },
          "internal": false
        },
        {
          "name": "edit",
          "type": "boolean",
          "attribute": "edit",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes this edit and not editable."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the checkbox a required field."
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the checkbox in a checked state."
          },
          "internal": false
        },
        {
          "name": "indeterminate",
          "type": "boolean",
          "attribute": "indeterminate",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the checkbox in an indeterminate state."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        }
      ]
    },
    {
      "tag": "sc-checkout",
      "path": "./src/components/controllers/checkout-form/checkout/sc-checkout.js",
      "source": "./src/components/controllers/checkout-form/checkout/sc-checkout.tsx",
      "elementRef": "el",
      "componentClassName": "ScCheckout",
      "assetsDirs": [],
      "dependencies": [
        "sc-address",
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-checkout-form-errors",
        "sc-checkout-unsaved-changes-warning",
        "sc-choice",
        "sc-compact-address",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-divider",
        "sc-dropdown",
        "sc-form",
        "sc-form-components-validator",
        "sc-form-control",
        "sc-form-error-provider",
        "sc-form-state-provider",
        "sc-format-number",
        "sc-icon",
        "sc-input",
        "sc-line-item",
        "sc-line-item-tax",
        "sc-line-items-provider",
        "sc-login-provider",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-order-bump",
        "sc-order-bumps",
        "sc-order-confirm-provider",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-select",
        "sc-session-provider",
        "sc-spinner",
        "sc-tax-id-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-alert",
        "sc-checkout-unsaved-changes-warning",
        "sc-login-provider",
        "sc-form-state-provider",
        "sc-form-error-provider",
        "sc-form-components-validator",
        "sc-order-confirm-provider",
        "sc-session-provider",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scOrderUpdated",
          "method": "scOrderUpdated",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Checkout has been updated."
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scOrderFinalized",
          "method": "scOrderFinalized",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Checkout has been finalized."
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scOrderError",
          "method": "scOrderError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Checkout has an error."
          },
          "complexType": {
            "original": "ResponseError",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scUpdateOrderState",
          "method": "handleOrderStateUpdate",
          "capture": false,
          "passive": false
        },
        {
          "name": "scSetMethod",
          "method": "handleMethodChange",
          "capture": false,
          "passive": false
        },
        {
          "name": "scAddEntities",
          "method": "handleAddEntities",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "submit",
          "docs": {
            "text": "Submit the form",
            "tags": []
          },
          "complexType": {
            "signature": "({ skip_validation }?: { skip_validation: boolean; }) => Promise<Checkout | NodeJS.Timeout>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              },
              "NodeJS": {
                "location": "global"
              }
            },
            "return": "Promise<Checkout | Timeout>"
          },
          "internal": false
        },
        {
          "name": "validate",
          "docs": {
            "text": "Validate the form.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              },
              "HTMLScFormElement": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-alert",
        "sc-checkout-unsaved-changes-warning",
        "sc-login-provider",
        "sc-form-state-provider",
        "sc-form-error-provider",
        "sc-form-components-validator",
        "sc-order-confirm-provider",
        "sc-session-provider",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "prices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<PriceChoice>",
            "resolved": "PriceChoice[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "PriceChoice": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "An array of prices to pre-fill in the form."
          },
          "internal": false
        },
        {
          "name": "product",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Product",
            "resolved": "Product",
            "references": {
              "Product": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "A product to pre-fill the form."
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'live'",
          "complexType": {
            "original": "'test' | 'live'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Are we in test or live mode."
          },
          "internal": false
        },
        {
          "name": "formId",
          "type": "number",
          "attribute": "form-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The checkout form id"
          },
          "internal": false
        },
        {
          "name": "modified",
          "type": "string",
          "attribute": "modified",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "When the form was modified."
          },
          "internal": false
        },
        {
          "name": "currencyCode",
          "type": "string",
          "attribute": "currency-code",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'usd'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency to use for this checkout."
          },
          "internal": false
        },
        {
          "name": "persistSession",
          "type": "boolean",
          "attribute": "persist-session",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Whether to persist the session in the browser between visits."
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Where to go on success"
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Stores the current customer"
          },
          "internal": false
        },
        {
          "name": "alignment",
          "type": "string",
          "attribute": "alignment",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'center' | 'wide' | 'full'",
            "resolved": "\"center\" | \"full\" | \"wide\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Alignment"
          },
          "internal": false
        },
        {
          "name": "taxProtocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "TaxProtocol",
            "resolved": "TaxProtocol",
            "references": {
              "TaxProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The account tax protocol"
          },
          "internal": false
        },
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this user logged in?"
          },
          "internal": false
        },
        {
          "name": "disableComponentsValidation",
          "type": "boolean",
          "attribute": "disable-components-validation",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we disable components validation"
          },
          "internal": false
        },
        {
          "name": "processors",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Processor[]",
            "resolved": "Processor[]",
            "references": {
              "Processor": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Processors enabled for this form."
          },
          "internal": false
        },
        {
          "name": "manualPaymentMethods",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ManualPaymentMethod[]",
            "resolved": "ManualPaymentMethod[]",
            "references": {
              "ManualPaymentMethod": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Manual payment methods enabled for this form."
          },
          "internal": false
        },
        {
          "name": "editLineItems",
          "type": "boolean",
          "attribute": "edit-line-items",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Can we edit line items?"
          },
          "internal": false
        },
        {
          "name": "removeLineItems",
          "type": "boolean",
          "attribute": "remove-line-items",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Can we remove line items?"
          },
          "internal": false
        },
        {
          "name": "abandonedCheckoutReturnUrl",
          "type": "string",
          "attribute": "abandoned-checkout-return-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The abandoned checkout return url."
          },
          "internal": false
        },
        {
          "name": "stripePaymentElement",
          "type": "boolean",
          "attribute": "stripe-payment-element",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Use the Stripe payment element."
          },
          "internal": false
        },
        {
          "name": "loadingText",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "{\n    finalizing: string;\n    paying: string;\n    confirming: string;\n    confirmed: string;\n  }",
            "resolved": "{ finalizing: string; paying: string; confirming: string; confirmed: string; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Text for the loading states of the form."
          },
          "internal": false
        },
        {
          "name": "successText",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "{\n    title: string;\n    description: string;\n    button: string;\n  }",
            "resolved": "{ title: string; description: string; button: string; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Success text for the form."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "pricesEntities"
        },
        {
          "name": "productsEntities"
        },
        {
          "name": "checkoutState"
        },
        {
          "name": "error"
        },
        {
          "name": "processor"
        },
        {
          "name": "method"
        },
        {
          "name": "isManualProcessor"
        },
        {
          "name": "paymentIntents"
        },
        {
          "name": "isDuplicate"
        }
      ]
    },
    {
      "tag": "sc-checkout-form-errors",
      "path": "./src/components/controllers/checkout-form/checkout-form-errors/sc-checkout-form-errors.js",
      "source": "./src/components/controllers/checkout-form/checkout-form-errors/sc-checkout-form-errors.tsx",
      "elementRef": null,
      "componentClassName": "ScCheckoutFormErrors",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-error-provider"
      ],
      "directDependencies": [
        "sc-alert"
      ],
      "directDependents": [
        "sc-form-error-provider"
      ],
      "docs": {
        "tags": [],
        "text": "This component listens for a confirmed event and redirects to the success url."
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert"
      ],
      "properties": [
        {
          "name": "checkoutState",
          "type": "string",
          "attribute": "checkout-state",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "FormState",
            "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
            "references": {
              "FormState": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The current order."
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ResponseError | null",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Error to display."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-checkout-mollie-payment",
      "path": "./src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.js",
      "source": "./src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.tsx",
      "elementRef": null,
      "componentClassName": "ScCheckoutMolliePayment",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-card",
        "sc-divider",
        "sc-icon",
        "sc-payment-method-choice",
        "sc-payment-selected",
        "sc-skeleton",
        "sc-spinner"
      ],
      "dependents": [
        "sc-payment"
      ],
      "directDependencies": [
        "sc-card",
        "sc-skeleton",
        "sc-alert",
        "sc-payment-method-choice",
        "sc-payment-selected",
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-payment"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Error event"
          },
          "complexType": {
            "original": "ResponseError",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-card",
        "sc-skeleton",
        "sc-alert",
        "sc-payment-method-choice",
        "sc-payment-selected",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "processorId",
          "type": "string",
          "attribute": "processor-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "method",
          "type": "string",
          "attribute": "method",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "error"
        },
        {
          "name": "methods"
        }
      ]
    },
    {
      "tag": "sc-checkout-unsaved-changes-warning",
      "path": "./src/components/providers/checkout-unsaved-changes-warning/sc-checkout-unsaved-changes-warning.js",
      "source": "./src/components/providers/checkout-unsaved-changes-warning/sc-checkout-unsaved-changes-warning.tsx",
      "elementRef": null,
      "componentClassName": "ScCheckoutUnsavedChangesWarning",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "state",
          "type": "string",
          "attribute": "state",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "FormState",
            "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
            "references": {
              "FormState": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-choice",
      "path": "./src/components/ui/choice/sc-choice.js",
      "source": "./src/components/ui/choice/sc-choice.tsx",
      "elementRef": "el",
      "componentClassName": "ScChoice",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-checkout",
        "sc-form-components-validator",
        "sc-order-bump",
        "sc-order-bumps",
        "sc-subscription",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-cancel-survey",
        "sc-order-bump",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's checked state changes."
          },
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "click",
          "method": "handleClickEvent",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "triggerClick",
          "docs": {
            "text": "Simulates a click on the choice.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerFocus",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        },
        {
          "name": "setCustomValidity",
          "docs": {
            "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "(message: string) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The choice name attribute"
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The choice value"
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'radio'",
          "complexType": {
            "original": "'radio' | 'checkbox'",
            "resolved": "\"checkbox\" | \"radio\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The choice name attribute"
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the choice disabled"
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the choice in a checked state."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required"
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the label"
          },
          "internal": false
        },
        {
          "name": "showPrice",
          "type": "boolean",
          "attribute": "show-price",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the price"
          },
          "internal": false
        },
        {
          "name": "showControl",
          "type": "boolean",
          "attribute": "show-control",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the radio/checkbox control"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        },
        {
          "name": "isStacked"
        },
        {
          "name": "hasDefaultSlot"
        },
        {
          "name": "hasPrice"
        },
        {
          "name": "hasPer"
        },
        {
          "name": "hasDescription"
        }
      ]
    },
    {
      "tag": "sc-choice-container",
      "path": "./src/components/ui/choice-container/sc-choice-container.js",
      "source": "./src/components/ui/choice-container/sc-choice-container.tsx",
      "elementRef": "el",
      "componentClassName": "ScChoiceContainer",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-price-choice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-price-choice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's checked state changes."
          },
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "click",
          "method": "handleClickEvent",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "triggerClick",
          "docs": {
            "text": "Simulates a click on the choice.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerFocus",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        },
        {
          "name": "setCustomValidity",
          "docs": {
            "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "(message: string) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The choice name attribute"
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The choice value"
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'radio'",
          "complexType": {
            "original": "'radio' | 'checkbox'",
            "resolved": "\"checkbox\" | \"radio\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The choice name attribute"
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the choice disabled"
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the choice in a checked state."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required"
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
          },
          "internal": false
        },
        {
          "name": "showControl",
          "type": "boolean",
          "attribute": "show-control",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the radio/checkbox control"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        }
      ]
    },
    {
      "tag": "sc-choices",
      "path": "./src/components/ui/choices/sc-choices.js",
      "source": "./src/components/ui/choices/sc-choices.tsx",
      "elementRef": "el",
      "componentClassName": "ScChoices",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-donation-choices",
        "sc-price-choices",
        "sc-subscription",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch"
      ],
      "directDependencies": [
        "sc-form-control"
      ],
      "directDependents": [
        "sc-cancel-survey",
        "sc-donation-choices",
        "sc-price-choices",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "choices - The choices wrapper."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "triggerFocus",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-form-control"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The group label. Required for proper accessibility. Alternatively, you can use the label slot."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Input size"
          },
          "internal": false
        },
        {
          "name": "autoWidth",
          "type": "boolean",
          "attribute": "auto-width",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Required"
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "hideLabel",
          "type": "boolean",
          "attribute": "hide-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Hides the fieldset and legend that surrounds the group. The label will still be read by screen readers."
          },
          "internal": false
        },
        {
          "name": "columns",
          "type": "number",
          "attribute": "columns",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Number of columns on desktop"
          },
          "internal": false
        },
        {
          "name": "errorMessage",
          "type": "string",
          "attribute": "error-message",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Validation error message."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "width"
        }
      ]
    },
    {
      "tag": "sc-column",
      "path": "./src/components/ui/column/sc-column.js",
      "source": "./src/components/ui/column/sc-column.tsx",
      "elementRef": null,
      "componentClassName": "ScColumn",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-customer-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-customer-edit",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-columns",
      "path": "./src/components/ui/columns/sc-columns.js",
      "source": "./src/components/ui/columns/sc-columns.tsx",
      "elementRef": null,
      "componentClassName": "ScColumns",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-customer-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-customer-edit",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "verticalAlignment",
          "type": "string",
          "attribute": "vertical-alignment",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The vertical alignment of the columns."
          },
          "internal": false
        },
        {
          "name": "isStackedOnMobile",
          "type": "boolean",
          "attribute": "is-stacked-on-mobile",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this stacked on mobile"
          },
          "internal": false
        },
        {
          "name": "isFullHeight",
          "type": "boolean",
          "attribute": "is-full-height",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this full vertical height"
          },
          "internal": false
        },
        {
          "name": "isReversedOnMobile",
          "type": "boolean",
          "attribute": "is-reversed-on-mobile",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this reverse ordered on mobile"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-compact-address",
      "path": "./src/components/ui/sc-compact-address/sc-compact-address.js",
      "source": "./src/components/ui/sc-compact-address/sc-compact-address.tsx",
      "elementRef": "el",
      "componentClassName": "ScCompactAddress",
      "assetsDirs": [],
      "dependencies": [
        "sc-block-ui",
        "sc-dropdown",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-select",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-components-validator",
        "sc-order-shipping-address"
      ],
      "directDependencies": [
        "sc-form-control",
        "sc-select",
        "sc-input",
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-order-shipping-address"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input__base - The inputs base element."
          },
          {
            "name": "part",
            "text": "select__base - The select boxes base element."
          },
          {
            "name": "part",
            "text": "input - The html input element."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          },
          {
            "name": "part",
            "text": "trigger - The select box trigger."
          },
          {
            "name": "part",
            "text": "panel - The select box panel."
          },
          {
            "name": "part",
            "text": "caret - The select box caret."
          },
          {
            "name": "part",
            "text": "search__base - The select search base."
          },
          {
            "name": "part",
            "text": "search__input - The select search input."
          },
          {
            "name": "part",
            "text": "search__form-control - The select search form control."
          },
          {
            "name": "part",
            "text": "menu__base - The select menu base."
          },
          {
            "name": "part",
            "text": "spinner__base  - The select spinner base."
          },
          {
            "name": "part",
            "text": "empty - The select empty message."
          },
          {
            "name": "part",
            "text": "block-ui - The block ui base component."
          },
          {
            "name": "part",
            "text": "block-ui__content - The block ui content (spinner)."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChangeAddress",
          "method": "scChangeAddress",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Address change event."
          },
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scInputAddress",
          "method": "scInputAddress",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Address input event."
          },
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-form-control",
        "sc-select",
        "sc-input",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "address",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    country: null,\n    city: null,\n    line_1: null,\n    line_2: null,\n    postal_code: null,\n    state: null,\n  }",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The address."
          },
          "internal": false
        },
        {
          "name": "names",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    country: 'shipping_country',\n    city: 'shipping_city',\n    line_1: 'shipping_line_1',\n    line_2: 'shipping_line_2',\n    postal_code: 'shipping_postal_code',\n    state: 'shipping_state',\n  }",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "placeholders",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    country: '',\n    postal_code: '',\n    state: '',\n  }",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Placeholders"
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Country or region', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label for the address"
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required?"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "countryChoices"
        },
        {
          "name": "regions"
        },
        {
          "name": "showState"
        },
        {
          "name": "showPostal"
        }
      ]
    },
    {
      "tag": "sc-conditional-form",
      "path": "./src/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.js",
      "source": "./src/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.tsx",
      "elementRef": null,
      "componentClassName": "ScConditionalForm",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "rule_groups",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "RuleGroup[]",
            "resolved": "RuleGroup[]",
            "references": {
              "RuleGroup": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Selector label"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-consumer",
      "path": "./src/components/context/consumer/sc-consumer.js",
      "source": "./src/components/context/consumer/sc-consumer.tsx",
      "elementRef": null,
      "componentClassName": "ScConsumer",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "mountConsumer",
          "method": "mountEmitter",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "renderer",
          "type": "any",
          "attribute": "renderer",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "context"
        },
        {
          "name": "promise"
        },
        {
          "name": "resolvePromise"
        }
      ]
    },
    {
      "tag": "sc-coupon-form",
      "path": "./src/components/ui/coupon-form/sc-coupon-form.js",
      "source": "./src/components/ui/coupon-form/sc-coupon-form.tsx",
      "elementRef": null,
      "componentClassName": "ScCouponForm",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-form-control",
        "sc-format-number",
        "sc-icon",
        "sc-input",
        "sc-line-item",
        "sc-skeleton",
        "sc-spinner",
        "sc-tag",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-order-coupon-form",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [
        "sc-skeleton",
        "sc-line-item",
        "sc-tag",
        "sc-format-number",
        "sc-input",
        "sc-button",
        "sc-alert",
        "sc-block-ui",
        "sc-form-control"
      ],
      "directDependents": [
        "sc-order-coupon-form",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "form - The form."
          },
          {
            "name": "part",
            "text": "input__base - The input base."
          },
          {
            "name": "part",
            "text": "input - The input."
          },
          {
            "name": "part",
            "text": "input__form-control - The input form control."
          },
          {
            "name": "part",
            "text": "button__base - The button base element."
          },
          {
            "name": "part",
            "text": "button__label - The button label."
          },
          {
            "name": "part",
            "text": "info - The discount info."
          },
          {
            "name": "part",
            "text": "discount - The discount displayed (% off)"
          },
          {
            "name": "part",
            "text": "amount - The discount amount."
          },
          {
            "name": "part",
            "text": "discount-label - The discount label."
          },
          {
            "name": "part",
            "text": "coupon-tag - The coupon tag."
          },
          {
            "name": "part",
            "text": "error__base - The error base."
          },
          {
            "name": "part",
            "text": "error__icon - The error icon"
          },
          {
            "name": "part",
            "text": "error__text - The error text."
          },
          {
            "name": "part",
            "text": "error_title - The error title."
          },
          {
            "name": "part",
            "text": "error__message - The error message."
          },
          {
            "name": "part",
            "text": "block-ui - The block ui base component."
          },
          {
            "name": "part",
            "text": "block-ui__content - The block ui content (spinner)."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scApplyCoupon",
          "method": "scApplyCoupon",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "When the coupon is applied"
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-skeleton",
        "sc-line-item",
        "sc-tag",
        "sc-format-number",
        "sc-input",
        "sc-button",
        "sc-alert",
        "sc-block-ui",
        "sc-form-control"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The label for the coupon form"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the form loading"
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the form calculating"
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The placeholder for the input"
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "string",
          "attribute": "error",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The error message"
          },
          "internal": false
        },
        {
          "name": "forceOpen",
          "type": "boolean",
          "attribute": "force-open",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Force the form to show"
          },
          "internal": false
        },
        {
          "name": "discount",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "DiscountResponse",
            "resolved": "DiscountResponse",
            "references": {
              "DiscountResponse": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The discount"
          },
          "internal": false
        },
        {
          "name": "currency",
          "type": "string",
          "attribute": "currency",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency"
          },
          "internal": false
        },
        {
          "name": "discountAmount",
          "type": "number",
          "attribute": "discount-amount",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The discount amount"
          },
          "internal": false
        },
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is it open"
          },
          "internal": false
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "attribute": "collapsed",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "buttonText",
          "type": "string",
          "attribute": "button-text",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The text for apply button"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "value"
        }
      ]
    },
    {
      "tag": "sc-custom-order-price-input",
      "path": "./src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.js",
      "source": "./src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.tsx",
      "elementRef": null,
      "componentClassName": "ScCustomOrderPriceInput",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-price-input",
        "sc-skeleton",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-alert",
        "sc-skeleton",
        "sc-price-input",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateLineItem",
          "method": "scUpdateLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scBlur",
          "method": "handleBlur",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert",
        "sc-skeleton",
        "sc-price-input",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "priceId",
          "type": "string",
          "attribute": "price-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Id of the price."
          },
          "internal": false
        },
        {
          "name": "price",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Price",
            "resolved": "Price",
            "references": {
              "Price": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Stores the price"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading"
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this busy"
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label for the field."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Input placeholder."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required?"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Help text."
          },
          "internal": false
        },
        {
          "name": "showCode",
          "type": "boolean",
          "attribute": "show-code",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the currency code?"
          },
          "internal": false
        },
        {
          "name": "lineItems",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "LineItem[]",
            "resolved": "LineItem[]",
            "references": {
              "LineItem": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Label for the choice."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "fetching"
        },
        {
          "name": "lineItem"
        }
      ]
    },
    {
      "tag": "sc-customer-details",
      "path": "./src/components/ui/customer-details/sc-customer-details.js",
      "source": "./src/components/ui/customer-details/sc-customer-details.tsx",
      "elementRef": "el",
      "componentClassName": "ScCustomerDetails",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag"
      ],
      "dependents": [
        "sc-dashboard-customer-details",
        "sc-order-confirmation-customer"
      ],
      "directDependencies": [
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-divider",
        "sc-empty",
        "sc-skeleton",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon"
      ],
      "directDependents": [
        "sc-dashboard-customer-details",
        "sc-order-confirmation-customer"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "heading - The heading."
          },
          {
            "name": "part",
            "text": "heading-text - The heading text wrapper."
          },
          {
            "name": "part",
            "text": "heading-title - The heading title."
          },
          {
            "name": "part",
            "text": "heading-description - The heading description."
          },
          {
            "name": "part",
            "text": "error__base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "error__icon - The alert icon."
          },
          {
            "name": "part",
            "text": "error__text - The alert text."
          },
          {
            "name": "part",
            "text": "error__title - The alert title."
          },
          {
            "name": "part",
            "text": "error__ message - The alert message."
          },
          {
            "name": "part",
            "text": "test-tag__base - The base test tag."
          },
          {
            "name": "part",
            "text": "text-tag__content - The base test tag content."
          },
          {
            "name": "part",
            "text": "button__base - The button base."
          },
          {
            "name": "part",
            "text": "button__label - The button label."
          },
          {
            "name": "part",
            "text": "button__prefix - The button prefix."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-divider",
        "sc-empty",
        "sc-skeleton",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "editLink",
          "type": "string",
          "attribute": "edit-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "string",
          "attribute": "error",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-customer-edit",
      "path": "./src/components/controllers/dashboard/customer-edit/sc-customer-edit.js",
      "source": "./src/components/controllers/dashboard/customer-edit/sc-customer-edit.tsx",
      "elementRef": null,
      "componentClassName": "ScCustomerEdit",
      "assetsDirs": [],
      "dependencies": [
        "sc-address",
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-column",
        "sc-columns",
        "sc-dashboard-module",
        "sc-dropdown",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-select",
        "sc-spinner",
        "sc-switch",
        "sc-tag",
        "sc-tax-id-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-dashboard-module",
        "sc-tag",
        "sc-card",
        "sc-form",
        "sc-columns",
        "sc-column",
        "sc-input",
        "sc-address",
        "sc-switch",
        "sc-tax-id-input",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dashboard-module",
        "sc-tag",
        "sc-card",
        "sc-form",
        "sc-columns",
        "sc-column",
        "sc-input",
        "sc-address",
        "sc-switch",
        "sc-tax-id-input",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-customer-email",
      "path": "./src/components/controllers/checkout-form/customer-email/sc-customer-email.js",
      "source": "./src/components/controllers/checkout-form/customer-email/sc-customer-email.tsx",
      "elementRef": null,
      "componentClassName": "ScCustomerEmail",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-input"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scClear",
          "method": "scClear",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the clear button is activated."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control receives input."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update the order state."
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scUpdateAbandonedCart",
          "method": "scUpdateAbandonedCart",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update the abandoned cart."
          },
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scLoginPrompt",
          "method": "scLoginPrompt",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Prompt for login."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-input"
      ],
      "properties": [
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the user logged in."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "(passed from the sc-checkout component automatically)"
          },
          "internal": false
        },
        {
          "name": "trackingConfirmationMessage",
          "type": "string",
          "attribute": "tracking-confirmation-message",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "A message for tracking confirmation."
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Force a customer."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        },
        {
          "name": "abandonedCheckoutEnabled",
          "type": "boolean",
          "attribute": "abandoned-checkout-enabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is abandoned checkout enabled?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-customer-firstname",
      "path": "./src/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.js",
      "source": "./src/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.tsx",
      "elementRef": null,
      "componentClassName": "ScCustomerFirstname",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-input"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "Partial<Checkout>",
            "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scClear",
          "method": "scClear",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the clear button is activated."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control receives input."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateCustomer",
          "method": "scUpdateCustomer",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "{ email: string }",
            "resolved": "{ email: string; }",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-input"
      ],
      "properties": [
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the user logged in."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "(passed from the sc-checkout component automatically)"
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Force a customer."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-customer-lastname",
      "path": "./src/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.js",
      "source": "./src/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.tsx",
      "elementRef": null,
      "componentClassName": "ScCustomerLastname",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-input"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "Partial<Checkout>",
            "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scClear",
          "method": "scClear",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the clear button is activated."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control receives input."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateCustomer",
          "method": "scUpdateCustomer",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "{ email: string }",
            "resolved": "{ email: string; }",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-input"
      ],
      "properties": [
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the user logged in."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "(passed from the sc-checkout component automatically)"
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Force a customer."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-customer-name",
      "path": "./src/components/controllers/checkout-form/customer-name/sc-customer-name.js",
      "source": "./src/components/controllers/checkout-form/customer-name/sc-customer-name.tsx",
      "elementRef": null,
      "componentClassName": "ScCustomerName",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-input"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "Partial<Checkout>",
            "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scClear",
          "method": "scClear",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the clear button is activated."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control receives input."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateCustomer",
          "method": "scUpdateCustomer",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "{ email: string }",
            "resolved": "{ email: string; }",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-input"
      ],
      "properties": [
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the user logged in."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "(passed from the sc-checkout component automatically)"
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Force a customer."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-dashboard-customer-details",
      "path": "./src/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.js",
      "source": "./src/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.tsx",
      "elementRef": "el",
      "componentClassName": "ScDashboardCustomerDetails",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-card",
        "sc-customer-details",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-customer-details"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-customer-details"
      ],
      "properties": [
        {
          "name": "customerId",
          "type": "string",
          "attribute": "customer-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "customer"
        },
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-dashboard-downloads-list",
      "path": "./src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.js",
      "source": "./src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScDownloadsList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-flex",
        "sc-format-bytes",
        "sc-icon",
        "sc-pagination",
        "sc-purchase-downloads-list",
        "sc-skeleton",
        "sc-spacing",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-purchase-downloads-list",
        "sc-pagination"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-purchase-downloads-list",
        "sc-pagination"
      ],
      "properties": [
        {
          "name": "query",
          "type": "any",
          "attribute": "query",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Customer id to fetch subscriptions"
          },
          "internal": false
        },
        {
          "name": "allLink",
          "type": "string",
          "attribute": "all-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "isCustomer",
          "type": "boolean",
          "attribute": "is-customer",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "requestNonce",
          "type": "string",
          "attribute": "request-nonce",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "purchases"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        },
        {
          "name": "pagination"
        }
      ]
    },
    {
      "tag": "sc-dashboard-module",
      "path": "./src/components/ui/dashboard-module/sc-dashboard-module.js",
      "source": "./src/components/ui/dashboard-module/sc-dashboard-module.tsx",
      "elementRef": null,
      "componentClassName": "ScDashboardModule",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-charges-list",
        "sc-checkout",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-order",
        "sc-order-confirm-provider",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [
        "sc-alert"
      ],
      "directDependents": [
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-charges-list",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-order",
        "sc-order-confirm-provider",
        "sc-order-confirmation-details",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "heading - The heading."
          },
          {
            "name": "part",
            "text": "heading-text - The heading text wrapper."
          },
          {
            "name": "part",
            "text": "heading-title - The heading title."
          },
          {
            "name": "part",
            "text": "heading-description - The heading description."
          },
          {
            "name": "part",
            "text": "error__base - The alert base wrapper."
          },
          {
            "name": "part",
            "text": "error__icon - The alert icon."
          },
          {
            "name": "part",
            "text": "error__text - The alert text."
          },
          {
            "name": "part",
            "text": "error__title - The alert title."
          },
          {
            "name": "part",
            "text": "error__ message - The alert message."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "string",
          "attribute": "error",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-dialog",
      "path": "./src/components/ui/sc-dialog/sc-dialog.js",
      "source": "./src/components/ui/sc-dialog/sc-dialog.tsx",
      "elementRef": "el",
      "componentClassName": "ScDialog",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-icon",
        "sc-spinner"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-checkout",
        "sc-login-provider",
        "sc-order-confirm-provider",
        "sc-payment-methods-list",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscriptions-list",
        "sc-upgrade-required"
      ],
      "directDependencies": [
        "sc-button",
        "sc-icon"
      ],
      "directDependents": [
        "sc-cancel-dialog",
        "sc-login-provider",
        "sc-order-confirm-provider",
        "sc-payment-methods-list",
        "sc-subscription-details",
        "sc-upgrade-required"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scRequestClose",
          "method": "scRequestClose",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Request close event"
          },
          "complexType": {
            "original": "'close-button' | 'keyboard' | 'overlay'",
            "resolved": "\"close-button\" | \"keyboard\" | \"overlay\"",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scShow",
          "method": "scShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scAfterShow",
          "method": "scAfterShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scHide",
          "method": "scHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scAfterHide",
          "method": "scAfterHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInitialFocus",
          "method": "scInitialFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-button",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates whether or not the dialog is open. You can use this in lieu of the show/hide methods."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The dialog's label as displayed in the header. You should always include a relevant label even when using\n`no-header`, as it is required for proper accessibility."
          },
          "internal": false
        },
        {
          "name": "noHeader",
          "type": "boolean",
          "attribute": "no-header",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the header. This will also remove the default close button, so please ensure you provide an easy,\naccessible way for users to dismiss the dialog."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFooter"
        }
      ]
    },
    {
      "tag": "sc-divider",
      "path": "./src/components/ui/divider/sc-divider.js",
      "source": "./src/components/ui/divider/sc-divider.tsx",
      "elementRef": null,
      "componentClassName": "ScDivider",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-checkout",
        "sc-checkout-mollie-payment",
        "sc-customer-details",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-express-payment",
        "sc-form-components-validator",
        "sc-invoices-list",
        "sc-login-form",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-bump",
        "sc-order-bumps",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-order-confirmation-totals",
        "sc-orders-list",
        "sc-payment",
        "sc-payment-methods-list",
        "sc-payment-selected",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-customer-details",
        "sc-express-payment",
        "sc-invoices-list",
        "sc-login-form",
        "sc-order",
        "sc-order-bump",
        "sc-order-confirmation-details",
        "sc-order-confirmation-totals",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-payment-selected",
        "sc-purchase-downloads-list",
        "sc-subscription-next-payment",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "line-container - The line container."
          },
          {
            "name": "part",
            "text": "line - The line."
          },
          {
            "name": "part",
            "text": "text-container - The text container."
          },
          {
            "name": "part",
            "text": "text - The text."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-donation-choices",
      "path": "./src/components/controllers/checkout-form/donation-choices/sc-donation-choices.js",
      "source": "./src/components/controllers/checkout-form/donation-choices/sc-donation-choices.tsx",
      "elementRef": "el",
      "componentClassName": "ScDonationChoices",
      "assetsDirs": [],
      "dependencies": [
        "sc-block-ui",
        "sc-button",
        "sc-choices",
        "sc-form-control",
        "sc-input",
        "sc-price-input",
        "sc-skeleton",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-skeleton",
        "sc-choices",
        "sc-price-input",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scRemoveLineItem",
          "method": "scRemoveLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scUpdateLineItem",
          "method": "scUpdateLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scAddLineItem",
          "method": "scAddLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scChange",
          "method": "handleChange",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-skeleton",
        "sc-choices",
        "sc-price-input",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "priceId",
          "type": "string",
          "attribute": "price-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The price id for the fields."
          },
          "internal": false
        },
        {
          "name": "defaultAmount",
          "type": "string",
          "attribute": "default-amount",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The default amount to load the page with."
          },
          "internal": false
        },
        {
          "name": "currencyCode",
          "type": "string",
          "attribute": "currency-code",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'usd'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency code for the donation."
          },
          "internal": false
        },
        {
          "name": "lineItems",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "LineItem[]",
            "resolved": "LineItem[]",
            "references": {
              "LineItem": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Order line items."
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading"
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "removeInvalid",
          "type": "boolean",
          "attribute": "remove-invalid",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The label for the field."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "lineItem"
        },
        {
          "name": "error"
        },
        {
          "name": "showCustomAmount"
        }
      ]
    },
    {
      "tag": "sc-downloads-list",
      "path": "./src/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.js",
      "source": "./src/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.tsx",
      "elementRef": null,
      "componentClassName": "ScDownloadsList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-flex",
        "sc-format-bytes",
        "sc-icon",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-icon",
        "sc-dashboard-module",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-flex",
        "sc-format-bytes",
        "sc-tag",
        "sc-button"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon",
        "sc-dashboard-module",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-flex",
        "sc-format-bytes",
        "sc-tag",
        "sc-button"
      ],
      "properties": [
        {
          "name": "downloads",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Download[]",
            "resolved": "Download[]",
            "references": {
              "Download": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customerId",
          "type": "string",
          "attribute": "customer-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-drawer",
      "path": "./src/components/ui/sc-drawer/sc-drawer.js",
      "source": "./src/components/ui/sc-drawer/sc-drawer.tsx",
      "elementRef": "el",
      "componentClassName": "ScDrawer",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-cart"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-cart"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scInitialFocus",
          "method": "scInitialFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scRequestClose",
          "method": "scRequestClose",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "'close-button' | 'keyboard' | 'overlay'",
            "resolved": "\"close-button\" | \"keyboard\" | \"overlay\"",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scShow",
          "method": "scShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scHide",
          "method": "scHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scAfterShow",
          "method": "scAfterShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scAfterHide",
          "method": "scAfterHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates whether or not the drawer is open. You can use this in lieu of the show/hide methods."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The drawer's label as displayed in the header. You should always include a relevant label even when using\n`no-header`, as it is required for proper accessibility."
          },
          "internal": false
        },
        {
          "name": "placement",
          "type": "string",
          "attribute": "placement",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'end'",
          "complexType": {
            "original": "'top' | 'end' | 'bottom' | 'start'",
            "resolved": "\"bottom\" | \"end\" | \"start\" | \"top\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The direction from which the drawer will open."
          },
          "internal": false
        },
        {
          "name": "contained",
          "type": "boolean",
          "attribute": "contained",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of\nits parent element, set this prop and add `position: relative` to the parent."
          },
          "internal": false
        },
        {
          "name": "noHeader",
          "type": "boolean",
          "attribute": "no-header",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Removes the header. This will also remove the default close button, so please ensure you provide an easy,\naccessible way for users to dismiss the drawer."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-dropdown",
      "path": "./src/components/ui/dropdown/dropdown.js",
      "source": "./src/components/ui/dropdown/dropdown.tsx",
      "elementRef": "el",
      "componentClassName": "ScDropdown",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-checkout",
        "sc-compact-address",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-payment-methods-list",
        "sc-select",
        "sc-tax-id-input"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-payment-methods-list",
        "sc-select",
        "sc-tax-id-input"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "trigger - The trigger."
          },
          {
            "name": "part",
            "text": "panel - The panel."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scShow",
          "method": "scShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the dropdown opens. Calling `event.preventDefault()` will prevent it from being opened."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scHide",
          "method": "scHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the dropdown closes. Calling `event.preventDefault()` will prevent it from being closed."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "clickEl",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": true,
          "complexType": {
            "original": "HTMLElement",
            "resolved": "HTMLElement",
            "references": {
              "HTMLElement": {
                "location": "global"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this disabled."
          },
          "internal": false
        },
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": true,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates whether or not the dropdown is open. You can use this in lieu of the show/hide methods."
          },
          "internal": false
        },
        {
          "name": "position",
          "type": "string",
          "attribute": "position",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'",
            "resolved": "\"bottom-left\" | \"bottom-right\" | \"top-left\" | \"top-right\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The placement of the dropdown panel"
          },
          "internal": false
        },
        {
          "name": "placement",
          "type": "string",
          "attribute": "placement",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'bottom-start'",
          "complexType": {
            "original": "| 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end'",
            "resolved": "\"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The placement of the dropdown."
          },
          "internal": false
        },
        {
          "name": "distance",
          "type": "number",
          "attribute": "distance",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "10",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The distance in pixels from which to offset the panel away from its trigger."
          },
          "internal": false
        },
        {
          "name": "skidding",
          "type": "number",
          "attribute": "skidding",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The distance in pixels from which to offset the panel along its trigger."
          },
          "internal": false
        },
        {
          "name": "hoist",
          "type": "boolean",
          "attribute": "hoist",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n`overflow: auto|scroll`."
          },
          "internal": false
        },
        {
          "name": "closeOnSelect",
          "type": "boolean",
          "attribute": "close-on-select",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Determines whether the dropdown should hide when a menu item is selected"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "isVisible"
        }
      ]
    },
    {
      "tag": "sc-empty",
      "path": "./src/components/ui/empty/sc-empty.js",
      "source": "./src/components/ui/empty/sc-empty.tsx",
      "elementRef": null,
      "componentClassName": "ScEmpty",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-customer-details",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-invoices-list",
        "sc-order",
        "sc-order-confirmation-customer",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-customer-details",
        "sc-invoices-list",
        "sc-order",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "icon - The icon."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "icon",
          "type": "string",
          "attribute": "icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-error",
      "path": "./src/components/ui/error/sc-error.js",
      "source": "./src/components/ui/error/sc-error.tsx",
      "elementRef": null,
      "componentClassName": "ScFormErrorProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon"
      ],
      "dependents": [
        "sc-cart"
      ],
      "directDependencies": [
        "sc-alert"
      ],
      "directDependents": [
        "sc-cart"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "icon - The alert icon."
          },
          {
            "name": "part",
            "text": "text - The alert text."
          },
          {
            "name": "part",
            "text": "title - The alert title."
          },
          {
            "name": "part",
            "text": "message - The alert message."
          },
          {
            "name": "part",
            "text": "close - The close icon."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateError",
          "method": "scUpdateError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state."
          },
          "complexType": {
            "original": "ResponseError",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scError",
          "method": "handleErrorEvent",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert"
      ],
      "properties": [
        {
          "name": "error",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ResponseError | null",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Error to display."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-express-payment",
      "path": "./src/components/controllers/checkout-form/express-payment/sc-express-payment.js",
      "source": "./src/components/controllers/checkout-form/express-payment/sc-express-payment.tsx",
      "elementRef": null,
      "componentClassName": "ScExpressPayment",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-divider",
        "sc-icon",
        "sc-spinner",
        "sc-stripe-payment-request"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-stripe-payment-request",
        "sc-divider",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scPaymentRequestLoaded",
          "method": "onPaymentRequestLoaded",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-stripe-payment-request",
        "sc-divider",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "processor",
          "type": "string",
          "attribute": "processor",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ProcessorName",
            "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
            "references": {
              "ProcessorName": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "formId",
          "type": "any",
          "attribute": "form-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number | string",
            "resolved": "number | string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "dividerText",
          "type": "string",
          "attribute": "divider-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "attribute": "debug",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "hasPaymentOptions",
          "type": "boolean",
          "attribute": "has-payment-options",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-flex",
      "path": "./src/components/ui/flex/sc-flex.js",
      "source": "./src/components/ui/flex/sc-flex.tsx",
      "elementRef": null,
      "componentClassName": "ScFlex",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-charges-list",
        "sc-dashboard-downloads-list",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-login-form",
        "sc-order",
        "sc-orders-list",
        "sc-pagination",
        "sc-password-nag",
        "sc-payment-methods-list",
        "sc-subscription",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-downloads-list",
        "sc-login-form",
        "sc-order",
        "sc-pagination",
        "sc-password-nag",
        "sc-payment-methods-list",
        "sc-subscription",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "alignItems",
          "type": "string",
          "attribute": "align-items",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "justifyContent",
          "type": "string",
          "attribute": "justify-content",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "flexDirection",
          "type": "string",
          "attribute": "flex-direction",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "columnGap",
          "type": "string",
          "attribute": "column-gap",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "flexWrap",
          "type": "string",
          "attribute": "flex-wrap",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "stack",
          "type": "string",
          "attribute": "stack",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-form",
      "path": "./src/components/ui/form/sc-form.js",
      "source": "./src/components/ui/form/sc-form.tsx",
      "elementRef": "form",
      "componentClassName": "ScForm",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-cart-form",
        "sc-checkout",
        "sc-customer-edit",
        "sc-login-form",
        "sc-login-provider",
        "sc-mollie-add-method",
        "sc-password-nag",
        "sc-product-selected-price",
        "sc-stripe-add-method",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-cancel-survey",
        "sc-cart-form",
        "sc-customer-edit",
        "sc-login-form",
        "sc-login-provider",
        "sc-mollie-add-method",
        "sc-password-nag",
        "sc-product-selected-price",
        "sc-stripe-add-method",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scSubmit",
          "method": "scSubmit",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the form is submitted. This event will not be emitted if any form control inside of\nit is in an invalid state, unless the form has the `novalidate` attribute. Note that there is never a need to prevent\nthis event, since it doen't send a GET or POST request like native forms. To \"prevent\" submission, use a conditional\naround the XHR request you use to submit the form's data with."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFormSubmit",
          "method": "scFormSubmit",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Backwards compat."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFormChange",
          "method": "scFormChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the form is submitted. This event will not be emitted if any form control inside of\nit is in an invalid state, unless the form has the `novalidate` attribute. Note that there is never a need to prevent\nthis event, since it doen't send a GET or POST request like native forms. To \"prevent\" submission, use a conditional\naround the XHR request you use to submit the form's data with."
          },
          "complexType": {
            "original": "Object",
            "resolved": "Object",
            "references": {
              "Object": {
                "location": "global"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scChange",
          "method": "handleChange",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "getFormData",
          "docs": {
            "text": "Serializes all form controls elements and returns a `FormData` object.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<FormData>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FormData": {
                "location": "global"
              }
            },
            "return": "Promise<FormData>"
          },
          "internal": false
        },
        {
          "name": "getFormJson",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<Record<string, unknown>>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              },
              "Record": {
                "location": "global"
              }
            },
            "return": "Promise<Record<string, unknown>>"
          },
          "internal": false
        },
        {
          "name": "submit",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "validate",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "novalidate",
          "type": "boolean",
          "attribute": "novalidate",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Prevent the form from validating inputs before submitting."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-form-components-validator",
      "path": "./src/components/providers/form-components-validator/sc-form-components-validator.js",
      "source": "./src/components/providers/form-components-validator/sc-form-components-validator.tsx",
      "elementRef": "el",
      "componentClassName": "ScFormComponentsValidator",
      "assetsDirs": [],
      "dependencies": [
        "sc-address",
        "sc-block-ui",
        "sc-button",
        "sc-choice",
        "sc-compact-address",
        "sc-divider",
        "sc-dropdown",
        "sc-form-control",
        "sc-format-number",
        "sc-icon",
        "sc-input",
        "sc-line-item",
        "sc-line-item-tax",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-order-bump",
        "sc-order-bumps",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-select",
        "sc-spinner",
        "sc-tax-id-input",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-order-bumps",
        "sc-line-item-tax"
      ],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-order-bumps",
        "sc-line-item-tax"
      ],
      "properties": [
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disable validation?"
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The order"
          },
          "internal": false
        },
        {
          "name": "taxProtocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "TaxProtocol",
            "resolved": "TaxProtocol",
            "references": {
              "TaxProtocol": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The tax protocol"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasAddress"
        },
        {
          "name": "hasTaxIDField"
        },
        {
          "name": "hasBumpsField"
        },
        {
          "name": "hasTaxLine"
        },
        {
          "name": "hasBumpLine"
        }
      ]
    },
    {
      "tag": "sc-form-control",
      "path": "./src/components/ui/form-control/sc-form-control.js",
      "source": "./src/components/ui/form-control/sc-form-control.tsx",
      "elementRef": "el",
      "componentClassName": "ScFormControl",
      "assetsDirs": [],
      "dependencies": [
        "sc-tooltip"
      ],
      "dependents": [
        "sc-address",
        "sc-button-group",
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-checkout",
        "sc-choices",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-edit",
        "sc-customer-email",
        "sc-customer-firstname",
        "sc-customer-lastname",
        "sc-customer-name",
        "sc-donation-choices",
        "sc-form-components-validator",
        "sc-input",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-order-bumps",
        "sc-order-coupon-form",
        "sc-order-password",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-password-nag",
        "sc-payment",
        "sc-price-choices",
        "sc-price-input",
        "sc-product-selected-price",
        "sc-rich-text",
        "sc-select",
        "sc-stripe-element",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-tax-id-input",
        "sc-textarea",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [
        "sc-tooltip"
      ],
      "directDependents": [
        "sc-address",
        "sc-button-group",
        "sc-choices",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-input",
        "sc-order-bumps",
        "sc-payment",
        "sc-rich-text",
        "sc-select",
        "sc-stripe-element",
        "sc-textarea"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "form-control - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "label - The label."
          },
          {
            "name": "part",
            "text": "input - The input wrapper."
          },
          {
            "name": "part",
            "text": "help-text - Help text."
          },
          {
            "name": "part",
            "text": "tooltip - Tooltip"
          },
          {
            "name": "part",
            "text": "tooltip-text - Tooltip text."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tooltip"
      ],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Size of the label"
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Name for the input. Used for validation errors."
          },
          "internal": false
        },
        {
          "name": "errors",
          "type": "any",
          "attribute": "errors",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Display server-side validation errors."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the label."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Input label."
          },
          "internal": false
        },
        {
          "name": "labelId",
          "type": "string",
          "attribute": "label-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Input label id."
          },
          "internal": false
        },
        {
          "name": "inputId",
          "type": "string",
          "attribute": "input-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Input id."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Whether the input is required."
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Help text"
          },
          "internal": false
        },
        {
          "name": "helpId",
          "type": "string",
          "attribute": "help-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Help id"
          },
          "internal": false
        },
        {
          "name": "errorMessage",
          "type": "string",
          "attribute": "error-message",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Store the error message"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-form-error-provider",
      "path": "./src/components/providers/form-error-provider/sc-form-error-provider.js",
      "source": "./src/components/providers/form-error-provider/sc-form-error-provider.tsx",
      "elementRef": "el",
      "componentClassName": "ScFormErrorProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-checkout-form-errors",
        "sc-icon"
      ],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [
        "sc-checkout-form-errors"
      ],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": "This component listens for a confirmed event and redirects to the success url."
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateError",
          "method": "scUpdateError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state."
          },
          "complexType": {
            "original": "ResponseError",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Form state event."
          },
          "complexType": {
            "original": "FormStateSetter",
            "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
            "references": {
              "FormStateSetter": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scError",
          "method": "handleErrorEvent",
          "capture": false,
          "passive": false
        },
        {
          "name": "scPayError",
          "method": "handlePayError",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-checkout-form-errors"
      ],
      "properties": [
        {
          "name": "checkoutState",
          "type": "string",
          "attribute": "checkout-state",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "FormState",
            "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
            "references": {
              "FormState": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The current order."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-form-row",
      "path": "./src/components/ui/form-row/sc-form-row.js",
      "source": "./src/components/ui/form-row/sc-form-row.tsx",
      "elementRef": "el",
      "componentClassName": "ScFormRow",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "width"
        }
      ]
    },
    {
      "tag": "sc-form-state-provider",
      "path": "./src/components/providers/form-state-provider/sc-form-state-provider.js",
      "source": "./src/components/providers/form-state-provider/sc-form-state-provider.tsx",
      "elementRef": null,
      "componentClassName": "ScFormStateProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-block-ui",
        "sc-spinner"
      ],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": "This component listens for a confirmed event and redirects to the success url."
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scSetCheckoutFormState",
          "method": "scSetCheckoutFormState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state."
          },
          "complexType": {
            "original": "FormState",
            "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
            "references": {
              "FormState": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scSetState",
          "method": "handleSetStateEvent",
          "capture": false,
          "passive": false
        },
        {
          "name": "scPaid",
          "method": "handlePaid",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-block-ui"
      ],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "checkoutState"
        }
      ]
    },
    {
      "tag": "sc-format-bytes",
      "path": "./src/components/util/format-bytes/sc-format-bytes.js",
      "source": "./src/components/util/format-bytes/sc-format-bytes.tsx",
      "elementRef": null,
      "componentClassName": "ScFormatBytes",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-dashboard-downloads-list",
        "sc-downloads-list",
        "sc-order",
        "sc-purchase-downloads-list"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-downloads-list",
        "sc-purchase-downloads-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "locale",
          "type": "string",
          "attribute": "locale",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The locale to use when formatting the number."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "number",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The number to format in bytes."
          },
          "internal": false
        },
        {
          "name": "unit",
          "type": "string",
          "attribute": "unit",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'byte'",
          "complexType": {
            "original": "'byte' | 'bit'",
            "resolved": "\"bit\" | \"byte\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The unit to display."
          },
          "internal": false
        },
        {
          "name": "display",
          "type": "string",
          "attribute": "display",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'short'",
          "complexType": {
            "original": "'long' | 'short' | 'narrow'",
            "resolved": "\"long\" | \"narrow\" | \"short\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Determines how to display the result, e.g. \"100 bytes\", \"100 b\", or \"100b\"."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-format-date",
      "path": "./src/components/util/format-date/sc-format-date.js",
      "source": "./src/components/util/format-date/sc-format-date.tsx",
      "elementRef": null,
      "componentClassName": "ScFormatDate",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-cancel-dialog",
        "sc-charges-list",
        "sc-invoices-list",
        "sc-order",
        "sc-orders-list",
        "sc-subscription",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-status-badge",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-charges-list",
        "sc-invoices-list",
        "sc-order",
        "sc-orders-list",
        "sc-subscription",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-status-badge",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "locale",
          "type": "string",
          "attribute": "locale",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The locale to use when formatting the date/time."
          },
          "internal": false
        },
        {
          "name": "date",
          "type": "any",
          "attribute": "date",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "new Date()",
          "complexType": {
            "original": "Date | string | number",
            "resolved": "Date | number | string",
            "references": {
              "Date": {
                "location": "global"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The date/time to format. If not set, the current date and time will be used."
          },
          "internal": false
        },
        {
          "name": "weekday",
          "type": "string",
          "attribute": "weekday",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'narrow' | 'short' | 'long'",
            "resolved": "\"long\" | \"narrow\" | \"short\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the weekday."
          },
          "internal": false
        },
        {
          "name": "era",
          "type": "string",
          "attribute": "era",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'narrow' | 'short' | 'long'",
            "resolved": "\"long\" | \"narrow\" | \"short\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the era."
          },
          "internal": false
        },
        {
          "name": "year",
          "type": "string",
          "attribute": "year",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'numeric' | '2-digit'",
            "resolved": "\"2-digit\" | \"numeric\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the year."
          },
          "internal": false
        },
        {
          "name": "month",
          "type": "string",
          "attribute": "month",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'numeric' | '2-digit' | 'narrow' | 'short' | 'long'",
            "resolved": "\"2-digit\" | \"long\" | \"narrow\" | \"numeric\" | \"short\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the month."
          },
          "internal": false
        },
        {
          "name": "day",
          "type": "string",
          "attribute": "day",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'numeric' | '2-digit'",
            "resolved": "\"2-digit\" | \"numeric\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the day."
          },
          "internal": false
        },
        {
          "name": "hour",
          "type": "string",
          "attribute": "hour",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'numeric' | '2-digit'",
            "resolved": "\"2-digit\" | \"numeric\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the hour."
          },
          "internal": false
        },
        {
          "name": "minute",
          "type": "string",
          "attribute": "minute",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'numeric' | '2-digit'",
            "resolved": "\"2-digit\" | \"numeric\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the minute."
          },
          "internal": false
        },
        {
          "name": "second",
          "type": "string",
          "attribute": "second",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'numeric' | '2-digit'",
            "resolved": "\"2-digit\" | \"numeric\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the second."
          },
          "internal": false
        },
        {
          "name": "timeZoneName",
          "type": "string",
          "attribute": "time-zone-name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'short' | 'long'",
            "resolved": "\"long\" | \"short\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The format for displaying the time."
          },
          "internal": false
        },
        {
          "name": "timeZone",
          "type": "string",
          "attribute": "time-zone",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The time zone to express the time in."
          },
          "internal": false
        },
        {
          "name": "hourFormat",
          "type": "string",
          "attribute": "hour-format",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'auto'",
          "complexType": {
            "original": "'auto' | '12' | '24'",
            "resolved": "\"12\" | \"24\" | \"auto\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "When set, 24 hour time will always be used."
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'date'",
          "complexType": {
            "original": "'timestamp' | 'date'",
            "resolved": "\"date\" | \"timestamp\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-format-interval",
      "path": "./src/components/util/format-interval/sc-format-interval.js",
      "source": "./src/components/util/format-interval/sc-format-interval.tsx",
      "elementRef": null,
      "componentClassName": "ScFormatInterval",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "value",
          "type": "number",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The number to format."
          },
          "internal": false
        },
        {
          "name": "interval",
          "type": "string",
          "attribute": "interval",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "every",
          "type": "string",
          "attribute": "every",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'/'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "fallback",
          "type": "string",
          "attribute": "fallback",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-format-number",
      "path": "./src/components/util/format-number/sc-format-number.js",
      "source": "./src/components/util/format-number/sc-format-number.tsx",
      "elementRef": null,
      "componentClassName": "ScFormatNumber",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-charges-list",
        "sc-checkout",
        "sc-coupon-form",
        "sc-form-components-validator",
        "sc-invoices-list",
        "sc-line-item-bump",
        "sc-line-item-tax",
        "sc-line-item-total",
        "sc-line-items",
        "sc-order",
        "sc-order-bump",
        "sc-order-bumps",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals",
        "sc-order-coupon-form",
        "sc-order-detail",
        "sc-order-submit",
        "sc-order-summary",
        "sc-orders-list",
        "sc-price-choice",
        "sc-price-range",
        "sc-product-line-item",
        "sc-product-selected-price",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-total",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-charges-list",
        "sc-coupon-form",
        "sc-invoices-list",
        "sc-line-item-bump",
        "sc-line-item-tax",
        "sc-line-item-total",
        "sc-order",
        "sc-order-bump",
        "sc-order-confirmation-totals",
        "sc-order-detail",
        "sc-order-summary",
        "sc-orders-list",
        "sc-price-choice",
        "sc-price-range",
        "sc-product-line-item",
        "sc-product-selected-price",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-switch",
        "sc-total",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "value",
          "type": "number",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The number to format."
          },
          "internal": false
        },
        {
          "name": "locale",
          "type": "string",
          "attribute": "locale",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The locale to use when formatting the number."
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'decimal'",
          "complexType": {
            "original": "'currency' | 'decimal' | 'percent'",
            "resolved": "\"currency\" | \"decimal\" | \"percent\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The formatting style to use."
          },
          "internal": false
        },
        {
          "name": "noGrouping",
          "type": "boolean",
          "attribute": "no-grouping",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Turns off grouping separators."
          },
          "internal": false
        },
        {
          "name": "currency",
          "type": "string",
          "attribute": "currency",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'USD'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The currency to use when formatting. Must be an ISO 4217 currency code such as `USD` or `EUR`."
          },
          "internal": false
        },
        {
          "name": "currencyDisplay",
          "type": "string",
          "attribute": "currency-display",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'symbol'",
          "complexType": {
            "original": "'symbol' | 'narrowSymbol' | 'code' | 'name'",
            "resolved": "\"code\" | \"name\" | \"narrowSymbol\" | \"symbol\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "How to display the currency."
          },
          "internal": false
        },
        {
          "name": "minimumIntegerDigits",
          "type": "number",
          "attribute": "minimum-integer-digits",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The minimum number of integer digits to use. Possible values are 1 - 21."
          },
          "internal": false
        },
        {
          "name": "minimumFractionDigits",
          "type": "number",
          "attribute": "minimum-fraction-digits",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The minimum number of fraction digits to use. Possible values are 0 - 20."
          },
          "internal": false
        },
        {
          "name": "maximumFractionDigits",
          "type": "number",
          "attribute": "maximum-fraction-digits",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The maximum number of fraction digits to use. Possible values are 0 - 20."
          },
          "internal": false
        },
        {
          "name": "minimumSignificantDigits",
          "type": "number",
          "attribute": "minimum-significant-digits",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The minimum number of significant digits to use. Possible values are 1 - 21."
          },
          "internal": false
        },
        {
          "name": "maximumSignificantDigits",
          "type": "number",
          "attribute": "maximum-significant-digits",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The maximum number of significant digits to use,. Possible values are 1 - 21."
          },
          "internal": false
        },
        {
          "name": "noConvert",
          "type": "boolean",
          "attribute": "no-convert",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-heading",
      "path": "./src/components/ui/heading/sc-heading.js",
      "source": "./src/components/ui/heading/sc-heading.tsx",
      "elementRef": "el",
      "componentClassName": "ScHeading",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-order-confirmation"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-order-confirmation"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-icon",
      "path": "./src/components/ui/icon/sc-icon.js",
      "source": "./src/components/ui/icon/sc-icon.tsx",
      "elementRef": null,
      "componentClassName": "ScIcon",
      "assetsDirs": [
        {
          "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/icon/icon-assets",
          "cmpRelativePath": "icon-assets",
          "originalComponentPath": "icon-assets"
        }
      ],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-alert",
        "sc-breadcrumb",
        "sc-breadcrumbs",
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-cart",
        "sc-cart-form",
        "sc-cart-form-submit",
        "sc-cart-header",
        "sc-cart-icon",
        "sc-cart-submit",
        "sc-cc-logo",
        "sc-charges-list",
        "sc-checkout",
        "sc-checkout-form-errors",
        "sc-checkout-mollie-payment",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-downloads-list",
        "sc-drawer",
        "sc-empty",
        "sc-error",
        "sc-express-payment",
        "sc-form-components-validator",
        "sc-form-error-provider",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-line-items",
        "sc-login-form",
        "sc-login-provider",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirm-components-validator",
        "sc-order-confirm-provider",
        "sc-order-confirmation",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-order-coupon-form",
        "sc-order-manual-instructions",
        "sc-order-shipping-address",
        "sc-order-submit",
        "sc-order-tax-id-input",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-paypal-add-method",
        "sc-price-choice",
        "sc-product-line-item",
        "sc-product-selected-price",
        "sc-purchase-downloads-list",
        "sc-quantity-select",
        "sc-rich-text",
        "sc-select",
        "sc-stripe-add-method",
        "sc-stripe-payment-request",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-tax-id-input",
        "sc-toggle",
        "sc-upcoming-invoice",
        "sc-upgrade-required",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-alert",
        "sc-breadcrumb",
        "sc-breadcrumbs",
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-cart-form-submit",
        "sc-cart-header",
        "sc-cart-icon",
        "sc-cart-submit",
        "sc-cc-logo",
        "sc-charges-list",
        "sc-customer-details",
        "sc-dialog",
        "sc-downloads-list",
        "sc-drawer",
        "sc-empty",
        "sc-invoices-list",
        "sc-login-form",
        "sc-order",
        "sc-order-confirm-provider",
        "sc-order-submit",
        "sc-orders-list",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-product-line-item",
        "sc-product-selected-price",
        "sc-purchase-downloads-list",
        "sc-quantity-select",
        "sc-rich-text",
        "sc-select",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-next-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-tax-id-input",
        "sc-toggle",
        "sc-upcoming-invoice",
        "sc-upgrade-required",
        "sc-wordpress-user"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scLoad",
          "method": "scLoad",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the icon has loaded."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the icon failed to load."
          },
          "complexType": {
            "original": "{ status: number }",
            "resolved": "{ status: number; }",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The name of the icon to draw."
          },
          "internal": false
        },
        {
          "name": "src",
          "type": "string",
          "attribute": "src",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "An external URL of an SVG file."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "An alternative description to use for accessibility. If omitted, the name or src will be used to generate it."
          },
          "internal": false
        },
        {
          "name": "library",
          "type": "string",
          "attribute": "library",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'default'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The name of a registered custom icon library."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "svg"
        }
      ]
    },
    {
      "tag": "sc-input",
      "path": "./src/components/ui/input/sc-input.js",
      "source": "./src/components/ui/input/sc-input.tsx",
      "elementRef": "el",
      "componentClassName": "ScInput",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-address",
        "sc-checkout",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-edit",
        "sc-customer-email",
        "sc-customer-firstname",
        "sc-customer-lastname",
        "sc-customer-name",
        "sc-donation-choices",
        "sc-form-components-validator",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-order-coupon-form",
        "sc-order-password",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-password-nag",
        "sc-price-input",
        "sc-product-selected-price",
        "sc-select",
        "sc-subscription-ad-hoc-confirm",
        "sc-tax-id-input",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [
        "sc-form-control"
      ],
      "directDependents": [
        "sc-address",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-customer-edit",
        "sc-customer-email",
        "sc-customer-firstname",
        "sc-customer-lastname",
        "sc-customer-name",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-order-password",
        "sc-password-nag",
        "sc-price-input",
        "sc-select",
        "sc-tax-id-input",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input - The html input element."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          },
          {
            "name": "part",
            "text": "prefix - Used to prepend an icon or element to the input."
          },
          {
            "name": "part",
            "text": "suffix - Used to prepend an icon or element to the input."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scClear",
          "method": "scClear",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the clear button is activated."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control receives input."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        },
        {
          "name": "triggerFocus",
          "docs": {
            "text": "Sets focus on the input.",
            "tags": []
          },
          "complexType": {
            "signature": "(options?: FocusOptions) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FocusOptions": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "setCustomValidity",
          "docs": {
            "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "(message: string) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerBlur",
          "docs": {
            "text": "Removes focus from the input.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-form-control"
      ],
      "properties": [
        {
          "name": "squared",
          "type": "boolean",
          "attribute": "squared",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredBottom",
          "type": "boolean",
          "attribute": "squared-bottom",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredTop",
          "type": "boolean",
          "attribute": "squared-top",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredLeft",
          "type": "boolean",
          "attribute": "squared-left",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredRight",
          "type": "boolean",
          "attribute": "squared-right",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "hidden",
          "type": "boolean",
          "attribute": "hidden",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Hidden"
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'text'",
          "complexType": {
            "original": "'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'url' | 'hidden'",
            "resolved": "\"email\" | \"hidden\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"url\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's name attribute."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "clearable",
          "type": "boolean",
          "attribute": "clearable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Adds a clear button when the input is populated."
          },
          "internal": false
        },
        {
          "name": "togglePassword",
          "type": "boolean",
          "attribute": "toggle-password",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Adds a password toggle button to password inputs."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "minlength",
          "type": "number",
          "attribute": "minlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The minimum length of input that will be considered valid."
          },
          "internal": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "attribute": "maxlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The maximum length of input that will be considered valid."
          },
          "internal": false
        },
        {
          "name": "min",
          "type": "any",
          "attribute": "min",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number | string",
            "resolved": "number | string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's minimum value."
          },
          "internal": false
        },
        {
          "name": "max",
          "type": "any",
          "attribute": "max",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number | string",
            "resolved": "number | string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's maximum value."
          },
          "internal": false
        },
        {
          "name": "step",
          "type": "number",
          "attribute": "step",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's step attribute."
          },
          "internal": false
        },
        {
          "name": "pattern",
          "type": "string",
          "attribute": "pattern",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "A pattern to validate input against."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autocorrect",
          "type": "string",
          "attribute": "autocorrect",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autocorrect attribute."
          },
          "internal": false
        },
        {
          "name": "autocomplete",
          "type": "string",
          "attribute": "autocomplete",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autocomplete attribute."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "attribute": "spellcheck",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Enables spell checking on the input."
          },
          "internal": false
        },
        {
          "name": "inputmode",
          "type": "string",
          "attribute": "inputmode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'",
            "resolved": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's inputmode attribute."
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "isPasswordVisible"
        }
      ]
    },
    {
      "tag": "sc-invoices-list",
      "path": "./src/components/controllers/dashboard/invoices-list/sc-invoices-list.js",
      "source": "./src/components/controllers/dashboard/invoices-list/sc-invoices-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScInvoicesList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-flex",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-order-status-badge",
        "sc-pagination",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-text"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag",
        "sc-order-status-badge",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-divider",
        "sc-empty",
        "sc-format-date",
        "sc-text",
        "sc-format-number",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-pagination",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag",
        "sc-order-status-badge",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-divider",
        "sc-empty",
        "sc-format-date",
        "sc-text",
        "sc-format-number",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-pagination",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
          "complexType": {
            "original": "{\n    page: number;\n    per_page: number;\n  }",
            "resolved": "{ page: number; per_page: number; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Query to fetch invoices"
          },
          "internal": false
        },
        {
          "name": "allLink",
          "type": "string",
          "attribute": "all-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "invoices"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        },
        {
          "name": "pagination"
        }
      ]
    },
    {
      "tag": "sc-licenses-list",
      "path": "./src/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.js",
      "source": "./src/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.tsx",
      "elementRef": null,
      "componentClassName": "ScLicensesList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-table",
        "sc-table-cell",
        "sc-table-row",
        "sc-tag",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag",
        "sc-dashboard-module",
        "sc-card",
        "sc-table",
        "sc-table-cell",
        "sc-table-row",
        "sc-input",
        "sc-button"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag",
        "sc-dashboard-module",
        "sc-card",
        "sc-table",
        "sc-table-cell",
        "sc-table-row",
        "sc-input",
        "sc-button"
      ],
      "properties": [
        {
          "name": "licenses",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "License[]",
            "resolved": "License[]",
            "references": {
              "License": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "activations",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Activation[]",
            "resolved": "Activation[]",
            "references": {
              "Activation": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "copied",
          "type": "boolean",
          "attribute": "copied",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-line-item",
      "path": "./src/components/ui/line-item/sc-line-item.js",
      "source": "./src/components/ui/line-item/sc-line-item.tsx",
      "elementRef": "hostElement",
      "componentClassName": "ScLineItem",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-checkout",
        "sc-coupon-form",
        "sc-form-components-validator",
        "sc-line-item-bump",
        "sc-line-item-tax",
        "sc-line-item-total",
        "sc-line-items",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals",
        "sc-order-coupon-form",
        "sc-order-summary",
        "sc-product-line-item",
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-coupon-form",
        "sc-line-item-bump",
        "sc-line-item-tax",
        "sc-line-item-total",
        "sc-line-items",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals",
        "sc-order-summary",
        "sc-product-line-item",
        "sc-subscription-next-payment",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [
          {
            "name": "slot",
            "text": "image - Line item image"
          },
          {
            "name": "slot",
            "text": "title - Line item title."
          },
          {
            "name": "slot",
            "text": "description - Line item description (below the title)"
          },
          {
            "name": "slot",
            "text": "currency - Used for the 3 character currency code."
          },
          {
            "name": "slot",
            "text": "price - Price amount, including currency sign."
          },
          {
            "name": "slot",
            "text": "price-description - Description for the price (i.e. monthly)"
          },
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "image - The image wrapper."
          },
          {
            "name": "part",
            "text": "text - The text."
          },
          {
            "name": "part",
            "text": "title - The title."
          },
          {
            "name": "part",
            "text": "description - Line item description (below the title)"
          },
          {
            "name": "part",
            "text": "currency - Used for the 3 character currency code."
          },
          {
            "name": "part",
            "text": "price - Price amount, including currency sign."
          },
          {
            "name": "part",
            "text": "price-text - The price text."
          },
          {
            "name": "part",
            "text": "price-description - Description for the price (i.e. monthly)"
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "price",
          "type": "string",
          "attribute": "price",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Price of the item"
          },
          "internal": false
        },
        {
          "name": "currency",
          "type": "string",
          "attribute": "currency",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency symbol"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasImageSlot"
        },
        {
          "name": "hasTitleSlot"
        },
        {
          "name": "hasDescriptionSlot"
        },
        {
          "name": "hasPriceSlot"
        },
        {
          "name": "hasPriceDescriptionSlot"
        },
        {
          "name": "hasCurrencySlot"
        }
      ]
    },
    {
      "tag": "sc-line-item-bump",
      "path": "./src/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.js",
      "source": "./src/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.tsx",
      "elementRef": null,
      "componentClassName": "ScLineItemBump",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-line-item"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-line-item",
        "sc-format-number"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-format-number"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-line-item-tax",
      "path": "./src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.js",
      "source": "./src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.tsx",
      "elementRef": null,
      "componentClassName": "ScLineItemTax",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-line-item"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-components-validator"
      ],
      "directDependencies": [
        "sc-line-item",
        "sc-format-number"
      ],
      "directDependents": [
        "sc-form-components-validator"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-format-number"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-line-item-total",
      "path": "./src/components/controllers/checkout-form/line-item-total/sc-line-item-total.js",
      "source": "./src/components/controllers/checkout-form/line-item-total/sc-line-item-total.tsx",
      "elementRef": null,
      "componentClassName": "ScLineItemTotal",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-line-item",
        "sc-skeleton",
        "sc-total"
      ],
      "dependents": [
        "sc-order-confirmation-details",
        "sc-order-confirmation-totals"
      ],
      "directDependencies": [
        "sc-line-item",
        "sc-skeleton",
        "sc-total",
        "sc-format-number"
      ],
      "directDependents": [
        "sc-order-confirmation-totals"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-skeleton",
        "sc-total",
        "sc-format-number"
      ],
      "properties": [
        {
          "name": "total",
          "type": "string",
          "attribute": "total",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'total'",
          "complexType": {
            "original": "'total' | 'subtotal'",
            "resolved": "\"subtotal\" | \"total\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'large' | 'medium'",
            "resolved": "\"large\" | \"medium\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-line-items",
      "path": "./src/components/controllers/checkout-form/line-items/sc-line-items.js",
      "source": "./src/components/controllers/checkout-form/line-items/sc-line-items.tsx",
      "elementRef": null,
      "componentClassName": "ScLineItems",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-product-line-item",
        "sc-quantity-select",
        "sc-skeleton"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-line-item",
        "sc-skeleton",
        "sc-product-line-item"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateLineItem",
          "method": "scUpdateLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update the line item."
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scRemoveLineItem",
          "method": "scRemoveLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Remove the line item."
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-skeleton",
        "sc-product-line-item"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "prices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Prices",
            "resolved": "{ [id: string]: Price; }",
            "references": {
              "Prices": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "editable",
          "type": "boolean",
          "attribute": "editable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "removable",
          "type": "boolean",
          "attribute": "removable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "editLineItems",
          "type": "boolean",
          "attribute": "edit-line-items",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "removeLineItems",
          "type": "boolean",
          "attribute": "remove-line-items",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "lockedChoices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<PriceChoice>",
            "resolved": "PriceChoice[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "PriceChoice": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-line-items-provider",
      "path": "./src/components/providers/line-items-provider/sc-line-items-provider.js",
      "source": "./src/components/providers/line-items-provider/sc-line-items-provider.tsx",
      "elementRef": null,
      "componentClassName": "ScLineItemsProvider",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-cart",
        "sc-cart-session-provider",
        "sc-checkout",
        "sc-session-provider"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-cart-session-provider",
        "sc-session-provider"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateLineItems",
          "method": "scUpdateLineItems",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update line items event"
          },
          "complexType": {
            "original": "Array<LineItemData>",
            "resolved": "LineItemData[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "LineItemData": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scToggleLineItem",
          "method": "handleLineItemToggle",
          "capture": false,
          "passive": false
        },
        {
          "name": "scRemoveLineItem",
          "method": "handleLineItemRemove",
          "capture": false,
          "passive": false
        },
        {
          "name": "scAddLineItem",
          "method": "handleLineItemAdd",
          "capture": false,
          "passive": false
        },
        {
          "name": "scUpdateLineItem",
          "method": "handleLineItemUpdate",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Order Object"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "syncItems"
        }
      ]
    },
    {
      "tag": "sc-login-form",
      "path": "./src/components/controllers/login/sc-login-form.js",
      "source": "./src/components/controllers/login/sc-login-form.tsx",
      "elementRef": null,
      "componentClassName": "ScLogin",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-divider",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form",
        "sc-input",
        "sc-button",
        "sc-icon",
        "sc-flex",
        "sc-divider",
        "sc-card",
        "sc-alert",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form",
        "sc-input",
        "sc-button",
        "sc-icon",
        "sc-flex",
        "sc-divider",
        "sc-card",
        "sc-alert",
        "sc-block-ui"
      ],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "step"
        },
        {
          "name": "email"
        },
        {
          "name": "password"
        },
        {
          "name": "verifyCode"
        },
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-login-provider",
      "path": "./src/components/providers/sc-login-provider/sc-login-provider.js",
      "source": "./src/components/providers/sc-login-provider/sc-login-provider.tsx",
      "elementRef": null,
      "componentClassName": "ScLoginProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-dialog",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [
        "sc-alert",
        "sc-dialog",
        "sc-form",
        "sc-input",
        "sc-button"
      ],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scSetLoggedIn",
          "method": "scSetLoggedIn",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetCustomer",
          "method": "scSetCustomer",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "{ email: string; name?: string }",
            "resolved": "{ email: string; name?: string; }",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scLoginPrompt",
          "method": "handleLoginPrompt",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert",
        "sc-dialog",
        "sc-form",
        "sc-input",
        "sc-button"
      ],
      "properties": [
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the user logged in."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "notice"
        },
        {
          "name": "open"
        },
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-menu",
      "path": "./src/components/ui/menu/sc-menu.js",
      "source": "./src/components/ui/menu/sc-menu.tsx",
      "elementRef": "el",
      "componentClassName": "ScMenu",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-checkout",
        "sc-compact-address",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-payment-methods-list",
        "sc-select",
        "sc-tax-id-input"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-payment-methods-list",
        "sc-select",
        "sc-tax-id-input"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scSelect",
          "method": "scSelect",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "{ item: HTMLScMenuItemElement }",
            "resolved": "{ item: HTMLScMenuItemElement; }",
            "references": {
              "HTMLScMenuItemElement": {
                "location": "global"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "setCurrentItem",
          "docs": {
            "text": "",
            "tags": [
              {
                "name": "internal",
                "text": "Sets the current menu item to the specified element. This sets `tabindex=\"0\"` on the target element and\n`tabindex=\"-1\"` to all other items. This method must be called prior to setting focus on a menu item."
              }
            ]
          },
          "complexType": {
            "signature": "(item: HTMLScMenuItemElement) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "HTMLScMenuItemElement": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": true
        }
      ],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-menu-divider",
      "path": "./src/components/ui/menu-divider/sc-menu-divider.js",
      "source": "./src/components/ui/menu-divider/sc-menu-divider.tsx",
      "elementRef": null,
      "componentClassName": "ScMenuDivider",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-menu-item",
      "path": "./src/components/ui/menu-item/sc-menu-item.js",
      "source": "./src/components/ui/menu-item/sc-menu-item.tsx",
      "elementRef": null,
      "componentClassName": "ScMenuItem",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-checkout",
        "sc-compact-address",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-payment-methods-list",
        "sc-select",
        "sc-tax-id-input"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-payment-methods-list",
        "sc-select",
        "sc-tax-id-input"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "setFocus",
          "docs": {
            "text": "Sets focus on the button.",
            "tags": []
          },
          "complexType": {
            "signature": "(options?: FocusOptions) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FocusOptions": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "setBlur",
          "docs": {
            "text": "Removes focus from the button.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Optional link to follow."
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the item in a checked state."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "A unique value to store in the menu item. This can be used as a way to identify menu items when selected."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the menu item in a disabled state."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        }
      ]
    },
    {
      "tag": "sc-menu-label",
      "path": "./src/components/ui/menu-label/sc-menu-label.js",
      "source": "./src/components/ui/menu-label/sc-menu-label.tsx",
      "elementRef": null,
      "componentClassName": "ScMenuLabel",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-checkout",
        "sc-compact-address",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-shipping-address",
        "sc-select"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-select"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-mollie-add-method",
      "path": "./src/components/ui/sc-mollie-add-method/sc-mollie-add-method.js",
      "source": "./src/components/ui/sc-mollie-add-method/sc-mollie-add-method.tsx",
      "elementRef": null,
      "componentClassName": "ScMollieAddMethod",
      "assetsDirs": [],
      "dependencies": [
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-divider",
        "sc-form",
        "sc-icon",
        "sc-payment-selected",
        "sc-skeleton",
        "sc-spinner",
        "sc-toggle",
        "sc-toggles"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-card",
        "sc-skeleton",
        "sc-form",
        "sc-toggles",
        "sc-toggle",
        "sc-payment-selected",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-card",
        "sc-skeleton",
        "sc-form",
        "sc-toggles",
        "sc-toggle",
        "sc-payment-selected",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "country",
          "type": "string",
          "attribute": "country",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "processorId",
          "type": "string",
          "attribute": "processor-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "currency",
          "type": "string",
          "attribute": "currency",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "liveMode",
          "type": "boolean",
          "attribute": "live-mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customerId",
          "type": "string",
          "attribute": "customer-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "methods"
        },
        {
          "name": "loading"
        },
        {
          "name": "error"
        },
        {
          "name": "selectedMethodId"
        },
        {
          "name": "paymentIntent"
        }
      ]
    },
    {
      "tag": "sc-order",
      "path": "./src/components/controllers/dashboard/order/sc-order.js",
      "source": "./src/components/controllers/dashboard/order/sc-order.tsx",
      "elementRef": "el",
      "componentClassName": "ScOrder",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-cc-logo",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-flex",
        "sc-format-bytes",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-order-manual-instructions",
        "sc-order-status-badge",
        "sc-payment-method",
        "sc-product-line-item",
        "sc-purchase-downloads-list",
        "sc-quantity-select",
        "sc-skeleton",
        "sc-spacing",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-flex",
        "sc-skeleton",
        "sc-empty",
        "sc-product-line-item",
        "sc-divider",
        "sc-line-item",
        "sc-format-number",
        "sc-spacing",
        "sc-dashboard-module",
        "sc-tag",
        "sc-order-manual-instructions",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-order-status-badge",
        "sc-format-date",
        "sc-payment-method",
        "sc-button",
        "sc-icon",
        "sc-purchase-downloads-list"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-flex",
        "sc-skeleton",
        "sc-empty",
        "sc-product-line-item",
        "sc-divider",
        "sc-line-item",
        "sc-format-number",
        "sc-spacing",
        "sc-dashboard-module",
        "sc-tag",
        "sc-order-manual-instructions",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-order-status-badge",
        "sc-format-date",
        "sc-payment-method",
        "sc-button",
        "sc-icon",
        "sc-purchase-downloads-list"
      ],
      "properties": [
        {
          "name": "orderId",
          "type": "string",
          "attribute": "order-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customerIds",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string[]",
            "resolved": "string[]",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "order"
        },
        {
          "name": "purchases"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-order-bump",
      "path": "./src/components/controllers/checkout-form/sc-order-bump/sc-order-bump.js",
      "source": "./src/components/controllers/checkout-form/sc-order-bump/sc-order-bump.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderBump",
      "assetsDirs": [],
      "dependencies": [
        "sc-choice",
        "sc-divider",
        "sc-format-number"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-components-validator",
        "sc-order-bumps"
      ],
      "directDependencies": [
        "sc-format-number",
        "sc-choice",
        "sc-divider"
      ],
      "directDependents": [
        "sc-order-bumps"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scAddLineItem",
          "method": "scAddLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Add line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scRemoveLineItem",
          "method": "scRemoveLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Remove line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-number",
        "sc-choice",
        "sc-divider"
      ],
      "properties": [
        {
          "name": "bump",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Bump",
            "resolved": "Bump",
            "references": {
              "Bump": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The bump"
          },
          "internal": false
        },
        {
          "name": "checkout",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The checkout"
          },
          "internal": false
        },
        {
          "name": "showControl",
          "type": "boolean",
          "attribute": "show-control",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the controls"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-bumps",
      "path": "./src/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.js",
      "source": "./src/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderBumps",
      "assetsDirs": [],
      "dependencies": [
        "sc-choice",
        "sc-divider",
        "sc-form-control",
        "sc-format-number",
        "sc-order-bump",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-components-validator"
      ],
      "directDependencies": [
        "sc-form-control",
        "sc-order-bump"
      ],
      "directDependents": [
        "sc-form-components-validator"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form-control",
        "sc-order-bump"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "showControl",
          "type": "boolean",
          "attribute": "show-control",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "bumps",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Bump[]",
            "resolved": "Bump[]",
            "references": {
              "Bump": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "checkout",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-confirm-components-validator",
      "path": "./src/components/providers/sc-order-confirm-components-validator/sc-order-confirm-components-validator.js",
      "source": "./src/components/providers/sc-order-confirm-components-validator/sc-order-confirm-components-validator.tsx",
      "elementRef": "el",
      "componentClassName": "ScOrderConfirmComponentsValidator",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon",
        "sc-order-manual-instructions"
      ],
      "dependents": [
        "sc-order-confirmation"
      ],
      "directDependencies": [
        "sc-order-manual-instructions"
      ],
      "directDependents": [
        "sc-order-confirmation"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-order-manual-instructions"
      ],
      "properties": [
        {
          "name": "checkout",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The checkout"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasManualInstructions"
        }
      ]
    },
    {
      "tag": "sc-order-confirm-provider",
      "path": "./src/components/providers/order-confirm-provider/sc-order-confirm-provider.js",
      "source": "./src/components/providers/order-confirm-provider/sc-order-confirm-provider.tsx",
      "elementRef": "el",
      "componentClassName": "ScOrderConfirmProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-icon",
        "sc-spinner"
      ],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [
        "sc-dialog",
        "sc-icon",
        "sc-dashboard-module",
        "sc-alert",
        "sc-button"
      ],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": "This component listens to the order status\nand confirms the order when payment is successful."
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scOrderPaid",
          "method": "scOrderPaid",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "The order is paid event."
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Error event."
          },
          "complexType": {
            "original": "{ message: string; code?: string; data?: any; additional_errors?: any } | {}",
            "resolved": "{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scPaid",
          "method": "handlePaidEvent",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dialog",
        "sc-icon",
        "sc-dashboard-module",
        "sc-alert",
        "sc-button"
      ],
      "properties": [
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Success url."
          },
          "internal": false
        },
        {
          "name": "successText",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "{\n    title: string;\n    description: string;\n    button: string;\n  }",
            "resolved": "{ title: string; description: string; button: string; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Success text for the form."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "showSuccessModal"
        },
        {
          "name": "confirmedCheckout"
        }
      ]
    },
    {
      "tag": "sc-order-confirmation",
      "path": "./src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.js",
      "source": "./src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderConfirmation",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-heading",
        "sc-icon",
        "sc-order-confirm-components-validator",
        "sc-order-manual-instructions"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-alert",
        "sc-order-confirm-components-validator",
        "sc-heading"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert",
        "sc-order-confirm-components-validator",
        "sc-heading"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-order-confirmation-customer",
      "path": "./src/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.js",
      "source": "./src/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderConfirmationCustomer",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-card",
        "sc-customer-details",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-customer-details"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-customer-details"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The Order"
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The heading"
          },
          "internal": false
        },
        {
          "name": "customer",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Customer",
            "resolved": "Customer",
            "references": {
              "Customer": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The customer"
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "string",
          "attribute": "error",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Error message."
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-confirmation-details",
      "path": "./src/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.js",
      "source": "./src/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderConfirmationDetails",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-card",
        "sc-dashboard-module",
        "sc-divider",
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-line-item-total",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals",
        "sc-order-status-badge",
        "sc-product-line-item",
        "sc-quantity-select",
        "sc-skeleton",
        "sc-tag",
        "sc-total"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag",
        "sc-order-status-badge",
        "sc-dashboard-module",
        "sc-skeleton",
        "sc-card",
        "sc-line-item",
        "sc-divider",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag",
        "sc-order-status-badge",
        "sc-dashboard-module",
        "sc-skeleton",
        "sc-card",
        "sc-line-item",
        "sc-divider",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Order",
            "resolved": "Order",
            "references": {
              "Order": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-confirmation-line-items",
      "path": "./src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.js",
      "source": "./src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderConfirmationLineItems",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-product-line-item",
        "sc-quantity-select",
        "sc-skeleton"
      ],
      "dependents": [
        "sc-order-confirmation-details"
      ],
      "directDependencies": [
        "sc-line-item",
        "sc-skeleton",
        "sc-product-line-item"
      ],
      "directDependents": [
        "sc-order-confirmation-details"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-skeleton",
        "sc-product-line-item"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-confirmation-totals",
      "path": "./src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.js",
      "source": "./src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderConfirmationTotals",
      "assetsDirs": [],
      "dependencies": [
        "sc-divider",
        "sc-format-number",
        "sc-line-item",
        "sc-line-item-total",
        "sc-skeleton",
        "sc-tag",
        "sc-total"
      ],
      "dependents": [
        "sc-order-confirmation-details"
      ],
      "directDependencies": [
        "sc-line-item",
        "sc-tag",
        "sc-format-number",
        "sc-line-item-total",
        "sc-divider"
      ],
      "directDependents": [
        "sc-order-confirmation-details"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-tag",
        "sc-format-number",
        "sc-line-item-total",
        "sc-divider"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-coupon-form",
      "path": "./src/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.js",
      "source": "./src/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderCouponForm",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-coupon-form",
        "sc-form-control",
        "sc-format-number",
        "sc-icon",
        "sc-input",
        "sc-line-item",
        "sc-skeleton",
        "sc-spinner",
        "sc-tag",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-coupon-form"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scApplyCoupon",
          "method": "scApplyCoupon",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-coupon-form"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "any",
          "attribute": "error",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "attribute": "collapsed",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "buttonText",
          "type": "string",
          "attribute": "button-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "open"
        },
        {
          "name": "value"
        },
        {
          "name": "errorMessage"
        }
      ]
    },
    {
      "tag": "sc-order-detail",
      "path": "./src/components/controllers/confirmation/order-detail/sc-order-detail.js",
      "source": "./src/components/controllers/confirmation/order-detail/sc-order-detail.tsx",
      "elementRef": null,
      "componentClassName": "ScSessionDetail",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-skeleton"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-format-number",
        "sc-skeleton"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-number",
        "sc-skeleton"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "fallback",
          "type": "string",
          "attribute": "fallback",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "metaKey",
          "type": "string",
          "attribute": "meta-key",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-manual-instructions",
      "path": "./src/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.js",
      "source": "./src/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderManualInstructions",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon"
      ],
      "dependents": [
        "sc-order",
        "sc-order-confirm-components-validator",
        "sc-order-confirmation"
      ],
      "directDependencies": [
        "sc-alert"
      ],
      "directDependents": [
        "sc-order",
        "sc-order-confirm-components-validator"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert"
      ],
      "properties": [
        {
          "name": "manualPaymentTitle",
          "type": "string",
          "attribute": "manual-payment-title",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "manualPaymentInstructions",
          "type": "string",
          "attribute": "manual-payment-instructions",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-password",
      "path": "./src/components/controllers/checkout-form/order-password/sc-order-password.js",
      "source": "./src/components/controllers/checkout-form/order-password/sc-order-password.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderPassword",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-input",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-input"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-input"
      ],
      "properties": [
        {
          "name": "loggedIn",
          "type": "boolean",
          "attribute": "logged-in",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "emailExists",
          "type": "boolean",
          "attribute": "email-exists",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Does the email exist?"
          },
          "internal": false
        },
        {
          "name": "confirmation",
          "type": "boolean",
          "attribute": "confirmation",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's password confirmation attribute."
          },
          "internal": false
        },
        {
          "name": "confirmationLabel",
          "type": "string",
          "attribute": "confirmation-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's confirmation label text."
          },
          "internal": false
        },
        {
          "name": "confirmationPlaceholder",
          "type": "string",
          "attribute": "confirmation-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's confirmation placeholder text."
          },
          "internal": false
        },
        {
          "name": "confirmationHelp",
          "type": "string",
          "attribute": "confirmation-help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's confirmation help text."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-shipping-address",
      "path": "./src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.js",
      "source": "./src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderShippingAddress",
      "assetsDirs": [],
      "dependencies": [
        "sc-address",
        "sc-block-ui",
        "sc-compact-address",
        "sc-dropdown",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-select",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-components-validator"
      ],
      "directDependencies": [
        "sc-address",
        "sc-compact-address"
      ],
      "directDependents": [
        "sc-form-components-validator"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateOrder",
          "method": "scUpdateOrder",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Make a request to update the order."
          },
          "complexType": {
            "original": "{\n    data: Partial<Checkout>;\n    options?: { silent?: boolean };\n  }",
            "resolved": "{ data: Partial<Checkout>; options?: { silent?: boolean; }; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-address",
        "sc-compact-address"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label for the field."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required (defaults to false)"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading."
          },
          "internal": false
        },
        {
          "name": "shippingAddress",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Address",
            "resolved": "Address",
            "references": {
              "Address": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Holds the customer's billing address"
          },
          "internal": false
        },
        {
          "name": "taxStatus",
          "type": "string",
          "attribute": "tax-status",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "TaxStatus",
            "resolved": "\"address_invalid\" | \"calculated\" | \"disabled\" | \"estimated\" | \"reverse_charged\" | \"tax_registration_not_found\" | \"tax_zone_not_found\"",
            "references": {
              "TaxStatus": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Tax status of the order"
          },
          "internal": false
        },
        {
          "name": "taxEnabled",
          "type": "boolean",
          "attribute": "tax-enabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tax enabled status of the order"
          },
          "internal": false
        },
        {
          "name": "shippingEnabled",
          "type": "boolean",
          "attribute": "shipping-enabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is shipping enabled for this order?"
          },
          "internal": false
        },
        {
          "name": "full",
          "type": "boolean",
          "attribute": "full",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the full address"
          },
          "internal": false
        },
        {
          "name": "showName",
          "type": "boolean",
          "attribute": "show-name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the name field."
          },
          "internal": false
        },
        {
          "name": "namePlaceholder",
          "type": "string",
          "attribute": "name-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Name or Company Name', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the placeholder fields."
          },
          "internal": false
        },
        {
          "name": "countryPlaceholder",
          "type": "string",
          "attribute": "country-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Country', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "cityPlaceholder",
          "type": "string",
          "attribute": "city-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('City', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "line1Placeholder",
          "type": "string",
          "attribute": "line-1-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Address', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "line2Placeholder",
          "type": "string",
          "attribute": "line-2-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Address Line 2', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "postalCodePlaceholder",
          "type": "string",
          "attribute": "postal-code-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Postal Code/Zip', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "statePlaceholder",
          "type": "string",
          "attribute": "state-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('State/Province/Region', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "defaultCountry",
          "type": "string",
          "attribute": "default-country",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Default country for address"
          },
          "internal": false
        },
        {
          "name": "placeholders",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    name: __('Name or Company Name', 'surecart'),\n    country: __('Country', 'surecart'),\n    city: __('City', 'surecart'),\n    line_1: __('Address', 'surecart'),\n    line_2: __('Address Line 2', 'surecart'),\n    postal_code: __('Postal Code/Zip', 'surecart'),\n    state: __('State/Province/Region', 'surecart'),\n  }",
          "complexType": {
            "original": "Partial<Address>",
            "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Address": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Placeholder values."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "address"
        }
      ]
    },
    {
      "tag": "sc-order-status-badge",
      "path": "./src/components/ui/order-status-badge/sc-order-status-badge.js",
      "source": "./src/components/ui/order-status-badge/sc-order-status-badge.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderStatusBadge",
      "assetsDirs": [],
      "dependencies": [
        "sc-tag"
      ],
      "dependents": [
        "sc-invoices-list",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-orders-list"
      ],
      "directDependencies": [
        "sc-tag"
      ],
      "directDependents": [
        "sc-invoices-list",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-orders-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag"
      ],
      "properties": [
        {
          "name": "status",
          "type": "string",
          "attribute": "status",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "OrderStatus",
            "resolved": "\"canceled\" | \"paid\" | \"payment_failed\" | \"processing\" | \"void\"",
            "references": {
              "OrderStatus": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The tag's statux type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tag's size."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style tag with rounded edges."
          },
          "internal": false
        },
        {
          "name": "clearable",
          "type": "boolean",
          "attribute": "clearable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the tag clearable."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-submit",
      "path": "./src/components/controllers/checkout-form/order-submit/sc-order-submit.js",
      "source": "./src/components/controllers/checkout-form/order-submit/sc-order-submit.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderSubmit",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-format-number",
        "sc-icon",
        "sc-paypal-buttons",
        "sc-secure-notice",
        "sc-skeleton",
        "sc-spinner",
        "sc-total"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-paypal-buttons",
        "sc-button",
        "sc-icon",
        "sc-total",
        "sc-secure-notice"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-paypal-buttons",
        "sc-button",
        "sc-icon",
        "sc-total",
        "sc-secure-notice"
      ],
      "properties": [
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the order busy"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the order loading."
          },
          "internal": false
        },
        {
          "name": "paying",
          "type": "boolean",
          "attribute": "paying",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the order paying."
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'primary'",
          "complexType": {
            "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
            "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The button's size."
          },
          "internal": false
        },
        {
          "name": "full",
          "type": "boolean",
          "attribute": "full",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show a full-width button."
          },
          "internal": false
        },
        {
          "name": "icon",
          "type": "string",
          "attribute": "icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Icon to show."
          },
          "internal": false
        },
        {
          "name": "showTotal",
          "type": "boolean",
          "attribute": "show-total",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the total."
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'live'",
          "complexType": {
            "original": "'test' | 'live'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this created in \"test\" mode"
          },
          "internal": false
        },
        {
          "name": "processors",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Processor[]",
            "resolved": "Processor[]",
            "references": {
              "Processor": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Keys and secrets for processors."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The current order."
          },
          "internal": false
        },
        {
          "name": "currencyCode",
          "type": "string",
          "attribute": "currency-code",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'usd'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency Code"
          },
          "internal": false
        },
        {
          "name": "processor",
          "type": "string",
          "attribute": "processor",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ProcessorName",
            "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
            "references": {
              "ProcessorName": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The selected processor."
          },
          "internal": false
        },
        {
          "name": "secureNoticeText",
          "type": "string",
          "attribute": "secure-notice-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Secure"
          },
          "internal": false
        },
        {
          "name": "secureNotice",
          "type": "boolean",
          "attribute": "secure-notice",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the secure notice"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-order-summary",
      "path": "./src/components/controllers/checkout-form/order-summary/sc-order-summary.js",
      "source": "./src/components/controllers/checkout-form/order-summary/sc-order-summary.tsx",
      "elementRef": "el",
      "componentClassName": "ScOrderSummary",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-line-item",
        "sc-skeleton",
        "sc-total"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-line-item",
        "sc-skeleton",
        "sc-format-number",
        "sc-total"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scShow",
          "method": "scShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Show the toggle"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scHide",
          "method": "scHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Show the toggle"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-line-item",
        "sc-skeleton",
        "sc-format-number",
        "sc-total"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "closedText",
          "type": "string",
          "attribute": "closed-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Show Summary', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "openText",
          "type": "string",
          "attribute": "open-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Summary', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "collapsible",
          "type": "boolean",
          "attribute": "collapsible",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "collapsedOnMobile",
          "type": "boolean",
          "attribute": "collapsed-on-mobile",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "attribute": "collapsed",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-order-tax-id-input",
      "path": "./src/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.js",
      "source": "./src/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.tsx",
      "elementRef": null,
      "componentClassName": "ScOrderTaxIdInput",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-dropdown",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-spinner",
        "sc-tax-id-input",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout",
        "sc-form-components-validator"
      ],
      "directDependencies": [
        "sc-tax-id-input"
      ],
      "directDependents": [
        "sc-form-components-validator"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateOrder",
          "method": "scUpdateOrder",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Make a request to update the order."
          },
          "complexType": {
            "original": "{\n    data: Partial<Checkout>;\n    options?: { silent?: boolean };\n  }",
            "resolved": "{ data: Partial<Checkout>; options?: { silent?: boolean; }; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Error event"
          },
          "complexType": {
            "original": "ResponseError",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tax-id-input"
      ],
      "properties": [
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Partial<Checkout>",
            "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
            "references": {
              "Partial": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The order"
          },
          "internal": false
        },
        {
          "name": "show",
          "type": "boolean",
          "attribute": "show",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Force show the field."
          },
          "internal": false
        },
        {
          "name": "taxIdentifier",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "TaxIdentifier",
            "resolved": "TaxIdentifier",
            "references": {
              "TaxIdentifier": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Tax identifier"
          },
          "internal": false
        },
        {
          "name": "taxProtocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "TaxProtocol",
            "resolved": "TaxProtocol",
            "references": {
              "TaxProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The tax protocol."
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this busy"
          },
          "internal": false
        },
        {
          "name": "otherLabel",
          "type": "string",
          "attribute": "other-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Other zones label"
          },
          "internal": false
        },
        {
          "name": "caGstLabel",
          "type": "string",
          "attribute": "ca-gst-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "GST zone label"
          },
          "internal": false
        },
        {
          "name": "auAbnLabel",
          "type": "string",
          "attribute": "au-abn-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "AU zone label"
          },
          "internal": false
        },
        {
          "name": "gbVatLabel",
          "type": "string",
          "attribute": "gb-vat-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "UK zone label"
          },
          "internal": false
        },
        {
          "name": "euVatLabel",
          "type": "string",
          "attribute": "eu-vat-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "EU zone label"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-orders-list",
      "path": "./src/components/controllers/dashboard/orders-list/sc-orders-list.js",
      "source": "./src/components/controllers/dashboard/orders-list/sc-orders-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScOrdersList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-flex",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-order-status-badge",
        "sc-pagination",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-text"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag",
        "sc-order-status-badge",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-divider",
        "sc-empty",
        "sc-format-date",
        "sc-text",
        "sc-format-number",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-pagination",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag",
        "sc-order-status-badge",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-divider",
        "sc-empty",
        "sc-format-date",
        "sc-text",
        "sc-format-number",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-pagination",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
          "complexType": {
            "original": "{\n    page: number;\n    per_page: number;\n  }",
            "resolved": "{ page: number; per_page: number; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Query to fetch orders"
          },
          "internal": false
        },
        {
          "name": "allLink",
          "type": "string",
          "attribute": "all-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "isCustomer",
          "type": "boolean",
          "attribute": "is-customer",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "orders"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        },
        {
          "name": "pagination"
        }
      ]
    },
    {
      "tag": "sc-pagination",
      "path": "./src/components/ui/pagination/sc-pagination.js",
      "source": "./src/components/ui/pagination/sc-pagination.tsx",
      "elementRef": null,
      "componentClassName": "ScPagination",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-flex",
        "sc-spinner"
      ],
      "dependents": [
        "sc-charges-list",
        "sc-dashboard-downloads-list",
        "sc-invoices-list",
        "sc-orders-list",
        "sc-subscriptions-list"
      ],
      "directDependencies": [
        "sc-flex",
        "sc-button"
      ],
      "directDependents": [
        "sc-charges-list",
        "sc-dashboard-downloads-list",
        "sc-invoices-list",
        "sc-orders-list",
        "sc-subscriptions-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scPrevPage",
          "method": "scPrevPage",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scNextPage",
          "method": "scNextPage",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-flex",
        "sc-button"
      ],
      "properties": [
        {
          "name": "page",
          "type": "number",
          "attribute": "page",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "perPage",
          "type": "number",
          "attribute": "per-page",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "total",
          "type": "number",
          "attribute": "total",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "totalShowing",
          "type": "number",
          "attribute": "total-showing",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "totalPages",
          "type": "number",
          "attribute": "total-pages",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasNextPage"
        },
        {
          "name": "hasPreviousPage"
        },
        {
          "name": "from"
        },
        {
          "name": "to"
        }
      ]
    },
    {
      "tag": "sc-password-nag",
      "path": "./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.js",
      "source": "./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.tsx",
      "elementRef": null,
      "componentClassName": "ScPasswordNag",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-alert",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-form",
        "sc-input",
        "sc-flex",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-form",
        "sc-input",
        "sc-flex",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'primary'",
          "complexType": {
            "original": "'primary' | 'success' | 'info' | 'warning' | 'danger'",
            "resolved": "\"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The type of alert."
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The success url."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "set"
        },
        {
          "name": "loading"
        },
        {
          "name": "error"
        },
        {
          "name": "success"
        }
      ]
    },
    {
      "tag": "sc-payment",
      "path": "./src/components/controllers/checkout-form/payment/sc-payment.js",
      "source": "./src/components/controllers/checkout-form/payment/sc-payment.tsx",
      "elementRef": "el",
      "componentClassName": "ScPayment",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-card",
        "sc-checkout-mollie-payment",
        "sc-divider",
        "sc-form-control",
        "sc-icon",
        "sc-payment-method-choice",
        "sc-payment-selected",
        "sc-skeleton",
        "sc-spinner",
        "sc-tag",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-payment-method-choice",
        "sc-icon",
        "sc-card",
        "sc-payment-selected",
        "sc-form-control",
        "sc-tag",
        "sc-checkout-mollie-payment",
        "sc-alert"
      ],
      "directDependents": [],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          },
          {
            "name": "part",
            "text": "test-badge__base - Test badge base."
          },
          {
            "name": "part",
            "text": "test-badge__content - Test badge content."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-payment-method-choice",
        "sc-icon",
        "sc-card",
        "sc-payment-selected",
        "sc-form-control",
        "sc-tag",
        "sc-checkout-mollie-payment",
        "sc-alert"
      ],
      "properties": [
        {
          "name": "stripePaymentElement",
          "type": "boolean",
          "attribute": "stripe-payment-element",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "disabledProcessorTypes",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string[]",
            "resolved": "string[]",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disabled processor types"
          },
          "internal": false
        },
        {
          "name": "secureNotice",
          "type": "string",
          "attribute": "secure-notice",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "hideTestModeBadge",
          "type": "boolean",
          "attribute": "hide-test-mode-badge",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Hide the test mode badge"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-payment-method",
      "path": "./src/components/ui/sc-payment-method/sc-payment-method.js",
      "source": "./src/components/ui/sc-payment-method/sc-payment-method.tsx",
      "elementRef": null,
      "componentClassName": "ScPaymentMethod",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-cc-logo",
        "sc-icon",
        "sc-spinner",
        "sc-tag",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-order",
        "sc-payment-methods-list",
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [
        "sc-tooltip",
        "sc-button",
        "sc-icon",
        "sc-tag",
        "sc-cc-logo",
        "sc-text"
      ],
      "directDependents": [
        "sc-order",
        "sc-payment-methods-list",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tooltip",
        "sc-button",
        "sc-icon",
        "sc-tag",
        "sc-cc-logo",
        "sc-text"
      ],
      "properties": [
        {
          "name": "paymentMethod",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "PaymentMethod",
            "resolved": "PaymentMethod",
            "references": {
              "PaymentMethod": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "full",
          "type": "boolean",
          "attribute": "full",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "externalLink",
          "type": "string",
          "attribute": "external-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "externalLinkTooltipText",
          "type": "string",
          "attribute": "external-link-tooltip-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-payment-method-choice",
      "path": "./src/components/processors/sc-payment-method-choice/sc-payment-method-choice.js",
      "source": "./src/components/processors/sc-payment-method-choice/sc-payment-method-choice.tsx",
      "elementRef": "el",
      "componentClassName": "ScPaymentMethodChoice",
      "assetsDirs": [],
      "dependencies": [
        "sc-card"
      ],
      "dependents": [
        "sc-checkout-mollie-payment",
        "sc-payment"
      ],
      "directDependencies": [
        "sc-card"
      ],
      "directDependents": [
        "sc-checkout-mollie-payment",
        "sc-payment"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-card"
      ],
      "properties": [
        {
          "name": "methodId",
          "type": "string",
          "attribute": "method-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The method id"
          },
          "internal": false
        },
        {
          "name": "processorId",
          "type": "string",
          "attribute": "processor-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The processor ID"
          },
          "internal": false
        },
        {
          "name": "isManual",
          "type": "boolean",
          "attribute": "is-manual",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this a manual processor"
          },
          "internal": false
        },
        {
          "name": "card",
          "type": "boolean",
          "attribute": "card",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show this in a card?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-payment-methods-list",
      "path": "./src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.js",
      "source": "./src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScPaymentMethodsList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-cc-logo",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-divider",
        "sc-dropdown",
        "sc-empty",
        "sc-flex",
        "sc-icon",
        "sc-menu",
        "sc-menu-item",
        "sc-payment-method",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-switch",
        "sc-tag",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-divider",
        "sc-empty",
        "sc-payment-method",
        "sc-flex",
        "sc-tag",
        "sc-dropdown",
        "sc-icon",
        "sc-menu",
        "sc-menu-item",
        "sc-dashboard-module",
        "sc-button",
        "sc-dialog",
        "sc-alert",
        "sc-switch",
        "sc-block-ui",
        "sc-text"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-divider",
        "sc-empty",
        "sc-payment-method",
        "sc-flex",
        "sc-tag",
        "sc-dropdown",
        "sc-icon",
        "sc-menu",
        "sc-menu-item",
        "sc-dashboard-module",
        "sc-button",
        "sc-dialog",
        "sc-alert",
        "sc-switch",
        "sc-block-ui",
        "sc-text"
      ],
      "properties": [
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "object",
            "resolved": "object",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Query to fetch paymentMethods"
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The heading"
          },
          "internal": false
        },
        {
          "name": "isCustomer",
          "type": "boolean",
          "attribute": "is-customer",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this a customer"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "paymentMethods"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        },
        {
          "name": "hasTitleSlot"
        },
        {
          "name": "editPaymentMethod"
        },
        {
          "name": "deletePaymentMethod"
        },
        {
          "name": "cascadeDefaultPaymentMethod"
        }
      ]
    },
    {
      "tag": "sc-payment-selected",
      "path": "./src/components/ui/payment-selected/sc-payment-selected.js",
      "source": "./src/components/ui/payment-selected/sc-payment-selected.tsx",
      "elementRef": null,
      "componentClassName": "ScPaymentSelected",
      "assetsDirs": [],
      "dependencies": [
        "sc-divider"
      ],
      "dependents": [
        "sc-checkout-mollie-payment",
        "sc-mollie-add-method",
        "sc-payment"
      ],
      "directDependencies": [
        "sc-divider"
      ],
      "directDependents": [
        "sc-checkout-mollie-payment",
        "sc-mollie-add-method",
        "sc-payment"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "divider - The divider."
          },
          {
            "name": "part",
            "text": "divider__line - The divider line."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-divider"
      ],
      "properties": [
        {
          "name": "iconName",
          "type": "string",
          "attribute": "icon-name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-paypal-add-method",
      "path": "./src/components/ui/sc-paypal-add-method/sc-paypal-add-method.js",
      "source": "./src/components/ui/sc-paypal-add-method/sc-paypal-add-method.tsx",
      "elementRef": null,
      "componentClassName": "ScPaypalAddMethod",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-alert"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert"
      ],
      "properties": [
        {
          "name": "liveMode",
          "type": "boolean",
          "attribute": "live-mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customerId",
          "type": "string",
          "attribute": "customer-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "currency",
          "type": "string",
          "attribute": "currency",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "loaded"
        },
        {
          "name": "error"
        },
        {
          "name": "paymentIntent"
        }
      ]
    },
    {
      "tag": "sc-paypal-buttons",
      "path": "./src/components/ui/paypal-buttons/paypal-buttons.js",
      "source": "./src/components/ui/paypal-buttons/paypal-buttons.tsx",
      "elementRef": "el",
      "componentClassName": "ScPaypalButtons",
      "assetsDirs": [],
      "dependencies": [
        "sc-skeleton"
      ],
      "dependents": [
        "sc-order-submit"
      ],
      "directDependencies": [
        "sc-skeleton"
      ],
      "directDependents": [
        "sc-order-submit"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emit an error"
          },
          "complexType": {
            "original": "object",
            "resolved": "object",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state machine"
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPaid",
          "method": "scPaid",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-skeleton"
      ],
      "properties": [
        {
          "name": "clientId",
          "type": "string",
          "attribute": "client-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Client id for the script."
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this busy?"
          },
          "internal": false
        },
        {
          "name": "merchantId",
          "type": "string",
          "attribute": "merchant-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The merchant id for paypal."
          },
          "internal": false
        },
        {
          "name": "merchantInitiated",
          "type": "boolean",
          "attribute": "merchant-initiated",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Merchant initiated billing enabled."
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'test' | 'live'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Test or live mode."
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The order."
          },
          "internal": false
        },
        {
          "name": "buttons",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "['paypal', 'card']",
          "complexType": {
            "original": "string[]",
            "resolved": "string[]",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Buttons to render"
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'paypal'",
          "complexType": {
            "original": "'paypal' | 'checkout' | 'buynow' | 'pay' | 'installment'",
            "resolved": "\"buynow\" | \"checkout\" | \"installment\" | \"pay\" | \"paypal\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label for the button."
          },
          "internal": false
        },
        {
          "name": "color",
          "type": "string",
          "attribute": "color",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'gold'",
          "complexType": {
            "original": "'gold' | 'blue' | 'silver' | 'black' | 'white'",
            "resolved": "\"black\" | \"blue\" | \"gold\" | \"silver\" | \"white\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Button color."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loaded"
        }
      ]
    },
    {
      "tag": "sc-premium-tag",
      "path": "./src/components/ui/sc-premium-tag/sc-premium-tag.js",
      "source": "./src/components/ui/sc-premium-tag/sc-premium-tag.tsx",
      "elementRef": null,
      "componentClassName": "ScPremiumTag",
      "assetsDirs": [],
      "dependencies": [
        "sc-tag"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-tag"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-tag"
      ],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'small'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tag's size."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-price-choice",
      "path": "./src/components/controllers/checkout-form/price-choice/sc-price-choice.js",
      "source": "./src/components/controllers/checkout-form/price-choice/sc-price-choice.tsx",
      "elementRef": null,
      "componentClassName": "ScPriceChoice",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-choice-container",
        "sc-format-number",
        "sc-icon",
        "sc-skeleton"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-alert",
        "sc-format-number",
        "sc-choice-container",
        "sc-skeleton"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateLineItem",
          "method": "scUpdateLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scRemoveLineItem",
          "method": "scRemoveLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scAddEntities",
          "method": "scAddEntities",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Add entities"
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert",
        "sc-format-number",
        "sc-choice-container",
        "sc-skeleton"
      ],
      "properties": [
        {
          "name": "priceId",
          "type": "string",
          "attribute": "price-id",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Id of the price."
          },
          "internal": false
        },
        {
          "name": "price",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Price",
            "resolved": "Price",
            "references": {
              "Price": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Stores the price"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading"
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label for the choice."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the label"
          },
          "internal": false
        },
        {
          "name": "showPrice",
          "type": "boolean",
          "attribute": "show-price",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the price amount"
          },
          "internal": false
        },
        {
          "name": "showControl",
          "type": "boolean",
          "attribute": "show-control",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the radio/checkbox control"
          },
          "internal": false
        },
        {
          "name": "description",
          "type": "string",
          "attribute": "description",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label for the choice."
          },
          "internal": false
        },
        {
          "name": "prices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{}",
          "complexType": {
            "original": "Prices",
            "resolved": "{ [id: string]: Price; }",
            "references": {
              "Prices": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Price entities"
          },
          "internal": false
        },
        {
          "name": "products",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "{}",
          "complexType": {
            "original": "Products",
            "resolved": "{ [id: string]: Product; }",
            "references": {
              "Products": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Product entity"
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Session"
          },
          "internal": false
        },
        {
          "name": "quantity",
          "type": "number",
          "attribute": "quantity",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Default quantity"
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'checkbox' | 'radio'",
            "resolved": "\"checkbox\" | \"radio\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Choice Type"
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this checked by default"
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ResponseError",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Errors from response"
          },
          "internal": false
        },
        {
          "name": "isAdHoc",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Boolean",
            "resolved": "Boolean",
            "references": {
              "Boolean": {
                "location": "global"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Is this an ad-hoc price choice"
          },
          "internal": false
        },
        {
          "name": "blank",
          "type": "boolean",
          "attribute": "blank",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this blank?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "errorMessage"
        },
        {
          "name": "adHocErrorMessage"
        },
        {
          "name": "product"
        }
      ]
    },
    {
      "tag": "sc-price-choices",
      "path": "./src/components/controllers/checkout-form/price-choices/sc-price-choices.js",
      "source": "./src/components/controllers/checkout-form/price-choices/sc-price-choices.tsx",
      "elementRef": "el",
      "componentClassName": "ScPriceChoices",
      "assetsDirs": [],
      "dependencies": [
        "sc-choices",
        "sc-form-control",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-choices"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scRemoveLineItem",
          "method": "scRemoveLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scUpdateLineItem",
          "method": "scUpdateLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scChange",
          "method": "handleChange",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [
        "sc-choices"
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Selector label"
          },
          "internal": false
        },
        {
          "name": "columns",
          "type": "number",
          "attribute": "columns",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Number of columns"
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Required by default"
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Session"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-price-input",
      "path": "./src/components/ui/price-input/sc-price-input.js",
      "source": "./src/components/ui/price-input/sc-price-input.tsx",
      "elementRef": "el",
      "componentClassName": "ScPriceInput",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-input",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-custom-order-price-input",
        "sc-donation-choices",
        "sc-product-selected-price",
        "sc-subscription-ad-hoc-confirm"
      ],
      "directDependencies": [
        "sc-input"
      ],
      "directDependents": [
        "sc-custom-order-price-input",
        "sc-donation-choices",
        "sc-product-selected-price",
        "sc-subscription-ad-hoc-confirm"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input - The html input element."
          },
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "prefix - Used to prepend an icon or element to the input."
          },
          {
            "name": "part",
            "text": "suffix - Used to prepend an icon or element to the input."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        },
        {
          "name": "triggerFocus",
          "docs": {
            "text": "Sets focus on the input.",
            "tags": []
          },
          "complexType": {
            "signature": "(options?: FocusOptions) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FocusOptions": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "setCustomValidity",
          "docs": {
            "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "(message: string) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerBlur",
          "docs": {
            "text": "Removes focus from the input.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-input"
      ],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's name attribute."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style input with rounded edges."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text."
          },
          "internal": false
        },
        {
          "name": "clearable",
          "type": "boolean",
          "attribute": "clearable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Adds a clear button when the input is populated."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's placeholder text."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the input."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input readonly."
          },
          "internal": false
        },
        {
          "name": "minlength",
          "type": "number",
          "attribute": "minlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The minimum length of input that will be considered valid."
          },
          "internal": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "attribute": "maxlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The maximum length of input that will be considered valid."
          },
          "internal": false
        },
        {
          "name": "max",
          "type": "number",
          "attribute": "max",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's maximum value."
          },
          "internal": false
        },
        {
          "name": "min",
          "type": "number",
          "attribute": "min",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's minimum value."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the input a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        },
        {
          "name": "currencyCode",
          "type": "string",
          "attribute": "currency-code",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "3 letter currency code for input"
          },
          "internal": false
        },
        {
          "name": "showCode",
          "type": "boolean",
          "attribute": "show-code",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Show the currency code with the input"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-price-range",
      "path": "./src/components/ui/sc-price-range/sc-price-range.js",
      "source": "./src/components/ui/sc-price-range/sc-price-range.tsx",
      "elementRef": null,
      "componentClassName": "ScPriceRange",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-format-number"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-number"
      ],
      "properties": [
        {
          "name": "prices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Price[]",
            "resolved": "Price[]",
            "references": {
              "Price": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The array of price objects"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "minPrice"
        },
        {
          "name": "maxPrice"
        }
      ]
    },
    {
      "tag": "sc-product-line-item",
      "path": "./src/components/ui/product-line-item/sc-product-line-item.js",
      "source": "./src/components/ui/product-line-item/sc-product-line-item.tsx",
      "elementRef": "el",
      "componentClassName": "ScProductLineItem",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-quantity-select"
      ],
      "dependents": [
        "sc-line-items",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [
        "sc-format-number",
        "sc-quantity-select",
        "sc-icon",
        "sc-line-item"
      ],
      "directDependents": [
        "sc-line-items",
        "sc-order",
        "sc-order-confirmation-line-items",
        "sc-subscription-next-payment",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "text - The text wrapper."
          },
          {
            "name": "part",
            "text": "title - The product title."
          },
          {
            "name": "part",
            "text": "static-quantity - The statically displayed quantity."
          },
          {
            "name": "part",
            "text": "quantity__base - The quantity base wrapper."
          },
          {
            "name": "part",
            "text": "input - The input control."
          },
          {
            "name": "part",
            "text": "minus - The minus control."
          },
          {
            "name": "part",
            "text": "minus-icon - The minus icon."
          },
          {
            "name": "part",
            "text": "plus - The plus control."
          },
          {
            "name": "part",
            "text": "plus-icon - The plus icon."
          },
          {
            "name": "part",
            "text": "remove-icon__base - The remove icon base wrapper."
          },
          {
            "name": "part",
            "text": "price - The price wrapper."
          },
          {
            "name": "part",
            "text": "price__amount - The price amount."
          },
          {
            "name": "part",
            "text": "price__description - The price description."
          },
          {
            "name": "part",
            "text": "suffix - The suffix items."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateQuantity",
          "method": "scUpdateQuantity",
          "bubbles": false,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the quantity changes."
          },
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scRemove",
          "method": "scRemove",
          "bubbles": false,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the quantity changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-number",
        "sc-quantity-select",
        "sc-icon",
        "sc-line-item"
      ],
      "properties": [
        {
          "name": "imageUrl",
          "type": "string",
          "attribute": "image-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Url for the product image"
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Product name"
          },
          "internal": false
        },
        {
          "name": "quantity",
          "type": "number",
          "attribute": "quantity",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Quantity"
          },
          "internal": false
        },
        {
          "name": "amount",
          "type": "number",
          "attribute": "amount",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Product monetary amount"
          },
          "internal": false
        },
        {
          "name": "fees",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Fee[]",
            "resolved": "Fee[]",
            "references": {
              "Fee": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Product line item fees."
          },
          "internal": false
        },
        {
          "name": "setupFeeTrialEnabled",
          "type": "boolean",
          "attribute": "setup-fee-trial-enabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the setup fee not included in the free trial?"
          },
          "internal": false
        },
        {
          "name": "scratchAmount",
          "type": "number",
          "attribute": "scratch-amount",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The line item scratch amount"
          },
          "internal": false
        },
        {
          "name": "currency",
          "type": "string",
          "attribute": "currency",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency for the product"
          },
          "internal": false
        },
        {
          "name": "interval",
          "type": "string",
          "attribute": "interval",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Recurring interval (i.e. monthly, once, etc.)"
          },
          "internal": false
        },
        {
          "name": "trialDurationDays",
          "type": "number",
          "attribute": "trial-duration-days",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Trial duration days"
          },
          "internal": false
        },
        {
          "name": "removable",
          "type": "boolean",
          "attribute": "removable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the line item removable"
          },
          "internal": false
        },
        {
          "name": "editable",
          "type": "boolean",
          "attribute": "editable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Can we select the quantity"
          },
          "internal": false
        },
        {
          "name": "max",
          "type": "number",
          "attribute": "max",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "100",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The max allowed."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-product-selected-price",
      "path": "./src/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.js",
      "source": "./src/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.tsx",
      "elementRef": null,
      "componentClassName": "ScProductSelectedPrice",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-form",
        "sc-form-control",
        "sc-format-number",
        "sc-icon",
        "sc-input",
        "sc-price-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form",
        "sc-price-input",
        "sc-button",
        "sc-format-number",
        "sc-icon"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateLineItem",
          "method": "scUpdateLineItem",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Toggle line item event"
          },
          "complexType": {
            "original": "LineItemData",
            "resolved": "LineItemData",
            "references": {
              "LineItemData": {
                "location": "import",
                "path": "src/types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form",
        "sc-price-input",
        "sc-button",
        "sc-format-number",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "productId",
          "type": "string",
          "attribute": "product-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The product id."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "showInput"
        },
        {
          "name": "adHocAmount"
        }
      ]
    },
    {
      "tag": "sc-prose",
      "path": "./src/components/ui/sc-prose/sc-prose.js",
      "source": "./src/components/ui/sc-prose/sc-prose.tsx",
      "elementRef": null,
      "componentClassName": "ScProse",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-provider",
      "path": "./src/components/context/provider/sc-provider.js",
      "source": "./src/components/context/provider/sc-provider.tsx",
      "elementRef": null,
      "componentClassName": "ScProvider",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "mountConsumer",
          "method": "mountEmitter",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "mountConsumer",
          "method": "mountConsumer",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "STENCIL_CONTEXT",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "{ [key: string]: any }",
            "resolved": "{ [key: string]: any; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "consumers"
        }
      ]
    },
    {
      "tag": "sc-purchase-downloads-list",
      "path": "./src/components/ui/purchase-downloads-list/sc-purchase-downloads-list.js",
      "source": "./src/components/ui/purchase-downloads-list/sc-purchase-downloads-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScPurchaseDownloadsList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-divider",
        "sc-empty",
        "sc-format-bytes",
        "sc-icon",
        "sc-skeleton",
        "sc-spacing",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row"
      ],
      "dependents": [
        "sc-dashboard-downloads-list",
        "sc-order"
      ],
      "directDependencies": [
        "sc-divider",
        "sc-empty",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-spacing",
        "sc-format-bytes",
        "sc-icon",
        "sc-dashboard-module",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-dashboard-downloads-list",
        "sc-order"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-divider",
        "sc-empty",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-spacing",
        "sc-format-bytes",
        "sc-icon",
        "sc-dashboard-module",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "allLink",
          "type": "string",
          "attribute": "all-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "busy",
          "type": "boolean",
          "attribute": "busy",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "requestNonce",
          "type": "string",
          "attribute": "request-nonce",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "string",
          "attribute": "error",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "purchases",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<Purchase>",
            "resolved": "Purchase[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "Purchase": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-quantity-select",
      "path": "./src/components/ui/quantity-select/sc-quantity-select.js",
      "source": "./src/components/ui/quantity-select/sc-quantity-select.tsx",
      "elementRef": "el",
      "componentClassName": "ScQuantitySelect",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-line-items",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-product-line-item",
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-product-line-item"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input - The input control."
          },
          {
            "name": "part",
            "text": "minus - The minus control."
          },
          {
            "name": "part",
            "text": "minus-icon - The minus icon."
          },
          {
            "name": "part",
            "text": "plus - The plus control."
          },
          {
            "name": "part",
            "text": "plus-icon - The plus icon."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control receives input."
          },
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "clickEl",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": true,
          "complexType": {
            "original": "HTMLElement",
            "resolved": "HTMLElement",
            "references": {
              "HTMLElement": {
                "location": "global"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "max",
          "type": "number",
          "attribute": "max",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "Infinity",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "min",
          "type": "number",
          "attribute": "min",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "1",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "quantity",
          "type": "number",
          "attribute": "quantity",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-radio",
      "path": "./src/components/ui/radio/sc-radio.js",
      "source": "./src/components/ui/radio/sc-radio.tsx",
      "elementRef": "el",
      "componentClassName": "ScRadio",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "control - The control wrapper."
          },
          {
            "name": "part",
            "text": "checked-icon - Checked icon."
          },
          {
            "name": "part",
            "text": "label - The label."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's checked state changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "ceClick",
          "docs": {
            "text": "Simulates a click on the radio.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The radios name attribute"
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The radios value"
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is the radio disabled"
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the radio in a checked state."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this required"
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
          },
          "internal": false
        },
        {
          "name": "edit",
          "type": "boolean",
          "attribute": "edit",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true as a workaround in the block editor to focus on the content."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        }
      ]
    },
    {
      "tag": "sc-radio-group",
      "path": "./src/components/ui/radio-group/sc-radio-group.js",
      "source": "./src/components/ui/radio-group/sc-radio-group.tsx",
      "elementRef": null,
      "componentClassName": "ScRadioGroup",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "click",
          "method": "handleRadioClick",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The radio group label. Required for proper accessibility."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The selected value of the control."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is one of these items required."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-rich-text",
      "path": "./src/components/ui/rich-text/sc-rich-text.js",
      "source": "./src/components/ui/rich-text/sc-rich-text.tsx",
      "elementRef": null,
      "componentClassName": "ScRichText",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-form-control",
        "sc-icon",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form-control",
        "sc-button",
        "sc-icon"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form-control",
        "sc-button",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's size."
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's name attribute."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's value attribute."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's label. Alternatively, you can use the label slot."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's help text. Alternatively, you can use the help-text slot."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's placeholder text."
          },
          "internal": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "attribute": "maxlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The max length."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the textarea."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the textarea readonly."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the textarea a required field."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "updatedAt"
        },
        {
          "name": "hasFocus"
        }
      ]
    },
    {
      "tag": "sc-secure-notice",
      "path": "./src/components/ui/secure-notice/sc-secure-notice.js",
      "source": "./src/components/ui/secure-notice/sc-secure-notice.tsx",
      "elementRef": null,
      "componentClassName": "ScSecureNotice",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-order-submit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-order-submit"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-select",
      "path": "./src/components/ui/select/sc-select.js",
      "source": "./src/components/ui/select/sc-select.tsx",
      "elementRef": "el",
      "componentClassName": "ScSelectDropdown",
      "assetsDirs": [],
      "dependencies": [
        "sc-dropdown",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-menu-label",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-address",
        "sc-checkout",
        "sc-compact-address",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-shipping-address"
      ],
      "directDependencies": [
        "sc-icon",
        "sc-menu-label",
        "sc-menu-item",
        "sc-form-control",
        "sc-dropdown",
        "sc-input",
        "sc-spinner",
        "sc-menu"
      ],
      "directDependents": [
        "sc-address",
        "sc-compact-address"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input - The html input element."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          },
          {
            "name": "part",
            "text": "trigger - The trigger for the dropdown."
          },
          {
            "name": "part",
            "text": "panel - Them panel for the dropdown."
          },
          {
            "name": "part",
            "text": "caret - The caret."
          },
          {
            "name": "part",
            "text": "search___base - The search base wrapper."
          },
          {
            "name": "part",
            "text": "search__input - The search input element."
          },
          {
            "name": "part",
            "text": "search__form-control - The search form control wrapper."
          },
          {
            "name": "part",
            "text": "menu__base - The menu base."
          },
          {
            "name": "part",
            "text": "spinner__base - The spinner base."
          },
          {
            "name": "part",
            "text": "empty - The empty message."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scSearch",
          "method": "scSearch",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted whent the components search query changes"
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scOpen",
          "method": "scOpen",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted whent the components search query changes"
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scClose",
          "method": "scClose",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted whent the components search query changes"
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's value changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scScrollEnd",
          "method": "scScrollEnd",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the list scrolls to the end."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "keydown",
          "method": "handleKeyDown",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "setCustomValidity",
          "docs": {
            "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "(message: string) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "reportValidity",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-icon",
        "sc-menu-label",
        "sc-menu-item",
        "sc-form-control",
        "sc-dropdown",
        "sc-input",
        "sc-spinner",
        "sc-menu"
      ],
      "properties": [
        {
          "name": "autocomplete",
          "type": "string",
          "attribute": "autocomplete",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's autocomplete attribute."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Placeholder for no value"
          },
          "internal": false
        },
        {
          "name": "searchPlaceholder",
          "type": "string",
          "attribute": "search-placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Placeholder for search"
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "choices",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<ChoiceItem>",
            "resolved": "ChoiceItem[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "ChoiceItem": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The input's value attribute."
          },
          "internal": false
        },
        {
          "name": "unselect",
          "type": "boolean",
          "attribute": "unselect",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Can we unselect items."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "search",
          "type": "boolean",
          "attribute": "search",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is search enabled?"
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's name attribute."
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Some help text for the input."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "position",
          "type": "string",
          "attribute": "position",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'bottom-right'",
          "complexType": {
            "original": "'bottom-left' | 'bottom-right'",
            "resolved": "\"bottom-left\" | \"bottom-right\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this open"
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "showParentLabel",
          "type": "boolean",
          "attribute": "show-parent-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "hoist",
          "type": "boolean",
          "attribute": "hoist",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squared",
          "type": "boolean",
          "attribute": "squared",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredBottom",
          "type": "boolean",
          "attribute": "squared-bottom",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredTop",
          "type": "boolean",
          "attribute": "squared-top",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredLeft",
          "type": "boolean",
          "attribute": "squared-left",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "squaredRight",
          "type": "boolean",
          "attribute": "squared-right",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        },
        {
          "name": "searchTerm"
        },
        {
          "name": "filteredChoices"
        }
      ]
    },
    {
      "tag": "sc-session-provider",
      "path": "./src/components/providers/session-provider/sc-session-provider.js",
      "source": "./src/components/providers/session-provider/sc-session-provider.tsx",
      "elementRef": "el",
      "componentClassName": "ScSessionProvider",
      "assetsDirs": [],
      "dependencies": [
        "sc-line-items-provider"
      ],
      "dependents": [
        "sc-checkout"
      ],
      "directDependencies": [
        "sc-line-items-provider"
      ],
      "directDependents": [
        "sc-checkout"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update line items event"
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scUpdateDraftState",
          "method": "scUpdateDraftState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Update line items event"
          },
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scPaid",
          "method": "scPaid",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scError",
          "method": "scError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Error event"
          },
          "complexType": {
            "original": "{ message: string; code?: string; data?: any; additional_errors?: any } | {}",
            "resolved": "{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state"
          },
          "complexType": {
            "original": "FormStateSetter",
            "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
            "references": {
              "FormStateSetter": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scFormSubmit",
          "method": "handleFormSubmit",
          "capture": false,
          "passive": false
        },
        {
          "name": "scPaid",
          "method": "handlePaid",
          "capture": false,
          "passive": false
        },
        {
          "name": "scPayError",
          "method": "handlePayError",
          "capture": false,
          "passive": false
        },
        {
          "name": "scUpdateAbandonedCart",
          "method": "handleAbandonedCartUpdate",
          "capture": false,
          "passive": false
        },
        {
          "name": "scApplyCoupon",
          "method": "handleCouponApply",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [
        {
          "name": "finalize",
          "docs": {
            "text": "Finalize the order.",
            "tags": [
              {
                "name": "returns"
              }
            ]
          },
          "complexType": {
            "signature": "() => Promise<Checkout | NodeJS.Timeout>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              },
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              },
              "NodeJS": {
                "location": "global"
              }
            },
            "return": "Promise<Checkout | Timeout>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-line-items-provider"
      ],
      "properties": [
        {
          "name": "prices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<PriceChoice>",
            "resolved": "PriceChoice[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "PriceChoice": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "An array of prices to pre-fill in the form."
          },
          "internal": false
        },
        {
          "name": "persist",
          "type": "boolean",
          "attribute": "persist",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we persist the session."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-skeleton",
      "path": "./src/components/ui/skeleton/sc-skeleton.js",
      "source": "./src/components/ui/skeleton/sc-skeleton.tsx",
      "elementRef": null,
      "componentClassName": "ScSkeleton",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-charges-list",
        "sc-checkout-mollie-payment",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-details",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-donation-choices",
        "sc-invoices-list",
        "sc-line-item-total",
        "sc-line-items",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-order-confirmation-totals",
        "sc-order-coupon-form",
        "sc-order-detail",
        "sc-order-submit",
        "sc-order-summary",
        "sc-orders-list",
        "sc-payment",
        "sc-payment-methods-list",
        "sc-paypal-buttons",
        "sc-price-choice",
        "sc-purchase-downloads-list",
        "sc-stripe-add-method",
        "sc-stripe-payment-element",
        "sc-subscription",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-cancel-survey",
        "sc-charges-list",
        "sc-checkout-mollie-payment",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-details",
        "sc-donation-choices",
        "sc-invoices-list",
        "sc-line-item-total",
        "sc-line-items",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-order-confirmation-line-items",
        "sc-order-detail",
        "sc-order-summary",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-paypal-buttons",
        "sc-price-choice",
        "sc-purchase-downloads-list",
        "sc-stripe-add-method",
        "sc-stripe-payment-element",
        "sc-subscription",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "effect",
          "type": "string",
          "attribute": "effect",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'sheen'",
          "complexType": {
            "original": "'pulse' | 'sheen' | 'none'",
            "resolved": "\"none\" | \"pulse\" | \"sheen\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Animation effect"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-spacing",
      "path": "./src/components/ui/spacing/sc-spacing.js",
      "source": "./src/components/ui/spacing/sc-spacing.tsx",
      "elementRef": null,
      "componentClassName": "ScSpacing",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-dashboard-downloads-list",
        "sc-order",
        "sc-purchase-downloads-list"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-order",
        "sc-purchase-downloads-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-spinner",
      "path": "./src/components/ui/spinner/sc-spinner.js",
      "source": "./src/components/ui/spinner/sc-spinner.tsx",
      "elementRef": null,
      "componentClassName": "ScSpinner",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-block-ui",
        "sc-button",
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-cart",
        "sc-cart-form-submit",
        "sc-cart-submit",
        "sc-charges-list",
        "sc-checkout",
        "sc-checkout-mollie-payment",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-dialog",
        "sc-donation-choices",
        "sc-downloads-list",
        "sc-express-payment",
        "sc-form-components-validator",
        "sc-form-state-provider",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-mollie-add-method",
        "sc-order",
        "sc-order-confirm-provider",
        "sc-order-confirmation-customer",
        "sc-order-coupon-form",
        "sc-order-shipping-address",
        "sc-order-submit",
        "sc-order-tax-id-input",
        "sc-orders-list",
        "sc-pagination",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-product-selected-price",
        "sc-purchase-downloads-list",
        "sc-rich-text",
        "sc-select",
        "sc-stripe-add-method",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-tax-id-input",
        "sc-upcoming-invoice",
        "sc-upgrade-required",
        "sc-wordpress-password-edit",
        "sc-wordpress-user",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-block-ui",
        "sc-button",
        "sc-select",
        "sc-tax-id-input"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-stacked-list",
      "path": "./src/components/ui/stacked-list/sc-stacked-list.js",
      "source": "./src/components/ui/stacked-list/sc-stacked-list.tsx",
      "elementRef": null,
      "componentClassName": "ScStackedList",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-charges-list",
        "sc-customer-details",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-order",
        "sc-order-confirmation-customer",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-wordpress-user"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-charges-list",
        "sc-customer-details",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-order",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription-details",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-wordpress-user"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-stacked-list-row",
      "path": "./src/components/ui/stacked-list-row/sc-stacked-list-row.js",
      "source": "./src/components/ui/stacked-list-row/sc-stacked-list-row.tsx",
      "elementRef": "el",
      "componentClassName": "ScStackedListRow",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-charges-list",
        "sc-customer-details",
        "sc-dashboard-customer-details",
        "sc-dashboard-downloads-list",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-order",
        "sc-order-confirmation-customer",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-wordpress-user"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-charges-list",
        "sc-customer-details",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-order",
        "sc-orders-list",
        "sc-payment-methods-list",
        "sc-purchase-downloads-list",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-wordpress-user"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "target",
          "type": "string",
          "attribute": "target",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'_self'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "mobileSize",
          "type": "number",
          "attribute": "mobile-size",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "600",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "width"
        },
        {
          "name": "hasPrefix"
        },
        {
          "name": "hasSuffix"
        }
      ]
    },
    {
      "tag": "sc-stripe-add-method",
      "path": "./src/components/ui/sc-stripe-add-method/sc-stripe-add-method.js",
      "source": "./src/components/ui/sc-stripe-add-method/sc-stripe-add-method.tsx",
      "elementRef": null,
      "componentClassName": "ScStripeAddMethod",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-form",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form",
        "sc-alert",
        "sc-skeleton",
        "sc-button"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-form",
        "sc-alert",
        "sc-skeleton",
        "sc-button"
      ],
      "properties": [
        {
          "name": "liveMode",
          "type": "boolean",
          "attribute": "live-mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customerId",
          "type": "string",
          "attribute": "customer-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "loaded"
        },
        {
          "name": "error"
        },
        {
          "name": "paymentIntent"
        }
      ]
    },
    {
      "tag": "sc-stripe-element",
      "path": "./src/components/ui/stripe-element/sc-stripe-element.js",
      "source": "./src/components/ui/stripe-element/sc-stripe-element.tsx",
      "elementRef": "el",
      "componentClassName": "ScStripeElement",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-form-control",
        "sc-text"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scPaid",
          "method": "scPaid",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPayError",
          "method": "scPayError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state"
          },
          "complexType": {
            "original": "FormStateSetter",
            "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
            "references": {
              "FormStateSetter": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "confirmCardPayment",
          "docs": {
            "text": "Confirm card payment",
            "tags": []
          },
          "complexType": {
            "signature": "(secret: any) => Promise<any>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<any>"
          },
          "internal": false
        },
        {
          "name": "confirmCardSetup",
          "docs": {
            "text": "Confirm card setup.",
            "tags": []
          },
          "complexType": {
            "signature": "(secret: any) => Promise<any>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<any>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-form-control",
        "sc-text"
      ],
      "properties": [
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Whether this field is disabled"
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The checkout session object for finalizing intents"
          },
          "internal": false
        },
        {
          "name": "mode",
          "type": "string",
          "attribute": "mode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'live'",
          "complexType": {
            "original": "'live' | 'test'",
            "resolved": "\"live\" | \"test\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Mode for the payment"
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's size."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's label. Alternatively, you can use the label slot."
          },
          "internal": false
        },
        {
          "name": "secureText",
          "type": "string",
          "attribute": "secure-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's help text. Alternatively, you can use the help-text slot."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "hasFocus",
          "type": "boolean",
          "attribute": "has-focus",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Inputs focus"
          },
          "internal": false
        },
        {
          "name": "selectedProcessorId",
          "type": "string",
          "attribute": "selected-processor-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ProcessorName",
            "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
            "references": {
              "ProcessorName": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The selected processor id"
          },
          "internal": false
        },
        {
          "name": "formState",
          "type": "string",
          "attribute": "form-state",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "FormState",
            "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
            "references": {
              "FormState": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The form state"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "error"
        },
        {
          "name": "confirming"
        }
      ]
    },
    {
      "tag": "sc-stripe-payment-element",
      "path": "./src/components/ui/stripe-payment-element/sc-stripe-payment-element.js",
      "source": "./src/components/ui/stripe-payment-element/sc-stripe-payment-element.tsx",
      "elementRef": "el",
      "componentClassName": "ScStripePaymentElement",
      "assetsDirs": [],
      "dependencies": [
        "sc-skeleton",
        "sc-text"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-text",
        "sc-skeleton"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scPaid",
          "method": "scPaid",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "The order/invoice was paid for."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPayError",
          "method": "scPayError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "There was a payment error."
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the state"
          },
          "complexType": {
            "original": "FormStateSetter",
            "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
            "references": {
              "FormStateSetter": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "confirm",
          "docs": {
            "text": "",
            "tags": []
          },
          "complexType": {
            "signature": "(type: any, args?: {}) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              },
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-text",
        "sc-skeleton"
      ],
      "properties": [
        {
          "name": "stripePaymentIntent",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "PaymentIntent",
            "resolved": "PaymentIntent",
            "references": {
              "PaymentIntent": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The Payment Intent"
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Order to watch"
          },
          "internal": false
        },
        {
          "name": "address",
          "type": "boolean",
          "attribute": "address",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we collect an address?"
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Success url to redirect."
          },
          "internal": false
        },
        {
          "name": "formState",
          "type": "string",
          "attribute": "form-state",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "FormState",
            "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
            "references": {
              "FormState": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The current form state."
          },
          "internal": false
        },
        {
          "name": "selectedProcessorId",
          "type": "string",
          "attribute": "selected-processor-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ProcessorName",
            "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
            "references": {
              "ProcessorName": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The selected processor name."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "error"
        },
        {
          "name": "loaded"
        },
        {
          "name": "confirming"
        }
      ]
    },
    {
      "tag": "sc-stripe-payment-request",
      "path": "./src/components/ui/stripe-payment-request/sc-stripe-payment-request.js",
      "source": "./src/components/ui/stripe-payment-request/sc-stripe-payment-request.tsx",
      "elementRef": "el",
      "componentClassName": "ScStripePaymentRequest",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-icon"
      ],
      "dependents": [
        "sc-express-payment"
      ],
      "directDependencies": [
        "sc-alert"
      ],
      "directDependents": [
        "sc-express-payment"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scFormSubmit",
          "method": "scFormSubmit",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPaid",
          "method": "scPaid",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPayError",
          "method": "scPayError",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scPaymentRequestLoaded",
          "method": "scPaymentRequestLoaded",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scUpdateOrderState",
          "method": "scUpdateOrderState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-alert"
      ],
      "properties": [
        {
          "name": "stripeAccountId",
          "type": "string",
          "attribute": "stripe-account-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Your stripe connected account id."
          },
          "internal": false
        },
        {
          "name": "publishableKey",
          "type": "string",
          "attribute": "publishable-key",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Stripe publishable key"
          },
          "internal": false
        },
        {
          "name": "country",
          "type": "string",
          "attribute": "country",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'US'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Country"
          },
          "internal": false
        },
        {
          "name": "currencyCode",
          "type": "string",
          "attribute": "currency-code",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'usd'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Currency"
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Checkout Session"
          },
          "internal": false
        },
        {
          "name": "prices",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Prices",
            "resolved": "{ [id: string]: Price; }",
            "references": {
              "Prices": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'total'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Label"
          },
          "internal": false
        },
        {
          "name": "amount",
          "type": "number",
          "attribute": "amount",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "0",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Amount"
          },
          "internal": false
        },
        {
          "name": "theme",
          "type": "string",
          "attribute": "theme",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'dark'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Payment request theme"
          },
          "internal": false
        },
        {
          "name": "error",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ResponseError | null",
            "resolved": "ResponseError",
            "references": {
              "ResponseError": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "paymentMethod",
          "type": "string",
          "attribute": "payment-method",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "debug",
          "type": "boolean",
          "attribute": "debug",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this in debug mode."
          },
          "internal": false
        },
        {
          "name": "formId",
          "type": "any",
          "attribute": "form-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number | string",
            "resolved": "number | string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This is required to validate the form on the server"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "loaded"
        },
        {
          "name": "debugError"
        }
      ]
    },
    {
      "tag": "sc-subscription",
      "path": "./src/components/controllers/dashboard/subscription/sc-subscription.js",
      "source": "./src/components/controllers/dashboard/subscription/sc-subscription.tsx",
      "elementRef": "el",
      "componentClassName": "ScSubscription",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-cancel-dialog",
        "sc-cancel-discount",
        "sc-cancel-survey",
        "sc-card",
        "sc-cc-logo",
        "sc-choice",
        "sc-choices",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-divider",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-payment-method",
        "sc-product-line-item",
        "sc-quantity-select",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-subscription-cancel",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-status-badge",
        "sc-tag",
        "sc-text",
        "sc-textarea",
        "sc-toggle",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-subscription-status-badge",
        "sc-format-date",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-subscription-next-payment",
        "sc-subscription-details",
        "sc-dashboard-module",
        "sc-flex",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-block-ui",
        "sc-cancel-dialog"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-subscription-status-badge",
        "sc-format-date",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-subscription-next-payment",
        "sc-subscription-details",
        "sc-dashboard-module",
        "sc-flex",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-block-ui",
        "sc-cancel-dialog"
      ],
      "properties": [
        {
          "name": "subscriptionId",
          "type": "string",
          "attribute": "subscription-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Customer id to fetch subscriptions"
          },
          "internal": false
        },
        {
          "name": "showCancel",
          "type": "boolean",
          "attribute": "show-cancel",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "object",
            "resolved": "object",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "protocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "SubscriptionProtocol",
            "resolved": "SubscriptionProtocol",
            "references": {
              "SubscriptionProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "cancelModal"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-subscription-ad-hoc-confirm",
      "path": "./src/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.js",
      "source": "./src/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.tsx",
      "elementRef": null,
      "componentClassName": "ScSubscriptionAdHocConfirm",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-price-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-price-input",
        "sc-button",
        "sc-icon",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-price-input",
        "sc-button",
        "sc-icon",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "price",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Price",
            "resolved": "Price",
            "references": {
              "Price": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": [
        {
          "name": "busy"
        }
      ]
    },
    {
      "tag": "sc-subscription-cancel",
      "path": "./src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.js",
      "source": "./src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.tsx",
      "elementRef": null,
      "componentClassName": "ScSubscriptionCancel",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-dashboard-module",
        "sc-flex",
        "sc-format-date",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-subscription"
      ],
      "directDependencies": [
        "sc-format-date",
        "sc-skeleton",
        "sc-dashboard-module",
        "sc-flex",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [
        "sc-cancel-dialog"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scAbandon",
          "method": "scAbandon",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scCancelled",
          "method": "scCancelled",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-date",
        "sc-skeleton",
        "sc-dashboard-module",
        "sc-flex",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "backUrl",
          "type": "string",
          "attribute": "back-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "protocol",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "SubscriptionProtocol",
            "resolved": "SubscriptionProtocol",
            "references": {
              "SubscriptionProtocol": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "reason",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "CancellationReason",
            "resolved": "CancellationReason",
            "references": {
              "CancellationReason": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "comment",
          "type": "string",
          "attribute": "comment",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-subscription-details",
      "path": "./src/components/controllers/dashboard/subscription-details/sc-subscription-details.js",
      "source": "./src/components/controllers/dashboard/subscription-details/sc-subscription-details.tsx",
      "elementRef": null,
      "componentClassName": "ScSubscriptionDetails",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-card",
        "sc-dialog",
        "sc-flex",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-subscription-status-badge",
        "sc-tag",
        "sc-text"
      ],
      "dependents": [
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-subscriptions-list"
      ],
      "directDependencies": [
        "sc-subscription-status-badge",
        "sc-format-date",
        "sc-skeleton",
        "sc-format-number",
        "sc-flex",
        "sc-tag",
        "sc-text",
        "sc-dialog",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row"
      ],
      "directDependents": [
        "sc-subscription",
        "sc-subscription-next-payment",
        "sc-subscriptions-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-subscription-status-badge",
        "sc-format-date",
        "sc-skeleton",
        "sc-format-number",
        "sc-flex",
        "sc-tag",
        "sc-text",
        "sc-dialog",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row"
      ],
      "properties": [
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "pendingPrice",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Price",
            "resolved": "Price",
            "references": {
              "Price": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "hideRenewalText",
          "type": "boolean",
          "attribute": "hide-renewal-text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "activationsModal"
        },
        {
          "name": "loading"
        },
        {
          "name": "hasPendingUpdate"
        }
      ]
    },
    {
      "tag": "sc-subscription-next-payment",
      "path": "./src/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.js",
      "source": "./src/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.tsx",
      "elementRef": null,
      "componentClassName": "ScSubscriptionNextPayment",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-card",
        "sc-cc-logo",
        "sc-dialog",
        "sc-divider",
        "sc-flex",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-line-item",
        "sc-payment-method",
        "sc-product-line-item",
        "sc-quantity-select",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-subscription-details",
        "sc-subscription-status-badge",
        "sc-tag",
        "sc-text",
        "sc-toggle",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-subscription"
      ],
      "directDependencies": [
        "sc-toggle",
        "sc-flex",
        "sc-skeleton",
        "sc-subscription-details",
        "sc-format-number",
        "sc-card",
        "sc-product-line-item",
        "sc-line-item",
        "sc-divider",
        "sc-payment-method",
        "sc-icon"
      ],
      "directDependents": [
        "sc-subscription"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-toggle",
        "sc-flex",
        "sc-skeleton",
        "sc-subscription-details",
        "sc-format-number",
        "sc-card",
        "sc-product-line-item",
        "sc-line-item",
        "sc-divider",
        "sc-payment-method",
        "sc-icon"
      ],
      "properties": [
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "period"
        },
        {
          "name": "loading"
        },
        {
          "name": "error"
        },
        {
          "name": "details"
        }
      ]
    },
    {
      "tag": "sc-subscription-payment",
      "path": "./src/components/controllers/dashboard/subscription-payment/sc-subscription-payment.js",
      "source": "./src/components/controllers/dashboard/subscription-payment/sc-subscription-payment.tsx",
      "elementRef": null,
      "componentClassName": "ScSubscriptionPayment",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-cc-logo",
        "sc-choice",
        "sc-choices",
        "sc-dashboard-module",
        "sc-empty",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-payment-method",
        "sc-skeleton",
        "sc-spinner",
        "sc-tag",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-choice",
        "sc-skeleton",
        "sc-button",
        "sc-empty",
        "sc-choices",
        "sc-payment-method",
        "sc-dashboard-module",
        "sc-form",
        "sc-card",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-choice",
        "sc-skeleton",
        "sc-button",
        "sc-empty",
        "sc-choices",
        "sc-payment-method",
        "sc-dashboard-module",
        "sc-form",
        "sc-card",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "subscriptionId",
          "type": "string",
          "attribute": "subscription-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "backUrl",
          "type": "string",
          "attribute": "back-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "paymentMethods",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<PaymentMethod>",
            "resolved": "PaymentMethod[]",
            "references": {
              "Array": {
                "location": "global"
              },
              "PaymentMethod": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "customerIds",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "[]",
          "complexType": {
            "original": "Array<string>",
            "resolved": "string[]",
            "references": {
              "Array": {
                "location": "global"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-subscription-payment-method",
      "path": "./src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.js",
      "source": "./src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.tsx",
      "elementRef": "el",
      "componentClassName": "ScSubscriptionPaymentMethod",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-cc-logo",
        "sc-choice",
        "sc-choices",
        "sc-dashboard-module",
        "sc-empty",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-payment-method",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-tag",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-empty",
        "sc-form",
        "sc-choices",
        "sc-button",
        "sc-icon",
        "sc-choice",
        "sc-flex",
        "sc-payment-method",
        "sc-tag",
        "sc-dashboard-module",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-empty",
        "sc-form",
        "sc-choices",
        "sc-button",
        "sc-icon",
        "sc-choice",
        "sc-flex",
        "sc-payment-method",
        "sc-tag",
        "sc-dashboard-module",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The heading"
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The subscription"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "paymentMethods"
        },
        {
          "name": "error"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "method"
        }
      ]
    },
    {
      "tag": "sc-subscription-status-badge",
      "path": "./src/components/ui/subscription-status-badge/sc-subscription-status-badge.js",
      "source": "./src/components/ui/subscription-status-badge/sc-subscription-status-badge.tsx",
      "elementRef": null,
      "componentClassName": "ScSubscriptionStatusBadge",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-date",
        "sc-tag"
      ],
      "dependents": [
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscriptions-list"
      ],
      "directDependencies": [
        "sc-format-date",
        "sc-tag"
      ],
      "directDependents": [
        "sc-subscription",
        "sc-subscription-details"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-date",
        "sc-tag"
      ],
      "properties": [
        {
          "name": "status",
          "type": "string",
          "attribute": "status",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "SubscriptionStatus",
            "resolved": "\"active\" | \"canceled\" | \"completed\" | \"incomplete\" | \"past_due\" | \"trialing\" | \"unpaid\"",
            "references": {
              "SubscriptionStatus": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "Subscription status"
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": "The tag's status type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tag's size."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style tag with rounded edges."
          },
          "internal": false
        },
        {
          "name": "clearable",
          "type": "boolean",
          "attribute": "clearable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the tag clearable."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-subscription-switch",
      "path": "./src/components/controllers/dashboard/subscription-switch/sc-subscription-switch.js",
      "source": "./src/components/controllers/dashboard/subscription-switch/sc-subscription-switch.tsx",
      "elementRef": "el",
      "componentClassName": "ScSubscriptionSwitch",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-choice",
        "sc-choices",
        "sc-dashboard-module",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-format-number",
        "sc-icon",
        "sc-skeleton",
        "sc-spinner",
        "sc-tag",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-flex",
        "sc-button",
        "sc-choice",
        "sc-skeleton",
        "sc-choices",
        "sc-format-number",
        "sc-tag",
        "sc-alert",
        "sc-dashboard-module",
        "sc-form",
        "sc-icon",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-flex",
        "sc-button",
        "sc-choice",
        "sc-skeleton",
        "sc-choices",
        "sc-format-number",
        "sc-tag",
        "sc-alert",
        "sc-dashboard-module",
        "sc-form",
        "sc-icon",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "object",
            "resolved": "object",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Customer id to fetch subscriptions"
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "productGroupId",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "ProductGroup",
            "resolved": "ProductGroup",
            "references": {
              "ProductGroup": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "productId",
          "type": "string",
          "attribute": "product-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "subscription",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Subscription",
            "resolved": "Subscription",
            "references": {
              "Subscription": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "filterAbove",
          "type": "number",
          "attribute": "filter-above",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "4",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "selectedPrice"
        },
        {
          "name": "products"
        },
        {
          "name": "prices"
        },
        {
          "name": "filter"
        },
        {
          "name": "hasFilters"
        },
        {
          "name": "showFilters"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-subscriptions-list",
      "path": "./src/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.js",
      "source": "./src/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.tsx",
      "elementRef": "el",
      "componentClassName": "ScSubscriptionsList",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-dialog",
        "sc-divider",
        "sc-empty",
        "sc-flex",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-pagination",
        "sc-skeleton",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-subscription-details",
        "sc-subscription-status-badge",
        "sc-tag",
        "sc-text"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-divider",
        "sc-empty",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-subscription-details",
        "sc-icon",
        "sc-dashboard-module",
        "sc-button",
        "sc-pagination",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-divider",
        "sc-empty",
        "sc-card",
        "sc-stacked-list",
        "sc-stacked-list-row",
        "sc-skeleton",
        "sc-subscription-details",
        "sc-icon",
        "sc-dashboard-module",
        "sc-button",
        "sc-pagination",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "query",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
          "complexType": {
            "original": "{\n    page: number;\n    per_page: number;\n  }",
            "resolved": "{ page: number; per_page: number; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Customer id to fetch subscriptions"
          },
          "internal": false
        },
        {
          "name": "allLink",
          "type": "string",
          "attribute": "all-link",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "isCustomer",
          "type": "boolean",
          "attribute": "is-customer",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "cancelBehavior",
          "type": "string",
          "attribute": "cancel-behavior",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'period_end'",
          "complexType": {
            "original": "'period_end' | 'immediate'",
            "resolved": "\"immediate\" | \"period_end\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "subscriptions"
        },
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        },
        {
          "name": "pagination"
        }
      ]
    },
    {
      "tag": "sc-switch",
      "path": "./src/components/ui/switch/sc-switch.js",
      "source": "./src/components/ui/switch/sc-switch.tsx",
      "elementRef": "el",
      "componentClassName": "ScSwitch",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-customer-edit",
        "sc-payment-methods-list"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-customer-edit",
        "sc-payment-methods-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control loses focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control's checked state changes."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Emitted when the control gains focus."
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The switch's name attribute."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The switch's value attribute."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the switch."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the switch a required field."
          },
          "internal": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "attribute": "checked",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the switch in a checked state."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
          },
          "internal": false
        },
        {
          "name": "reversed",
          "type": "boolean",
          "attribute": "reversed",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "edit",
          "type": "boolean",
          "attribute": "edit",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true as a workaround in the block editor to focus on the content."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasDescription"
        },
        {
          "name": "hasFocus"
        }
      ]
    },
    {
      "tag": "sc-tab",
      "path": "./src/components/ui/tab/sc-tab.js",
      "source": "./src/components/ui/tab/sc-tab.tsx",
      "elementRef": "el",
      "componentClassName": "ScTab",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scClose",
          "method": "scClose",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Close event"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "triggerFocus",
          "docs": {
            "text": "Sets focus to the tab.",
            "tags": []
          },
          "complexType": {
            "signature": "(options?: FocusOptions) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FocusOptions": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "triggerBlur",
          "docs": {
            "text": "Removes focus from the tab.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<void>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "panel",
          "type": "string",
          "attribute": "panel",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The name of the tab panel the tab will control. The panel must be located in the same tab group."
          },
          "internal": false
        },
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "active",
          "type": "boolean",
          "attribute": "active",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the tab in an active state."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws the tab in a disabled state."
          },
          "internal": false
        },
        {
          "name": "count",
          "type": "string",
          "attribute": "count",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasPrefix"
        },
        {
          "name": "hasSuffix"
        }
      ]
    },
    {
      "tag": "sc-tab-group",
      "path": "./src/components/ui/tab-group/sc-tab-group.js",
      "source": "./src/components/ui/tab-group/sc-tab-group.tsx",
      "elementRef": "el",
      "componentClassName": "ScTabGroup",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scTabHide",
          "method": "scTabHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scTabShow",
          "method": "scTabShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "activeTab"
        }
      ]
    },
    {
      "tag": "sc-tab-panel",
      "path": "./src/components/ui/tab-panel/sc-tab-panel.js",
      "source": "./src/components/ui/tab-panel/sc-tab-panel.tsx",
      "elementRef": "el",
      "componentClassName": "ScTabPanel",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tab panel's name."
          },
          "internal": false
        },
        {
          "name": "active",
          "type": "boolean",
          "attribute": "active",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "When true, the tab panel will be shown."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-table",
      "path": "./src/components/ui/table/sc-table.js",
      "source": "./src/components/ui/table/sc-table.tsx",
      "elementRef": null,
      "componentClassName": "ScTable",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-licenses-list"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-licenses-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-table-cell",
      "path": "./src/components/ui/table-cell/sc-table-cell.js",
      "source": "./src/components/ui/table-cell/sc-table-cell.tsx",
      "elementRef": null,
      "componentClassName": "ScTableScll",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-licenses-list"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-licenses-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-table-head",
      "path": "./src/components/ui/table-head/sc-table-head.js",
      "source": "./src/components/ui/table-head/sc-table-head.tsx",
      "elementRef": null,
      "componentClassName": "ScTable",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [],
      "directDependencies": [],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-table-row",
      "path": "./src/components/ui/table-row/sc-table-row.js",
      "source": "./src/components/ui/table-row/sc-table-row.tsx",
      "elementRef": null,
      "componentClassName": "ScTableRow",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-licenses-list"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-licenses-list"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "href",
          "type": "string",
          "attribute": "href",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-tag",
      "path": "./src/components/ui/tag/sc-tag.js",
      "source": "./src/components/ui/tag/sc-tag.tsx",
      "elementRef": null,
      "componentClassName": "ScTag",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-badge-notice",
        "sc-cart-header",
        "sc-charges-list",
        "sc-coupon-form",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-dashboard-customer-details",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-order",
        "sc-order-confirmation-customer",
        "sc-order-confirmation-details",
        "sc-order-confirmation-totals",
        "sc-order-coupon-form",
        "sc-order-status-badge",
        "sc-orders-list",
        "sc-payment",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-premium-tag",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-status-badge",
        "sc-subscription-switch",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-badge-notice",
        "sc-cart-header",
        "sc-charges-list",
        "sc-coupon-form",
        "sc-customer-details",
        "sc-customer-edit",
        "sc-downloads-list",
        "sc-invoices-list",
        "sc-licenses-list",
        "sc-order",
        "sc-order-confirmation-details",
        "sc-order-confirmation-totals",
        "sc-order-status-badge",
        "sc-orders-list",
        "sc-payment",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-premium-tag",
        "sc-subscription-details",
        "sc-subscription-payment-method",
        "sc-subscription-status-badge",
        "sc-subscription-switch"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scClear",
          "method": "scClear",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "ScTag",
            "resolved": "ScTag",
            "references": {
              "ScTag": {
                "location": "global"
              }
            }
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'default'",
          "complexType": {
            "original": "'primary' | 'success' | 'info' | 'warning' | 'danger' | 'default'",
            "resolved": "\"danger\" | \"default\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tag's type."
          },
          "internal": false
        },
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tag's size."
          },
          "internal": false
        },
        {
          "name": "pill",
          "type": "boolean",
          "attribute": "pill",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a pill-style tag with rounded edges."
          },
          "internal": false
        },
        {
          "name": "clearable",
          "type": "boolean",
          "attribute": "clearable",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the tag clearable."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-tax-id-input",
      "path": "./src/components/ui/tax-id-input/sc-tax-id-input.js",
      "source": "./src/components/ui/tax-id-input/sc-tax-id-input.tsx",
      "elementRef": null,
      "componentClassName": "ScTaxIdInput",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-dropdown",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-menu",
        "sc-menu-item",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-checkout",
        "sc-customer-edit",
        "sc-form-components-validator",
        "sc-order-tax-id-input"
      ],
      "directDependencies": [
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-dropdown",
        "sc-button",
        "sc-menu",
        "sc-menu-item"
      ],
      "directDependents": [
        "sc-customer-edit",
        "sc-order-tax-id-input"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Make a request to update the order."
          },
          "complexType": {
            "original": "{ number: string; number_type: string }",
            "resolved": "{ number: string; number_type: string; }",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Make a request to update the order."
          },
          "complexType": {
            "original": "Partial<{ number: string; number_type: string }>",
            "resolved": "{ number?: string; number_type?: string; }",
            "references": {
              "Partial": {
                "location": "global"
              }
            }
          },
          "internal": false
        },
        {
          "name": "scInputType",
          "method": "scInputType",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Change the Type"
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scSetState",
          "method": "scSetState",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Set the checkout state."
          },
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-dropdown",
        "sc-button",
        "sc-menu",
        "sc-menu-item"
      ],
      "properties": [
        {
          "name": "country",
          "type": "string",
          "attribute": "country",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The country code."
          },
          "internal": false
        },
        {
          "name": "show",
          "type": "boolean",
          "attribute": "show",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Force show the field."
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "defaultValue": "'other'",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Type of tax id"
          },
          "internal": false
        },
        {
          "name": "number",
          "type": "string",
          "attribute": "number",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "null",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tax ID Number"
          },
          "internal": false
        },
        {
          "name": "status",
          "type": "string",
          "attribute": "status",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'unknown'",
          "complexType": {
            "original": "'valid' | 'invalid' | 'unknown'",
            "resolved": "\"invalid\" | \"unknown\" | \"valid\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The status"
          },
          "internal": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "attribute": "loading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this loading?"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Help text."
          },
          "internal": false
        },
        {
          "name": "otherLabel",
          "type": "string",
          "attribute": "other-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('Tax ID', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Other zones label"
          },
          "internal": false
        },
        {
          "name": "caGstLabel",
          "type": "string",
          "attribute": "ca-gst-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('GST Number', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "GST zone label"
          },
          "internal": false
        },
        {
          "name": "auAbnLabel",
          "type": "string",
          "attribute": "au-abn-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('ABN Number', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "AU zone label"
          },
          "internal": false
        },
        {
          "name": "gbVatLabel",
          "type": "string",
          "attribute": "gb-vat-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('UK VAT', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "UK zone label"
          },
          "internal": false
        },
        {
          "name": "euVatLabel",
          "type": "string",
          "attribute": "eu-vat-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "__('EU VAT', 'surecart')",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "EU zone label"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-text",
      "path": "./src/components/ui/text/sc-text.js",
      "source": "./src/components/ui/text/sc-text.tsx",
      "elementRef": null,
      "componentClassName": "ScText",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-charges-list",
        "sc-invoices-list",
        "sc-order",
        "sc-orders-list",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-stripe-element",
        "sc-stripe-payment-element",
        "sc-subscription",
        "sc-subscription-details",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscriptions-list",
        "sc-upcoming-invoice"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-charges-list",
        "sc-invoices-list",
        "sc-orders-list",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-stripe-element",
        "sc-stripe-payment-element",
        "sc-subscription-details",
        "sc-upcoming-invoice"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "tag",
          "type": "string",
          "attribute": "tag",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'p'",
          "complexType": {
            "original": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p'",
            "resolved": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "truncate",
          "type": "boolean",
          "attribute": "truncate",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-textarea",
      "path": "./src/components/ui/sc-textarea/sc-textarea.js",
      "source": "./src/components/ui/sc-textarea/sc-textarea.tsx",
      "elementRef": "el",
      "componentClassName": "ScTextarea",
      "assetsDirs": [],
      "dependencies": [
        "sc-form-control",
        "sc-tooltip"
      ],
      "dependents": [
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-subscription"
      ],
      "directDependencies": [
        "sc-form-control"
      ],
      "directDependents": [
        "sc-cancel-survey"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "input - The html input element."
          },
          {
            "name": "part",
            "text": "form-control - The form control wrapper."
          },
          {
            "name": "part",
            "text": "label - The input label."
          },
          {
            "name": "part",
            "text": "help-text - Help text that describes how to use the input."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scChange",
          "method": "scChange",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scInput",
          "method": "scInput",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scBlur",
          "method": "scBlur",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scFocus",
          "method": "scFocus",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": ""
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [
        {
          "name": "triggerFocus",
          "docs": {
            "text": "Sets focus on the input.",
            "tags": []
          },
          "complexType": {
            "signature": "(options?: FocusOptions) => Promise<void>",
            "parameters": [
              {
                "tags": [],
                "text": ""
              }
            ],
            "references": {
              "Promise": {
                "location": "global"
              },
              "FocusOptions": {
                "location": "global"
              }
            },
            "return": "Promise<void>"
          },
          "internal": false
        },
        {
          "name": "reportValidity",
          "docs": {
            "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
            "tags": []
          },
          "complexType": {
            "signature": "() => Promise<boolean>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global"
              }
            },
            "return": "Promise<boolean>"
          },
          "internal": false
        }
      ],
      "potentialCmpRefs": [
        "sc-form-control"
      ],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'medium'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's size."
          },
          "internal": false
        },
        {
          "name": "name",
          "type": "string",
          "attribute": "name",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's name attribute."
          },
          "internal": false
        },
        {
          "name": "value",
          "type": "string",
          "attribute": "value",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's value attribute."
          },
          "internal": false
        },
        {
          "name": "filled",
          "type": "boolean",
          "attribute": "filled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Draws a filled textarea."
          },
          "internal": false
        },
        {
          "name": "label",
          "type": "string",
          "attribute": "label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's label. Alternatively, you can use the label slot."
          },
          "internal": false
        },
        {
          "name": "showLabel",
          "type": "boolean",
          "attribute": "show-label",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the label"
          },
          "internal": false
        },
        {
          "name": "help",
          "type": "string",
          "attribute": "help",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "''",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's help text. Alternatively, you can use the help-text slot."
          },
          "internal": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "attribute": "placeholder",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's placeholder text."
          },
          "internal": false
        },
        {
          "name": "rows",
          "type": "number",
          "attribute": "rows",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "4",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The number of rows to display by default."
          },
          "internal": false
        },
        {
          "name": "resize",
          "type": "string",
          "attribute": "resize",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'vertical'",
          "complexType": {
            "original": "'none' | 'vertical' | 'auto'",
            "resolved": "\"auto\" | \"none\" | \"vertical\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Controls how the textarea can be resized."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the textarea."
          },
          "internal": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "attribute": "readonly",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the textarea readonly."
          },
          "internal": false
        },
        {
          "name": "minlength",
          "type": "number",
          "attribute": "minlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The minimum length of input that will be considered valid."
          },
          "internal": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "attribute": "maxlength",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The maximum length of input that will be considered valid."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Makes the textarea a required field."
          },
          "internal": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "attribute": "invalid",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, and `maxlength` using the browser's constraint validation API."
          },
          "internal": false
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "attribute": "autocapitalize",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'",
            "resolved": "\"characters\" | \"none\" | \"off\" | \"on\" | \"sentences\" | \"words\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's autocapitalize attribute."
          },
          "internal": false
        },
        {
          "name": "autocorrect",
          "type": "string",
          "attribute": "autocorrect",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's autocorrect attribute."
          },
          "internal": false
        },
        {
          "name": "autocomplete",
          "type": "string",
          "attribute": "autocomplete",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's autocomplete attribute."
          },
          "internal": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "attribute": "autofocus",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's autofocus attribute."
          },
          "internal": false
        },
        {
          "name": "enterkeyhint",
          "type": "string",
          "attribute": "enterkeyhint",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'",
            "resolved": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The input's enterkeyhint attribute. This can be used to customize the label or icon of the Enter key on virtual\nkeyboards."
          },
          "internal": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "attribute": "spellcheck",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Enables spell checking on the textarea."
          },
          "internal": false
        },
        {
          "name": "inputmode",
          "type": "string",
          "attribute": "inputmode",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'",
            "resolved": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The textarea's inputmode attribute."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "hasFocus"
        },
        {
          "name": "showCharLimit"
        }
      ]
    },
    {
      "tag": "sc-toggle",
      "path": "./src/components/ui/sc-toggle/sc-toggle.js",
      "source": "./src/components/ui/sc-toggle/sc-toggle.tsx",
      "elementRef": "el",
      "componentClassName": "ScToggle",
      "assetsDirs": [],
      "dependencies": [
        "sc-icon"
      ],
      "dependents": [
        "sc-mollie-add-method",
        "sc-subscription",
        "sc-subscription-next-payment"
      ],
      "directDependencies": [
        "sc-icon"
      ],
      "directDependents": [
        "sc-mollie-add-method",
        "sc-subscription-next-payment"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [
        {
          "name": "scShow",
          "method": "scShow",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Show the toggle"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        },
        {
          "name": "scHide",
          "method": "scHide",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": {
            "tags": [],
            "text": "Show the toggle"
          },
          "complexType": {
            "original": "void",
            "resolved": "void",
            "references": {}
          },
          "internal": false
        }
      ],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-icon"
      ],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Indicates whether or not the details is open. You can use this in lieu of the show/hide methods."
          },
          "internal": false
        },
        {
          "name": "summary",
          "type": "string",
          "attribute": "summary",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The summary to show in the details header. If you need to display HTML, use the `summary` slot instead."
          },
          "internal": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "attribute": "disabled",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Disables the details so it can't be toggled."
          },
          "internal": false
        },
        {
          "name": "borderless",
          "type": "boolean",
          "attribute": "borderless",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this a borderless toggle?"
          },
          "internal": false
        },
        {
          "name": "shady",
          "type": "boolean",
          "attribute": "shady",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Is this a shady"
          },
          "internal": false
        },
        {
          "name": "showControl",
          "type": "boolean",
          "attribute": "show-control",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show a radio control?"
          },
          "internal": false
        },
        {
          "name": "showIcon",
          "type": "boolean",
          "attribute": "show-icon",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should we show the arrow icon?"
          },
          "internal": false
        },
        {
          "name": "collapsible",
          "type": "boolean",
          "attribute": "collapsible",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Are these collapsible?"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-toggles",
      "path": "./src/components/ui/sc-toggles/sc-toggles.js",
      "source": "./src/components/ui/sc-toggles/sc-toggles.tsx",
      "elementRef": "el",
      "componentClassName": "ScToggles",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-mollie-add-method"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-mollie-add-method"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scShow",
          "method": "handleShowChange",
          "capture": false,
          "passive": false
        }
      ],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "accordion",
          "type": "boolean",
          "attribute": "accordion",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "false",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Should this function as an accordion?"
          },
          "internal": false
        },
        {
          "name": "collapsible",
          "type": "boolean",
          "attribute": "collapsible",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Are these collapsible?"
          },
          "internal": false
        },
        {
          "name": "theme",
          "type": "string",
          "attribute": "theme",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'default'",
          "complexType": {
            "original": "'default' | 'container'",
            "resolved": "\"container\" | \"default\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Theme for the toggles"
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-tooltip",
      "path": "./src/components/ui/tooltip/sc-tooltip.js",
      "source": "./src/components/ui/tooltip/sc-tooltip.tsx",
      "elementRef": "el",
      "componentClassName": "ScTooltip",
      "assetsDirs": [],
      "dependencies": [],
      "dependents": [
        "sc-address",
        "sc-button-group",
        "sc-cancel-dialog",
        "sc-cancel-survey",
        "sc-checkout",
        "sc-choices",
        "sc-compact-address",
        "sc-coupon-form",
        "sc-custom-order-price-input",
        "sc-customer-edit",
        "sc-customer-email",
        "sc-customer-firstname",
        "sc-customer-lastname",
        "sc-customer-name",
        "sc-donation-choices",
        "sc-form-components-validator",
        "sc-form-control",
        "sc-input",
        "sc-licenses-list",
        "sc-login-form",
        "sc-login-provider",
        "sc-order",
        "sc-order-bumps",
        "sc-order-coupon-form",
        "sc-order-password",
        "sc-order-shipping-address",
        "sc-order-tax-id-input",
        "sc-password-nag",
        "sc-payment",
        "sc-payment-method",
        "sc-payment-methods-list",
        "sc-price-choices",
        "sc-price-input",
        "sc-product-selected-price",
        "sc-rich-text",
        "sc-select",
        "sc-stripe-element",
        "sc-subscription",
        "sc-subscription-ad-hoc-confirm",
        "sc-subscription-next-payment",
        "sc-subscription-payment",
        "sc-subscription-payment-method",
        "sc-subscription-switch",
        "sc-tax-id-input",
        "sc-textarea",
        "sc-upcoming-invoice",
        "sc-wordpress-password-edit",
        "sc-wordpress-user-edit"
      ],
      "directDependencies": [],
      "directDependents": [
        "sc-form-control",
        "sc-payment-method"
      ],
      "docs": {
        "tags": [
          {
            "name": "part",
            "text": "base - The elements base wrapper."
          },
          {
            "name": "part",
            "text": "text - The tooltip text."
          }
        ],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [
        {
          "name": "scroll",
          "method": "handleWindowScroll",
          "capture": false,
          "passive": true,
          "target": "window"
        },
        {
          "name": "resize",
          "method": "handleWindowScroll",
          "capture": false,
          "passive": true,
          "target": "window"
        }
      ],
      "methods": [],
      "potentialCmpRefs": [],
      "properties": [
        {
          "name": "open",
          "type": "boolean",
          "attribute": "open",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Open or not"
          },
          "internal": false
        },
        {
          "name": "width",
          "type": "string",
          "attribute": "width",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tooltip fixed width"
          },
          "internal": false
        },
        {
          "name": "text",
          "type": "string",
          "attribute": "text",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Tooltip text"
          },
          "internal": false
        },
        {
          "name": "freeze",
          "type": "boolean",
          "attribute": "freeze",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "Freeze open or closed."
          },
          "internal": false
        },
        {
          "name": "padding",
          "type": "number",
          "attribute": "padding",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "5",
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tooltip's padding."
          },
          "internal": false
        },
        {
          "name": "type",
          "type": "string",
          "attribute": "type",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'info'",
          "complexType": {
            "original": "'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text'",
            "resolved": "\"danger\" | \"info\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tooltip's type."
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "top"
        },
        {
          "name": "left"
        }
      ]
    },
    {
      "tag": "sc-total",
      "path": "./src/components/controllers/checkout-form/total/sc-total.js",
      "source": "./src/components/controllers/checkout-form/total/sc-total.tsx",
      "elementRef": null,
      "componentClassName": "ScTotal",
      "assetsDirs": [],
      "dependencies": [
        "sc-format-number"
      ],
      "dependents": [
        "sc-line-item-total",
        "sc-order-confirmation-details",
        "sc-order-confirmation-totals",
        "sc-order-submit",
        "sc-order-summary"
      ],
      "directDependencies": [
        "sc-format-number"
      ],
      "directDependents": [
        "sc-line-item-total",
        "sc-order-submit",
        "sc-order-summary"
      ],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "none",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-number"
      ],
      "properties": [
        {
          "name": "total",
          "type": "string",
          "attribute": "total",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'amount_due'",
          "complexType": {
            "original": "'total' | 'subtotal' | 'amount_due'",
            "resolved": "\"amount_due\" | \"subtotal\" | \"total\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "order",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "Checkout",
            "resolved": "Checkout",
            "references": {
              "Checkout": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": null,
      "states": []
    },
    {
      "tag": "sc-upcoming-invoice",
      "path": "./src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.js",
      "source": "./src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.tsx",
      "elementRef": "el",
      "componentClassName": "ScUpcomingInvoice",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-cc-logo",
        "sc-coupon-form",
        "sc-dashboard-module",
        "sc-divider",
        "sc-flex",
        "sc-form",
        "sc-form-control",
        "sc-format-date",
        "sc-format-number",
        "sc-icon",
        "sc-input",
        "sc-line-item",
        "sc-payment-method",
        "sc-product-line-item",
        "sc-quantity-select",
        "sc-skeleton",
        "sc-spinner",
        "sc-tag",
        "sc-text",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-format-date",
        "sc-skeleton",
        "sc-format-number",
        "sc-product-line-item",
        "sc-line-item",
        "sc-coupon-form",
        "sc-divider",
        "sc-flex",
        "sc-payment-method",
        "sc-icon",
        "sc-alert",
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-button",
        "sc-text",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-format-date",
        "sc-skeleton",
        "sc-format-number",
        "sc-product-line-item",
        "sc-line-item",
        "sc-coupon-form",
        "sc-divider",
        "sc-flex",
        "sc-payment-method",
        "sc-icon",
        "sc-alert",
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-button",
        "sc-text",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "subscriptionId",
          "type": "string",
          "attribute": "subscription-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "priceId",
          "type": "string",
          "attribute": "price-id",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "quantity",
          "type": "number",
          "attribute": "quantity",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "discount",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "{\n    promotion_code?: string;\n    coupon?: string;\n  }",
            "resolved": "{ promotion_code?: string; coupon?: string; }",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "payment_method",
          "type": "unknown",
          "reflect": false,
          "mutable": true,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "PaymentMethod",
            "resolved": "PaymentMethod",
            "references": {
              "PaymentMethod": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "quantityUpdatesEnabled",
          "type": "boolean",
          "attribute": "quantity-updates-enabled",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "adHocAmount",
          "type": "number",
          "attribute": "ad-hoc-amount",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "number",
            "resolved": "number",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "busy"
        },
        {
          "name": "error"
        },
        {
          "name": "price"
        },
        {
          "name": "invoice"
        },
        {
          "name": "couponError"
        }
      ]
    },
    {
      "tag": "sc-upgrade-required",
      "path": "./src/components/ui/sc-upgrade-required/sc-upgrade-required.js",
      "source": "./src/components/ui/sc-upgrade-required/sc-upgrade-required.tsx",
      "elementRef": null,
      "componentClassName": "ScUpgradeRequired",
      "assetsDirs": [],
      "dependencies": [
        "sc-button",
        "sc-dialog",
        "sc-icon",
        "sc-spinner"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-dialog",
        "sc-icon",
        "sc-button"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-premium-badge",
        "sc-dialog",
        "sc-icon",
        "sc-button"
      ],
      "properties": [
        {
          "name": "size",
          "type": "string",
          "attribute": "size",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "'small'",
          "complexType": {
            "original": "'small' | 'medium' | 'large'",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": "The tag's size."
          },
          "internal": false
        },
        {
          "name": "required",
          "type": "boolean",
          "attribute": "required",
          "reflect": true,
          "mutable": false,
          "required": false,
          "optional": false,
          "defaultValue": "true",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "open"
        }
      ]
    },
    {
      "tag": "sc-wordpress-password-edit",
      "path": "./src/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.js",
      "source": "./src/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.tsx",
      "elementRef": null,
      "componentClassName": "ScWordPressPasswordEdit",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-input",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-input",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "user",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "WordPressUser",
            "resolved": "WordPressUser",
            "references": {
              "WordPressUser": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    },
    {
      "tag": "sc-wordpress-user",
      "path": "./src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.js",
      "source": "./src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.tsx",
      "elementRef": null,
      "componentClassName": "ScWordPressUser",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-button",
        "sc-card",
        "sc-dashboard-module",
        "sc-icon",
        "sc-spinner",
        "sc-stacked-list",
        "sc-stacked-list-row"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-stacked-list-row",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-stacked-list"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-stacked-list-row",
        "sc-dashboard-module",
        "sc-button",
        "sc-icon",
        "sc-card",
        "sc-stacked-list"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "user",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "WordPressUser",
            "resolved": "WordPressUser",
            "references": {
              "WordPressUser": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": []
    },
    {
      "tag": "sc-wordpress-user-edit",
      "path": "./src/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.js",
      "source": "./src/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.tsx",
      "elementRef": null,
      "componentClassName": "ScWordPressUserEdit",
      "assetsDirs": [],
      "dependencies": [
        "sc-alert",
        "sc-block-ui",
        "sc-button",
        "sc-card",
        "sc-column",
        "sc-columns",
        "sc-dashboard-module",
        "sc-form",
        "sc-form-control",
        "sc-icon",
        "sc-input",
        "sc-spinner",
        "sc-tooltip"
      ],
      "dependents": [],
      "directDependencies": [
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-input",
        "sc-columns",
        "sc-column",
        "sc-button",
        "sc-block-ui"
      ],
      "directDependents": [],
      "docs": {
        "tags": [],
        "text": ""
      },
      "encapsulation": "shadow",
      "excludeFromCollection": false,
      "events": [],
      "internal": false,
      "legacyConnect": [],
      "legacyContext": [],
      "listeners": [],
      "methods": [],
      "potentialCmpRefs": [
        "sc-dashboard-module",
        "sc-card",
        "sc-form",
        "sc-input",
        "sc-columns",
        "sc-column",
        "sc-button",
        "sc-block-ui"
      ],
      "properties": [
        {
          "name": "heading",
          "type": "string",
          "attribute": "heading",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "successUrl",
          "type": "string",
          "attribute": "success-url",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        },
        {
          "name": "user",
          "type": "unknown",
          "reflect": false,
          "mutable": false,
          "required": false,
          "optional": false,
          "complexType": {
            "original": "WordPressUser",
            "resolved": "WordPressUser",
            "references": {
              "WordPressUser": {
                "location": "import",
                "path": "../../../../types"
              }
            }
          },
          "docs": {
            "tags": [],
            "text": ""
          },
          "internal": false
        }
      ],
      "shadowDelegatesFocus": false,
      "states": [
        {
          "name": "loading"
        },
        {
          "name": "error"
        }
      ]
    }
  ],
  "entries": [
    {
      "cmps": [
        {
          "tagName": "sc-avatar",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScAvatar",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "image",
              "type": "string",
              "attribute": "image",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The image source to use for the avatar."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "A label to use to describe the avatar to assistive devices."
              },
              "internal": false
            },
            {
              "name": "initials",
              "type": "string",
              "attribute": "initials",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Initials to use as a fallback when no image is available (1-2 characters max recommended)."
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "string",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'eager'",
              "complexType": {
                "original": "'eager' | 'lazy'",
                "resolved": "\"eager\" | \"lazy\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates how the browser should load the image."
              },
              "internal": false
            },
            {
              "name": "shape",
              "type": "string",
              "attribute": "shape",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'circle'",
              "complexType": {
                "original": "'circle' | 'square' | 'rounded'",
                "resolved": "\"circle\" | \"rounded\" | \"square\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The shape of the avatar."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasError"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "image",
              "methodName": "handleImageChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-AVATAR",
              "styleStr": null,
              "styleIdentifier": "scAvatarStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-avatar/sc-avatar.css",
                  "relativePath": "sc-avatar.css",
                  "originalComponentPath": "sc-avatar.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-avatar/sc-avatar.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-avatar/sc-avatar.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "aria-label",
            "aria-hidden",
            "name",
            "library",
            "src",
            "loading",
            "alt",
            "onError"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "sl-icon",
            "img"
          ],
          "htmlParts": [
            "base",
            "initials",
            "icon",
            "image"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sl-icon"
          ],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        },
        {
          "tagName": "sc-button",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScButton",
          "elementRef": "button",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'default'",
              "complexType": {
                "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
                "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button's type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button's size."
              },
              "internal": false
            },
            {
              "name": "caret",
              "type": "boolean",
              "attribute": "caret",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the button with a caret for use with dropdowns, popovers, etc."
              },
              "internal": false
            },
            {
              "name": "full",
              "type": "boolean",
              "attribute": "full",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the button full-width."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the button."
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the button in a loading state."
              },
              "internal": false
            },
            {
              "name": "outline",
              "type": "boolean",
              "attribute": "outline",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws an outlined button."
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the button in a busy state."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style button with rounded edges."
              },
              "internal": false
            },
            {
              "name": "circle",
              "type": "boolean",
              "attribute": "circle",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a circle button."
              },
              "internal": false
            },
            {
              "name": "submit",
              "type": "boolean",
              "attribute": "submit",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates if activating the button should submit the form. Ignored when `href` is set."
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "An optional name for the button. Ignored when `href` is set."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "An optional value for the button. Ignored when `href` is set."
              },
              "internal": false
            },
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`."
              },
              "internal": false
            },
            {
              "name": "target",
              "type": "string",
              "attribute": "target",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'_blank' | '_parent' | '_self' | '_top'",
                "resolved": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tells the browser where to open the link. Only used when `href` is set."
              },
              "internal": false
            },
            {
              "name": "download",
              "type": "string",
              "attribute": "download",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tells the browser to download the linked file as this filename. Only used when `href` is set."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            },
            {
              "name": "hasLabel"
            },
            {
              "name": "hasPrefix"
            },
            {
              "name": "hasSuffix"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the button loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the button gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-BUTTON",
              "styleStr": null,
              "styleIdentifier": "scButtonStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/button/sc-button.scss",
                  "relativePath": "sc-button.scss",
                  "originalComponentPath": "sc-button.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "label - The button label."
              },
              {
                "name": "part",
                "text": "prefix - The button prefix."
              },
              {
                "name": "part",
                "text": "suffix - The button suffix."
              },
              {
                "name": "part",
                "text": "caret - The button caret."
              },
              {
                "name": "part",
                "text": "spinner - The button spinner."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/button/sc-button.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/button/sc-button.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "onSlotchange",
            "name",
            "viewBox",
            "fill",
            "stroke",
            "stroke-width",
            "stroke-linecap",
            "stroke-linejoin",
            "points",
            "exportparts",
            "href",
            "target",
            "download",
            "rel",
            "role",
            "aria-disabled",
            "tabindex",
            "disabled",
            "type",
            "value",
            "onBlur",
            "onFocus",
            "onClick"
          ],
          "htmlTagNames": [
            "button",
            "span",
            "slot",
            "svg",
            "polyline",
            "sc-spinner"
          ],
          "htmlParts": [
            "prefix",
            "label",
            "suffix",
            "caret",
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-spinner"
          ],
          "directDependencies": [
            "sc-spinner"
          ],
          "dependencies": [
            "sc-spinner"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-cart-form-submit",
            "sc-cart-submit",
            "sc-charges-list",
            "sc-checkout",
            "sc-coupon-form",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-dialog",
            "sc-donation-choices",
            "sc-downloads-list",
            "sc-form-components-validator",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirm-provider",
            "sc-order-confirmation-customer",
            "sc-order-coupon-form",
            "sc-order-submit",
            "sc-order-tax-id-input",
            "sc-orders-list",
            "sc-pagination",
            "sc-password-nag",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-product-selected-price",
            "sc-purchase-downloads-list",
            "sc-rich-text",
            "sc-stripe-add-method",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-tax-id-input",
            "sc-upcoming-invoice",
            "sc-upgrade-required",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-cart-form-submit",
            "sc-cart-submit",
            "sc-charges-list",
            "sc-coupon-form",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dialog",
            "sc-donation-choices",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirm-provider",
            "sc-order-submit",
            "sc-orders-list",
            "sc-pagination",
            "sc-password-nag",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-product-selected-price",
            "sc-purchase-downloads-list",
            "sc-rich-text",
            "sc-stripe-add-method",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-tax-id-input",
            "sc-upcoming-invoice",
            "sc-upgrade-required",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ]
        },
        {
          "tagName": "sc-dropdown",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDropdown",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "clickEl",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": true,
              "complexType": {
                "original": "HTMLElement",
                "resolved": "HTMLElement",
                "references": {
                  "HTMLElement": {
                    "location": "global"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this disabled."
              },
              "internal": false
            },
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": true,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates whether or not the dropdown is open. You can use this in lieu of the show/hide methods."
              },
              "internal": false
            },
            {
              "name": "position",
              "type": "string",
              "attribute": "position",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'",
                "resolved": "\"bottom-left\" | \"bottom-right\" | \"top-left\" | \"top-right\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The placement of the dropdown panel"
              },
              "internal": false
            },
            {
              "name": "placement",
              "type": "string",
              "attribute": "placement",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'bottom-start'",
              "complexType": {
                "original": "| 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end'",
                "resolved": "\"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The placement of the dropdown."
              },
              "internal": false
            },
            {
              "name": "distance",
              "type": "number",
              "attribute": "distance",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "10",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The distance in pixels from which to offset the panel away from its trigger."
              },
              "internal": false
            },
            {
              "name": "skidding",
              "type": "number",
              "attribute": "skidding",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The distance in pixels from which to offset the panel along its trigger."
              },
              "internal": false
            },
            {
              "name": "hoist",
              "type": "boolean",
              "attribute": "hoist",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n`overflow: auto|scroll`."
              },
              "internal": false
            },
            {
              "name": "closeOnSelect",
              "type": "boolean",
              "attribute": "close-on-select",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Determines whether the dropdown should hide when a menu item is selected"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "isVisible"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scShow",
              "method": "scShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the dropdown opens. Calling `event.preventDefault()` will prevent it from being opened."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scHide",
              "method": "scHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the dropdown closes. Calling `event.preventDefault()` will prevent it from being closed."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DROPDOWN",
              "styleStr": null,
              "styleIdentifier": "scDropdownStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/dropdown/dropdown.scss",
                  "relativePath": "dropdown.scss",
                  "originalComponentPath": "dropdown.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "trigger - The trigger."
              },
              {
                "name": "part",
                "text": "panel - The panel."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/dropdown/dropdown.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/dropdown/dropdown.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "ref",
            "onClick",
            "aria-expanded",
            "aria-haspopup",
            "name",
            "role",
            "aria-orientation",
            "aria-labelledby",
            "tabindex"
          ],
          "htmlTagNames": [
            "div",
            "span",
            "slot"
          ],
          "htmlParts": [
            "base",
            "trigger",
            "panel"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-checkout",
            "sc-compact-address",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-payment-methods-list",
            "sc-select",
            "sc-tax-id-input"
          ],
          "directDependents": [
            "sc-payment-methods-list",
            "sc-select",
            "sc-tax-id-input"
          ]
        },
        {
          "tagName": "sc-icon",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScIcon",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The name of the icon to draw."
              },
              "internal": false
            },
            {
              "name": "src",
              "type": "string",
              "attribute": "src",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "An external URL of an SVG file."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "An alternative description to use for accessibility. If omitted, the name or src will be used to generate it."
              },
              "internal": false
            },
            {
              "name": "library",
              "type": "string",
              "attribute": "library",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'default'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The name of a registered custom icon library."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "svg"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scLoad",
              "method": "scLoad",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the icon has loaded."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the icon failed to load."
              },
              "complexType": {
                "original": "{ status: number }",
                "resolved": "{ status: number; }",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "name",
              "methodName": "setIcon"
            },
            {
              "propName": "src",
              "methodName": "setIcon"
            },
            {
              "propName": "library",
              "methodName": "setIcon"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ICON",
              "styleStr": null,
              "styleIdentifier": "scIconStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/icon/sc-icon.css",
                  "relativePath": "sc-icon.css",
                  "originalComponentPath": "sc-icon.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [
            {
              "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/icon/icon-assets",
              "cmpRelativePath": "icon-assets",
              "originalComponentPath": "icon-assets"
            }
          ],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/icon/sc-icon.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/icon/sc-icon.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "aria-label",
            "innerHTML"
          ],
          "htmlTagNames": [
            "div"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-alert",
            "sc-breadcrumb",
            "sc-breadcrumbs",
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-cart",
            "sc-cart-form",
            "sc-cart-form-submit",
            "sc-cart-header",
            "sc-cart-icon",
            "sc-cart-submit",
            "sc-cc-logo",
            "sc-charges-list",
            "sc-checkout",
            "sc-checkout-form-errors",
            "sc-checkout-mollie-payment",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-downloads-list",
            "sc-drawer",
            "sc-empty",
            "sc-error",
            "sc-express-payment",
            "sc-form-components-validator",
            "sc-form-error-provider",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-line-items",
            "sc-login-form",
            "sc-login-provider",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirm-components-validator",
            "sc-order-confirm-provider",
            "sc-order-confirmation",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-order-coupon-form",
            "sc-order-manual-instructions",
            "sc-order-shipping-address",
            "sc-order-submit",
            "sc-order-tax-id-input",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-paypal-add-method",
            "sc-price-choice",
            "sc-product-line-item",
            "sc-product-selected-price",
            "sc-purchase-downloads-list",
            "sc-quantity-select",
            "sc-rich-text",
            "sc-select",
            "sc-stripe-add-method",
            "sc-stripe-payment-request",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-tax-id-input",
            "sc-toggle",
            "sc-upcoming-invoice",
            "sc-upgrade-required",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-alert",
            "sc-breadcrumb",
            "sc-breadcrumbs",
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-cart-form-submit",
            "sc-cart-header",
            "sc-cart-icon",
            "sc-cart-submit",
            "sc-cc-logo",
            "sc-charges-list",
            "sc-customer-details",
            "sc-dialog",
            "sc-downloads-list",
            "sc-drawer",
            "sc-empty",
            "sc-invoices-list",
            "sc-login-form",
            "sc-order",
            "sc-order-confirm-provider",
            "sc-order-submit",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-product-line-item",
            "sc-product-selected-price",
            "sc-purchase-downloads-list",
            "sc-quantity-select",
            "sc-rich-text",
            "sc-select",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-next-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-tax-id-input",
            "sc-toggle",
            "sc-upcoming-invoice",
            "sc-upgrade-required",
            "sc-wordpress-user"
          ]
        },
        {
          "tagName": "sc-menu",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScMenu",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "setCurrentItem",
              "docs": {
                "text": "",
                "tags": [
                  {
                    "name": "internal",
                    "text": "Sets the current menu item to the specified element. This sets `tabindex=\"0\"` on the target element and\n`tabindex=\"-1\"` to all other items. This method must be called prior to setting focus on a menu item."
                  }
                ]
              },
              "complexType": {
                "signature": "(item: HTMLScMenuItemElement) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "HTMLScMenuItemElement": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": true
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scSelect",
              "method": "scSelect",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "{ item: HTMLScMenuItemElement }",
                "resolved": "{ item: HTMLScMenuItemElement; }",
                "references": {
                  "HTMLScMenuItemElement": {
                    "location": "global"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-MENU",
              "styleStr": null,
              "styleIdentifier": "scMenuStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu/sc-menu.scss",
                  "relativePath": "sc-menu.scss",
                  "originalComponentPath": "sc-menu.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu/sc-menu.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu/sc-menu.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "tabindex",
            "onKeyDown",
            "onSlotchange"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-checkout",
            "sc-compact-address",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-payment-methods-list",
            "sc-select",
            "sc-tax-id-input"
          ],
          "directDependents": [
            "sc-payment-methods-list",
            "sc-select",
            "sc-tax-id-input"
          ]
        },
        {
          "tagName": "sc-menu-item",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScMenuItem",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Optional link to follow."
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the item in a checked state."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "A unique value to store in the menu item. This can be used as a way to identify menu items when selected."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the menu item in a disabled state."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            }
          ],
          "methods": [
            {
              "name": "setFocus",
              "docs": {
                "text": "Sets focus on the button.",
                "tags": []
              },
              "complexType": {
                "signature": "(options?: FocusOptions) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FocusOptions": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "setBlur",
              "docs": {
                "text": "Removes focus from the button.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-MENU-ITEM",
              "styleStr": null,
              "styleIdentifier": "scMenuItemStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-item/sc-menu-item.scss",
                  "relativePath": "sc-menu-item.scss",
                  "originalComponentPath": "sc-menu-item.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-item/sc-menu-item.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-item/sc-menu-item.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "ref",
            "part",
            "class",
            "href",
            "role",
            "aria-disabled",
            "aria-checked",
            "tabindex",
            "onFocus",
            "onBlur",
            "onMouseEnter",
            "onMouseLeave",
            "xmlns",
            "width",
            "height",
            "fill",
            "viewBox",
            "d",
            "name"
          ],
          "htmlTagNames": [
            "span",
            "svg",
            "path",
            "slot"
          ],
          "htmlParts": [
            "base",
            "checked-icon",
            "prefix",
            "label",
            "suffix"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-checkout",
            "sc-compact-address",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-payment-methods-list",
            "sc-select",
            "sc-tax-id-input"
          ],
          "directDependents": [
            "sc-payment-methods-list",
            "sc-select",
            "sc-tax-id-input"
          ]
        },
        {
          "tagName": "sc-spinner",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSpinner",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SPINNER",
              "styleStr": null,
              "styleIdentifier": "scSpinnerStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/spinner/sc-spinner.scss",
                  "relativePath": "sc-spinner.scss",
                  "originalComponentPath": "sc-spinner.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [
            {
              "name": "--track-color",
              "docs": "The color of the spinner's track.",
              "annotation": "prop"
            },
            {
              "name": "--indicator-color",
              "docs": "The color of the spinner's indicator.",
              "annotation": "prop"
            },
            {
              "name": "--stroke-width",
              "docs": "The width of the indicator.",
              "annotation": "prop"
            }
          ],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/spinner/sc-spinner.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/spinner/sc-spinner.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "aria-busy",
            "aria-live"
          ],
          "htmlTagNames": [
            "span"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-block-ui",
            "sc-button",
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-cart",
            "sc-cart-form-submit",
            "sc-cart-submit",
            "sc-charges-list",
            "sc-checkout",
            "sc-checkout-mollie-payment",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-dialog",
            "sc-donation-choices",
            "sc-downloads-list",
            "sc-express-payment",
            "sc-form-components-validator",
            "sc-form-state-provider",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirm-provider",
            "sc-order-confirmation-customer",
            "sc-order-coupon-form",
            "sc-order-shipping-address",
            "sc-order-submit",
            "sc-order-tax-id-input",
            "sc-orders-list",
            "sc-pagination",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-product-selected-price",
            "sc-purchase-downloads-list",
            "sc-rich-text",
            "sc-select",
            "sc-stripe-add-method",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-tax-id-input",
            "sc-upcoming-invoice",
            "sc-upgrade-required",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-block-ui",
            "sc-button",
            "sc-select",
            "sc-tax-id-input"
          ]
        }
      ],
      "entryKey": "sc-avatar.sc-button.sc-dropdown.sc-icon.sc-menu.sc-menu-item.sc-spinner.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-badge-notice",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScBadgeNotice",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'primary'",
              "complexType": {
                "original": "'primary' | 'success' | 'info' | 'warning' | 'danger' | 'default'",
                "resolved": "\"danger\" | \"default\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'small'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-BADGE-NOTICE",
              "styleStr": null,
              "styleIdentifier": "scBadgeNoticeStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/badge-notice/sc-badge-notice.scss",
                  "relativePath": "sc-badge-notice.scss",
                  "originalComponentPath": "sc-badge-notice.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/badge-notice/sc-badge-notice.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/badge-notice/sc-badge-notice.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "size",
            "type"
          ],
          "htmlTagNames": [
            "div",
            "sc-tag",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag"
          ],
          "directDependencies": [
            "sc-tag"
          ],
          "dependencies": [
            "sc-tag"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-badge-notice.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-breadcrumb",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScBreadcrumb",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": true,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Optional URL to direct the user to when the breadcrumb item is activated. When set, a link will be rendered\ninternally. When unset, a button will be rendered instead."
              },
              "internal": false
            },
            {
              "name": "target",
              "type": "string",
              "attribute": "target",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": true,
              "complexType": {
                "original": "'_blank' | '_parent' | '_self' | '_top'",
                "resolved": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tells the browser where to open the link. Only used when `href` is set."
              },
              "internal": false
            },
            {
              "name": "rel",
              "type": "string",
              "attribute": "rel",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'noreferrer noopener'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The `rel` attribute to use on the link. Only used when `href` is set."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasPrefix"
            },
            {
              "name": "hasSuffix"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-BREADCRUMB",
              "styleStr": null,
              "styleIdentifier": "scBreadcrumbStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/breadcrumb/sc-breadcrumb.css",
                  "relativePath": "sc-breadcrumb.css",
                  "originalComponentPath": "sc-breadcrumb.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "label - The label."
              },
              {
                "name": "part",
                "text": "suffix - The suffix item."
              },
              {
                "name": "part",
                "text": "prefix - The prefix item."
              },
              {
                "name": "part",
                "text": "separator - The separator."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/breadcrumb/sc-breadcrumb.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/breadcrumb/sc-breadcrumb.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "name",
            "href",
            "target",
            "rel",
            "onSlotchange",
            "aria-hidden"
          ],
          "htmlTagNames": [
            "div",
            "span",
            "slot",
            "sc-icon"
          ],
          "htmlParts": [
            "base",
            "prefix",
            "label",
            "suffix",
            "separator"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-breadcrumb.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-breadcrumbs",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScBreadcrumbs",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'Breadcrumb'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The label to use for the breadcrumb control. This will not be shown, but it will be announced by screen readers and\nother assistive devices."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-BREADCRUMBS",
              "styleStr": null,
              "styleIdentifier": "scBreadcrumbsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/breadcrumbs/sc-breadcrumbs.css",
                  "relativePath": "sc-breadcrumbs.css",
                  "originalComponentPath": "sc-breadcrumbs.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "separator - The separator."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/breadcrumbs/sc-breadcrumbs.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/breadcrumbs/sc-breadcrumbs.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "aria-label",
            "onSlotchange",
            "hidden",
            "aria-hidden",
            "name"
          ],
          "htmlTagNames": [
            "nav",
            "slot",
            "div",
            "sc-icon"
          ],
          "htmlParts": [
            "base",
            "separator"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-breadcrumbs.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-button-group",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScButtonGroup",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "separate",
              "type": "boolean",
              "attribute": "separate",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-BUTTON-GROUP",
              "styleStr": null,
              "styleIdentifier": "scButtonGroupStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-button-group/sc-button-group.scss",
                  "relativePath": "sc-button-group.scss",
                  "originalComponentPath": "sc-button-group.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-button-group/sc-button-group.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-button-group/sc-button-group.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "aria-label",
            "onFocusout",
            "onFocusin",
            "onMouseOver",
            "onMouseOut",
            "label",
            "onSlotchange"
          ],
          "htmlTagNames": [
            "sc-form-control",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control"
          ],
          "directDependencies": [
            "sc-form-control"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-button-group.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCart",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "formId",
              "type": "string",
              "attribute": "form-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The form id to use for the cart."
              },
              "internal": false
            },
            {
              "name": "header",
              "type": "string",
              "attribute": "header",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The header for the popout."
              },
              "internal": false
            },
            {
              "name": "checkoutLink",
              "type": "string",
              "attribute": "checkout-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "cartTemplate",
              "type": "string",
              "attribute": "cart-template",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The template for the cart to inject when opened."
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'live'",
              "complexType": {
                "original": "'test' | 'live'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Are we in test or live mode."
              },
              "internal": false
            },
            {
              "name": "checkoutUrl",
              "type": "string",
              "attribute": "checkout-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The checkout url for the button."
              },
              "internal": false
            },
            {
              "name": "alwaysShow",
              "type": "boolean",
              "attribute": "always-show",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we force show the cart, even if there's a form on the page?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "open"
            },
            {
              "name": "uiState"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scSetState",
              "method": "handleSetState",
              "capture": false,
              "passive": false
            },
            {
              "name": "scError",
              "method": "handleErrorEvent",
              "capture": false,
              "passive": false
            },
            {
              "name": "scCloseCart",
              "method": "handleCloseCart",
              "capture": false,
              "passive": false
            }
          ],
          "events": [],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART",
              "styleStr": null,
              "styleIdentifier": "scCartStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart/sc-cart.scss",
                  "relativePath": "sc-cart.scss",
                  "originalComponentPath": "sc-cart.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart/sc-cart.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart/sc-cart.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "state",
            "order",
            "form-id",
            "group-id",
            "onScUpdateOrderState",
            "onScError",
            "count",
            "onClick",
            "open",
            "onScAfterHide",
            "onScAfterShow",
            "class",
            "slot",
            "name",
            "style",
            "error",
            "onScUpdateError",
            "z-index"
          ],
          "htmlTagNames": [
            "sc-cart-session-provider",
            "sc-cart-icon",
            "sc-drawer",
            "div",
            "slot",
            "sc-error",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-cart-session-provider",
            "sc-cart-icon",
            "sc-drawer",
            "sc-error",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-cart-session-provider",
            "sc-cart-icon",
            "sc-drawer",
            "sc-error",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-cart-icon",
            "sc-cart-session-provider",
            "sc-drawer",
            "sc-error",
            "sc-icon",
            "sc-line-items-provider",
            "sc-spinner"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-cart.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart-form",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartForm",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "quantity",
              "type": "number",
              "attribute": "quantity",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The quantity"
              },
              "internal": false
            },
            {
              "name": "priceId",
              "type": "string",
              "attribute": "price-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The price id to add."
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'live'",
              "complexType": {
                "original": "'test' | 'live'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Are we in test or live mode."
              },
              "internal": false
            },
            {
              "name": "formId",
              "type": "string",
              "attribute": "form-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The form id to use for the cart."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "order"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART-FORM",
              "styleStr": "sc-cart-form { display: inline-block }",
              "styleIdentifier": null,
              "externalStyles": []
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart-form/sc-cart-form.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart-form/sc-cart-form.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "ref",
            "onScSubmit",
            "open",
            "type",
            "slot",
            "state"
          ],
          "htmlTagNames": [
            "sc-form",
            "sc-alert",
            "span",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form",
            "sc-alert"
          ],
          "directDependencies": [
            "sc-form",
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-form",
            "sc-icon"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-cart-form.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart-form-submit",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartFormSubmit",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the cart busy"
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'primary'",
              "complexType": {
                "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
                "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button's size."
              },
              "internal": false
            },
            {
              "name": "full",
              "type": "boolean",
              "attribute": "full",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show a full-width button."
              },
              "internal": false
            },
            {
              "name": "icon",
              "type": "string",
              "attribute": "icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Icon to show."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART-FORM-SUBMIT",
              "styleStr": null,
              "styleIdentifier": "scCartFormSubmitStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-form-submit/sc-cart-form-submit.scss",
                  "relativePath": "sc-cart-form-submit.scss",
                  "originalComponentPath": "sc-cart-form-submit.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-form-submit/sc-cart-form-submit.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-form-submit/sc-cart-form-submit.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "submit",
            "type",
            "size",
            "full",
            "loading",
            "disabled",
            "name",
            "slot"
          ],
          "htmlTagNames": [
            "sc-button",
            "sc-icon",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-button",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-button",
            "sc-icon"
          ],
          "dependencies": [
            "sc-button",
            "sc-icon",
            "sc-spinner"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-cart-form-submit.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart-header",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartHeader",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "lineItems",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Array<LineItem>",
                "resolved": "LineItem[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "LineItem": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scCloseCart",
              "method": "scCloseCart",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART-HEADER",
              "styleStr": null,
              "styleIdentifier": "scCartHeaderStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-header/sc-cart-header.scss",
                  "relativePath": "sc-cart-header.scss",
                  "originalComponentPath": "sc-cart-header.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-header/sc-cart-header.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-header/sc-cart-header.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "name",
            "onClick",
            "size"
          ],
          "htmlTagNames": [
            "div",
            "sc-icon",
            "slot",
            "sc-tag"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon",
            "sc-tag"
          ],
          "directDependencies": [
            "sc-icon",
            "sc-tag"
          ],
          "dependencies": [
            "sc-icon",
            "sc-tag"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-cart-header.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart-loader",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartLoader",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "formId",
              "type": "string",
              "attribute": "form-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The form id to use for the cart."
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'live'",
              "complexType": {
                "original": "'live' | 'test'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The mode for the form."
              },
              "internal": false
            },
            {
              "name": "template",
              "type": "string",
              "attribute": "template",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The cart template to inject when opened."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART-LOADER",
              "styleStr": null,
              "styleIdentifier": "scCartLoaderStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart-loader/sc-cart-loader.scss",
                  "relativePath": "sc-cart-loader.scss",
                  "originalComponentPath": "sc-cart-loader.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart-loader/sc-cart-loader.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/sc-cart-loader/sc-cart-loader.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "innerHTML"
          ],
          "htmlTagNames": [
            "div"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-cart-loader.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart-submit",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartSubmit",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the cart busy"
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'primary'",
              "complexType": {
                "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
                "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button's size."
              },
              "internal": false
            },
            {
              "name": "full",
              "type": "boolean",
              "attribute": "full",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show a full-width button."
              },
              "internal": false
            },
            {
              "name": "checkoutLink",
              "type": "string",
              "attribute": "checkout-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "icon",
              "type": "string",
              "attribute": "icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Icon to show."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART-SUBMIT",
              "styleStr": null,
              "styleIdentifier": "scCartSubmitStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-submit/sc-cart-submit.scss",
                  "relativePath": "sc-cart-submit.scss",
                  "originalComponentPath": "sc-cart-submit.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-submit/sc-cart-submit.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/cart/cart-submit/sc-cart-submit.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "href",
            "type",
            "size",
            "full",
            "loading",
            "disabled",
            "onClick",
            "name",
            "slot"
          ],
          "htmlTagNames": [
            "sc-button",
            "sc-icon",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-button",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-button",
            "sc-icon"
          ],
          "dependencies": [
            "sc-button",
            "sc-icon",
            "sc-spinner"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-cart-submit.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-charges-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScChargesList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
              "complexType": {
                "original": "{\n    page: number;\n    per_page: number;\n  }",
                "resolved": "{ page: number; per_page: number; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Query to fetch charges"
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "showPagination",
              "type": "boolean",
              "attribute": "show-pagination",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "allLink",
              "type": "string",
              "attribute": "all-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "charges"
            },
            {
              "name": "loading"
            },
            {
              "name": "loaded"
            },
            {
              "name": "error"
            },
            {
              "name": "pagination"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHARGES-LIST",
              "styleStr": null,
              "styleIdentifier": "scChargesListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/charges-list/sc-charges-list.scss",
                  "relativePath": "sc-charges-list.scss",
                  "originalComponentPath": "sc-charges-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/charges-list/sc-charges-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/charges-list/sc-charges-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "mobile-size",
            "name",
            "style",
            "href",
            "date",
            "month",
            "day",
            "year",
            "value",
            "currency",
            "class",
            "error",
            "slot",
            "no-padding",
            "page",
            "perPage",
            "total",
            "totalPages",
            "totalShowing",
            "onScNextPage",
            "onScPrevPage",
            "spinner"
          ],
          "htmlTagNames": [
            "sc-tag",
            "sc-stacked-list-row",
            "slot",
            "div",
            "sc-skeleton",
            "strong",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-stacked-list",
            "sc-pagination",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-stacked-list",
            "sc-pagination",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-tag",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-stacked-list",
            "sc-pagination",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-flex",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-pagination",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-text"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-charges-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-checkbox",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCheckbox",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The checkbox's name attribute."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The checkbox's value attribute."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the checkbox."
              },
              "internal": false
            },
            {
              "name": "edit",
              "type": "boolean",
              "attribute": "edit",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes this edit and not editable."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the checkbox a required field."
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the checkbox in a checked state."
              },
              "internal": false
            },
            {
              "name": "indeterminate",
              "type": "boolean",
              "attribute": "indeterminate",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the checkbox in an indeterminate state."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            }
          ],
          "methods": [
            {
              "name": "triggerClick",
              "docs": {
                "text": "Simulates a click on the checkbox.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerFocus",
              "docs": {
                "text": "Sets focus on the checkbox.",
                "tags": []
              },
              "complexType": {
                "signature": "(options?: FocusOptions) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FocusOptions": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerBlur",
              "docs": {
                "text": "Removes focus from the checkbox.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's checked state changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "checked",
              "methodName": "handleStateChange"
            },
            {
              "propName": "indeterminate",
              "methodName": "handleStateChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHECKBOX",
              "styleStr": null,
              "styleIdentifier": "scCheckboxStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/checkbox/sc-checkbox.scss",
                  "relativePath": "sc-checkbox.scss",
                  "originalComponentPath": "sc-checkbox.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "control - The control wrapper."
              },
              {
                "name": "part",
                "text": "checked-icon - Checked icon."
              },
              {
                "name": "part",
                "text": "indeterminate-icon - Indeterminate icon."
              },
              {
                "name": "part",
                "text": "label - The label."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/checkbox/sc-checkbox.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/checkbox/sc-checkbox.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "htmlFor",
            "onMouseDown",
            "viewBox",
            "stroke",
            "stroke-width",
            "fill",
            "fill-rule",
            "stroke-linecap",
            "transform",
            "d",
            "id",
            "ref",
            "type",
            "name",
            "value",
            "checked",
            "disabled",
            "required",
            "role",
            "aria-checked",
            "aria-labelledby",
            "onClick",
            "onBlur",
            "onFocus"
          ],
          "htmlTagNames": [
            "span",
            "svg",
            "g",
            "path",
            "input",
            "slot"
          ],
          "htmlParts": [
            "base",
            "control",
            "checked-icon",
            "indeterminate-icon",
            "label"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-checkbox.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-checkout",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCheckout",
          "elementRef": "el",
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "prices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<PriceChoice>",
                "resolved": "PriceChoice[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "PriceChoice": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "An array of prices to pre-fill in the form."
              },
              "internal": false
            },
            {
              "name": "product",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Product",
                "resolved": "Product",
                "references": {
                  "Product": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "A product to pre-fill the form."
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'live'",
              "complexType": {
                "original": "'test' | 'live'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Are we in test or live mode."
              },
              "internal": false
            },
            {
              "name": "formId",
              "type": "number",
              "attribute": "form-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The checkout form id"
              },
              "internal": false
            },
            {
              "name": "modified",
              "type": "string",
              "attribute": "modified",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "When the form was modified."
              },
              "internal": false
            },
            {
              "name": "currencyCode",
              "type": "string",
              "attribute": "currency-code",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'usd'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency to use for this checkout."
              },
              "internal": false
            },
            {
              "name": "persistSession",
              "type": "boolean",
              "attribute": "persist-session",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Whether to persist the session in the browser between visits."
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Where to go on success"
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Stores the current customer"
              },
              "internal": false
            },
            {
              "name": "alignment",
              "type": "string",
              "attribute": "alignment",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'center' | 'wide' | 'full'",
                "resolved": "\"center\" | \"full\" | \"wide\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Alignment"
              },
              "internal": false
            },
            {
              "name": "taxProtocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "TaxProtocol",
                "resolved": "TaxProtocol",
                "references": {
                  "TaxProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The account tax protocol"
              },
              "internal": false
            },
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this user logged in?"
              },
              "internal": false
            },
            {
              "name": "disableComponentsValidation",
              "type": "boolean",
              "attribute": "disable-components-validation",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we disable components validation"
              },
              "internal": false
            },
            {
              "name": "processors",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Processor[]",
                "resolved": "Processor[]",
                "references": {
                  "Processor": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Processors enabled for this form."
              },
              "internal": false
            },
            {
              "name": "manualPaymentMethods",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ManualPaymentMethod[]",
                "resolved": "ManualPaymentMethod[]",
                "references": {
                  "ManualPaymentMethod": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Manual payment methods enabled for this form."
              },
              "internal": false
            },
            {
              "name": "editLineItems",
              "type": "boolean",
              "attribute": "edit-line-items",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Can we edit line items?"
              },
              "internal": false
            },
            {
              "name": "removeLineItems",
              "type": "boolean",
              "attribute": "remove-line-items",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Can we remove line items?"
              },
              "internal": false
            },
            {
              "name": "abandonedCheckoutReturnUrl",
              "type": "string",
              "attribute": "abandoned-checkout-return-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The abandoned checkout return url."
              },
              "internal": false
            },
            {
              "name": "stripePaymentElement",
              "type": "boolean",
              "attribute": "stripe-payment-element",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Use the Stripe payment element."
              },
              "internal": false
            },
            {
              "name": "loadingText",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "{\n    finalizing: string;\n    paying: string;\n    confirming: string;\n    confirmed: string;\n  }",
                "resolved": "{ finalizing: string; paying: string; confirming: string; confirmed: string; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Text for the loading states of the form."
              },
              "internal": false
            },
            {
              "name": "successText",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "{\n    title: string;\n    description: string;\n    button: string;\n  }",
                "resolved": "{ title: string; description: string; button: string; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Success text for the form."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "pricesEntities"
            },
            {
              "name": "productsEntities"
            },
            {
              "name": "checkoutState"
            },
            {
              "name": "error"
            },
            {
              "name": "processor"
            },
            {
              "name": "method"
            },
            {
              "name": "isManualProcessor"
            },
            {
              "name": "paymentIntents"
            },
            {
              "name": "isDuplicate"
            }
          ],
          "methods": [
            {
              "name": "submit",
              "docs": {
                "text": "Submit the form",
                "tags": []
              },
              "complexType": {
                "signature": "({ skip_validation }?: { skip_validation: boolean; }) => Promise<Checkout | NodeJS.Timeout>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  },
                  "NodeJS": {
                    "location": "global"
                  }
                },
                "return": "Promise<Checkout | Timeout>"
              },
              "internal": false
            },
            {
              "name": "validate",
              "docs": {
                "text": "Validate the form.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "HTMLScFormElement": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "scUpdateOrderState",
              "method": "handleOrderStateUpdate",
              "capture": false,
              "passive": false
            },
            {
              "name": "scSetMethod",
              "method": "handleMethodChange",
              "capture": false,
              "passive": false
            },
            {
              "name": "scAddEntities",
              "method": "handleAddEntities",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scOrderUpdated",
              "method": "scOrderUpdated",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Checkout has been updated."
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scOrderFinalized",
              "method": "scOrderFinalized",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Checkout has been finalized."
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scOrderError",
              "method": "scOrderError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Checkout has an error."
              },
              "complexType": {
                "original": "ResponseError",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHECKOUT",
              "styleStr": null,
              "styleIdentifier": "scCheckoutStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/checkout/sc-checkout.scss",
                  "relativePath": "sc-checkout.scss",
                  "originalComponentPath": "sc-checkout.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/checkout/sc-checkout.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/checkout/sc-checkout.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "open",
            "class",
            "state",
            "loggedIn",
            "onScSetCustomer",
            "onScSetLoggedIn",
            "order",
            "onScSetCheckoutFormState",
            "checkoutState",
            "onScUpdateError",
            "disabled",
            "taxProtocol",
            "success-url",
            "successText",
            "ref",
            "prices",
            "persist",
            "onScError",
            "z-index",
            "spinner",
            "style"
          ],
          "htmlTagNames": [
            "sc-alert",
            "div",
            "sc-checkout-unsaved-changes-warning",
            "sc-login-provider",
            "sc-form-state-provider",
            "sc-form-error-provider",
            "sc-form-components-validator",
            "sc-order-confirm-provider",
            "sc-session-provider",
            "slot",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert",
            "sc-checkout-unsaved-changes-warning",
            "sc-login-provider",
            "sc-form-state-provider",
            "sc-form-error-provider",
            "sc-form-components-validator",
            "sc-order-confirm-provider",
            "sc-session-provider",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-alert",
            "sc-checkout-unsaved-changes-warning",
            "sc-login-provider",
            "sc-form-state-provider",
            "sc-form-error-provider",
            "sc-form-components-validator",
            "sc-order-confirm-provider",
            "sc-session-provider",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-address",
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-checkout-form-errors",
            "sc-checkout-unsaved-changes-warning",
            "sc-choice",
            "sc-compact-address",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-divider",
            "sc-dropdown",
            "sc-form",
            "sc-form-components-validator",
            "sc-form-control",
            "sc-form-error-provider",
            "sc-form-state-provider",
            "sc-format-number",
            "sc-icon",
            "sc-input",
            "sc-line-item",
            "sc-line-item-tax",
            "sc-line-items-provider",
            "sc-login-provider",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-order-bump",
            "sc-order-bumps",
            "sc-order-confirm-provider",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-select",
            "sc-session-provider",
            "sc-spinner",
            "sc-tax-id-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-checkout.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-conditional-form",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScConditionalForm",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "rule_groups",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "RuleGroup[]",
                "resolved": "RuleGroup[]",
                "references": {
                  "RuleGroup": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Selector label"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CONDITIONAL-FORM",
              "styleStr": null,
              "styleIdentifier": "scConditionalFormStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.css",
                  "relativePath": "sc-conditional-form.css",
                  "originalComponentPath": "sc-conditional-form.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-conditional-form.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-consumer",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScConsumer",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "renderer",
              "type": "any",
              "attribute": "renderer",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "context"
            },
            {
              "name": "promise"
            },
            {
              "name": "resolvePromise"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "mountConsumer",
              "method": "mountEmitter",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/context/consumer/sc-consumer.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/context/consumer/sc-consumer.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": false,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-consumer.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-custom-order-price-input",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomOrderPriceInput",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "priceId",
              "type": "string",
              "attribute": "price-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Id of the price."
              },
              "internal": false
            },
            {
              "name": "price",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Price",
                "resolved": "Price",
                "references": {
                  "Price": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Stores the price"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading"
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this busy"
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label for the field."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Input placeholder."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required?"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Help text."
              },
              "internal": false
            },
            {
              "name": "showCode",
              "type": "boolean",
              "attribute": "show-code",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the currency code?"
              },
              "internal": false
            },
            {
              "name": "lineItems",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "LineItem[]",
                "resolved": "LineItem[]",
                "references": {
                  "LineItem": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Label for the choice."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "fetching"
            },
            {
              "name": "lineItem"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scBlur",
              "method": "handleBlur",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scUpdateLineItem",
              "method": "scUpdateLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "lineItems",
              "methodName": "handleLineItemsChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOM-ORDER-PRICE-INPUT",
              "styleStr": null,
              "styleIdentifier": "scCustomOrderPriceInputStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.css",
                  "relativePath": "sc-custom-order-price-input.css",
                  "originalComponentPath": "sc-custom-order-price-input.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "open",
            "style",
            "class",
            "currency-code",
            "label",
            "min",
            "max",
            "placeholder",
            "required",
            "value",
            "show-code",
            "help"
          ],
          "htmlTagNames": [
            "sc-alert",
            "div",
            "sc-skeleton",
            "sc-price-input",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert",
            "sc-skeleton",
            "sc-price-input",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-alert",
            "sc-skeleton",
            "sc-price-input",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-price-input",
            "sc-skeleton",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-custom-order-price-input.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-customer-edit",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomerEdit",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOMER-EDIT",
              "styleStr": null,
              "styleIdentifier": "scCustomerEditStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/customer-edit/sc-customer-edit.scss",
                  "relativePath": "sc-customer-edit.scss",
                  "originalComponentPath": "sc-customer-edit.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/customer-edit/sc-customer-edit.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/customer-edit/sc-customer-edit.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "error",
            "slot",
            "type",
            "size",
            "onScFormSubmit",
            "style",
            "label",
            "name",
            "value",
            "showName",
            "address",
            "required",
            "names",
            "checked",
            "onScChange",
            "show",
            "number",
            "full",
            "submit",
            "spinner"
          ],
          "htmlTagNames": [
            "sc-dashboard-module",
            "span",
            "sc-tag",
            "sc-card",
            "sc-form",
            "sc-columns",
            "sc-column",
            "sc-input",
            "div",
            "sc-address",
            "sc-switch",
            "sc-tax-id-input",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dashboard-module",
            "sc-tag",
            "sc-card",
            "sc-form",
            "sc-columns",
            "sc-column",
            "sc-input",
            "sc-address",
            "sc-switch",
            "sc-tax-id-input",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-dashboard-module",
            "sc-tag",
            "sc-card",
            "sc-form",
            "sc-columns",
            "sc-column",
            "sc-input",
            "sc-address",
            "sc-switch",
            "sc-tax-id-input",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-address",
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-column",
            "sc-columns",
            "sc-dashboard-module",
            "sc-dropdown",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-select",
            "sc-spinner",
            "sc-switch",
            "sc-tag",
            "sc-tax-id-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-customer-edit.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-customer-email",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomerEmail",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the user logged in."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "(passed from the sc-checkout component automatically)"
              },
              "internal": false
            },
            {
              "name": "trackingConfirmationMessage",
              "type": "string",
              "attribute": "tracking-confirmation-message",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "A message for tracking confirmation."
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Force a customer."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            },
            {
              "name": "abandonedCheckoutEnabled",
              "type": "boolean",
              "attribute": "abandoned-checkout-enabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is abandoned checkout enabled?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scClear",
              "method": "scClear",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the clear button is activated."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control receives input."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update the order state."
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scUpdateAbandonedCart",
              "method": "scUpdateAbandonedCart",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update the abandoned cart."
              },
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scLoginPrompt",
              "method": "scLoginPrompt",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Prompt for login."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleSessionChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOMER-EMAIL",
              "styleStr": null,
              "styleIdentifier": "scCustomerEmailStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-email/sc-customer-email.scss",
                  "relativePath": "sc-customer-email.scss",
                  "originalComponentPath": "sc-customer-email.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-email/sc-customer-email.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-email/sc-customer-email.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "href",
            "onClick",
            "exportparts",
            "type",
            "name",
            "ref",
            "value",
            "help",
            "label",
            "autocomplete",
            "placeholder",
            "disabled",
            "readonly",
            "required",
            "invalid",
            "autofocus",
            "hasFocus",
            "onScChange",
            "onScInput",
            "onScFocus",
            "onScBlur"
          ],
          "htmlTagNames": [
            "div",
            "span",
            "a",
            "sc-input"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-input"
          ],
          "directDependencies": [
            "sc-input"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-customer-email.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-customer-firstname",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomerFirstname",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the user logged in."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "(passed from the sc-checkout component automatically)"
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Force a customer."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "Partial<Checkout>",
                "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scClear",
              "method": "scClear",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the clear button is activated."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control receives input."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateCustomer",
              "method": "scUpdateCustomer",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "{ email: string }",
                "resolved": "{ email: string; }",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleSessionChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOMER-FIRSTNAME",
              "styleStr": null,
              "styleIdentifier": "scCustomerFirstnameStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.css",
                  "relativePath": "sc-customer-firstname.css",
                  "originalComponentPath": "sc-customer-firstname.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "name",
            "ref",
            "value",
            "disabled",
            "label",
            "help",
            "autocomplete",
            "placeholder",
            "readonly",
            "required",
            "invalid",
            "autofocus",
            "hasFocus",
            "onScInput",
            "onScFocus",
            "onScBlur"
          ],
          "htmlTagNames": [
            "sc-input"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-input"
          ],
          "directDependencies": [
            "sc-input"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-customer-firstname.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-customer-lastname",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomerLastname",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the user logged in."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "(passed from the sc-checkout component automatically)"
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Force a customer."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "Partial<Checkout>",
                "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scClear",
              "method": "scClear",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the clear button is activated."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control receives input."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateCustomer",
              "method": "scUpdateCustomer",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "{ email: string }",
                "resolved": "{ email: string; }",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleSessionChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOMER-LASTNAME",
              "styleStr": null,
              "styleIdentifier": "scCustomerLastnameStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.css",
                  "relativePath": "sc-customer-lastname.css",
                  "originalComponentPath": "sc-customer-lastname.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "name",
            "ref",
            "value",
            "disabled",
            "label",
            "help",
            "autocomplete",
            "placeholder",
            "readonly",
            "required",
            "invalid",
            "autofocus",
            "hasFocus",
            "onScInput",
            "onScFocus",
            "onScBlur"
          ],
          "htmlTagNames": [
            "sc-input"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-input"
          ],
          "directDependencies": [
            "sc-input"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-customer-lastname.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-customer-name",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomerName",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the user logged in."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "(passed from the sc-checkout component automatically)"
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Force a customer."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "Partial<Checkout>",
                "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scClear",
              "method": "scClear",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the clear button is activated."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control receives input."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateCustomer",
              "method": "scUpdateCustomer",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "{ email: string }",
                "resolved": "{ email: string; }",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleSessionChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOMER-NAME",
              "styleStr": null,
              "styleIdentifier": "scCustomerNameStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-name/sc-customer-name.css",
                  "relativePath": "sc-customer-name.css",
                  "originalComponentPath": "sc-customer-name.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-name/sc-customer-name.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/customer-name/sc-customer-name.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "name",
            "ref",
            "value",
            "disabled",
            "label",
            "help",
            "autocomplete",
            "placeholder",
            "readonly",
            "required",
            "invalid",
            "autofocus",
            "hasFocus",
            "onScChange",
            "onScInput",
            "onScFocus",
            "onScBlur"
          ],
          "htmlTagNames": [
            "sc-input"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-input"
          ],
          "directDependencies": [
            "sc-input"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-customer-name.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-dashboard-customer-details",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDashboardCustomerDetails",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "customerId",
              "type": "string",
              "attribute": "customer-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "customer"
            },
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DASHBOARD-CUSTOMER-DETAILS",
              "styleStr": null,
              "styleIdentifier": "scDashboardCustomerDetailsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.css",
                  "relativePath": "sc-dashboard-customer-details.css",
                  "originalComponentPath": "sc-dashboard-customer-details.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "customer",
            "loading",
            "error",
            "heading",
            "edit-link"
          ],
          "htmlTagNames": [
            "sc-customer-details"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-customer-details"
          ],
          "directDependencies": [
            "sc-customer-details"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-card",
            "sc-customer-details",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-dashboard-customer-details.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-dashboard-downloads-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDownloadsList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "any",
              "attribute": "query",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Customer id to fetch subscriptions"
              },
              "internal": false
            },
            {
              "name": "allLink",
              "type": "string",
              "attribute": "all-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "isCustomer",
              "type": "boolean",
              "attribute": "is-customer",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "requestNonce",
              "type": "string",
              "attribute": "request-nonce",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "purchases"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            },
            {
              "name": "pagination"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DASHBOARD-DOWNLOADS-LIST",
              "styleStr": null,
              "styleIdentifier": "scDashboardDownloadsListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.scss",
                  "relativePath": "sc-dashboard-downloads-list.scss",
                  "originalComponentPath": "sc-dashboard-downloads-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "heading",
            "allLink",
            "loading",
            "busy",
            "requestNonce",
            "error",
            "purchases",
            "slot",
            "name",
            "page",
            "perPage",
            "total",
            "totalPages",
            "totalShowing",
            "onScNextPage",
            "onScPrevPage"
          ],
          "htmlTagNames": [
            "sc-purchase-downloads-list",
            "span",
            "slot",
            "sc-pagination"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-purchase-downloads-list",
            "sc-pagination"
          ],
          "directDependencies": [
            "sc-purchase-downloads-list",
            "sc-pagination"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-flex",
            "sc-format-bytes",
            "sc-icon",
            "sc-pagination",
            "sc-purchase-downloads-list",
            "sc-skeleton",
            "sc-spacing",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-dashboard-downloads-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-donation-choices",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDonationChoices",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "priceId",
              "type": "string",
              "attribute": "price-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The price id for the fields."
              },
              "internal": false
            },
            {
              "name": "defaultAmount",
              "type": "string",
              "attribute": "default-amount",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The default amount to load the page with."
              },
              "internal": false
            },
            {
              "name": "currencyCode",
              "type": "string",
              "attribute": "currency-code",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'usd'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency code for the donation."
              },
              "internal": false
            },
            {
              "name": "lineItems",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "LineItem[]",
                "resolved": "LineItem[]",
                "references": {
                  "LineItem": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Order line items."
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading"
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "removeInvalid",
              "type": "boolean",
              "attribute": "remove-invalid",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The label for the field."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "lineItem"
            },
            {
              "name": "error"
            },
            {
              "name": "showCustomAmount"
            }
          ],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "scChange",
              "method": "handleChange",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scRemoveLineItem",
              "method": "scRemoveLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scUpdateLineItem",
              "method": "scUpdateLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scAddLineItem",
              "method": "scAddLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "showCustomAmount",
              "methodName": "handleCustomAmountToggle"
            },
            {
              "propName": "lineItems",
              "methodName": "handleLineItemsChange"
            },
            {
              "propName": "lineItem",
              "methodName": "handleLineItemChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DONATION-CHOICES",
              "styleStr": null,
              "styleIdentifier": "scDonationChoicesStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/donation-choices/sc-donation-choices.scss",
                  "relativePath": "sc-donation-choices.scss",
                  "originalComponentPath": "sc-donation-choices.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/donation-choices/sc-donation-choices.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/donation-choices/sc-donation-choices.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "style",
            "label",
            "auto-width",
            "ref",
            "required",
            "currencyCode",
            "value",
            "type",
            "onClick",
            "full",
            "busy"
          ],
          "htmlTagNames": [
            "div",
            "sc-skeleton",
            "sc-choices",
            "slot",
            "sc-price-input",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-skeleton",
            "sc-choices",
            "sc-price-input",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-skeleton",
            "sc-choices",
            "sc-price-input",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-block-ui",
            "sc-button",
            "sc-choices",
            "sc-form-control",
            "sc-input",
            "sc-price-input",
            "sc-skeleton",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-donation-choices.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-downloads-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDownloadsList",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "downloads",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Download[]",
                "resolved": "Download[]",
                "references": {
                  "Download": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customerId",
              "type": "string",
              "attribute": "customer-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DOWNLOADS-LIST",
              "styleStr": null,
              "styleIdentifier": "scDownloadsListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.scss",
                  "relativePath": "sc-downloads-list.scss",
                  "originalComponentPath": "sc-downloads-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "class",
            "part",
            "heading",
            "slot",
            "no-padding",
            "style",
            "justifyContent",
            "alignItems",
            "value",
            "type",
            "size",
            "onClick",
            "busy",
            "disabled"
          ],
          "htmlTagNames": [
            "sc-icon",
            "a",
            "sc-dashboard-module",
            "span",
            "slot",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-flex",
            "div",
            "strong",
            "sc-format-bytes",
            "sc-tag",
            "sc-button"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon",
            "sc-dashboard-module",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-flex",
            "sc-format-bytes",
            "sc-tag",
            "sc-button"
          ],
          "directDependencies": [
            "sc-icon",
            "sc-dashboard-module",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-flex",
            "sc-format-bytes",
            "sc-tag",
            "sc-button"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-flex",
            "sc-format-bytes",
            "sc-icon",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-downloads-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-express-payment",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScExpressPayment",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "processor",
              "type": "string",
              "attribute": "processor",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ProcessorName",
                "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
                "references": {
                  "ProcessorName": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "formId",
              "type": "any",
              "attribute": "form-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number | string",
                "resolved": "number | string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "dividerText",
              "type": "string",
              "attribute": "divider-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "debug",
              "type": "boolean",
              "attribute": "debug",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "hasPaymentOptions",
              "type": "boolean",
              "attribute": "has-payment-options",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [
            {
              "name": "scPaymentRequestLoaded",
              "method": "onPaymentRequestLoaded",
              "capture": false,
              "passive": false
            }
          ],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-EXPRESS-PAYMENT",
              "styleStr": null,
              "styleIdentifier": "scExpressPaymentStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/express-payment/sc-express-payment.css",
                  "relativePath": "sc-express-payment.css",
                  "originalComponentPath": "sc-express-payment.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/express-payment/sc-express-payment.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/express-payment/sc-express-payment.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "formId",
            "debug",
            "order",
            "stripeAccountId",
            "publishableKey",
            "class",
            "style"
          ],
          "htmlTagNames": [
            "sc-stripe-payment-request",
            "sc-divider",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-stripe-payment-request",
            "sc-divider",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-stripe-payment-request",
            "sc-divider",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-divider",
            "sc-icon",
            "sc-spinner",
            "sc-stripe-payment-request"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-express-payment.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-form-row",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormRow",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [
            {
              "name": "width"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-FORM-ROW",
              "styleStr": null,
              "styleIdentifier": "scFormRowStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form-row/sc-form-row.scss",
                  "relativePath": "sc-form-row.scss",
                  "originalComponentPath": "sc-form-row.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form-row/sc-form-row.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form-row/sc-form-row.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-form-row.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-format-interval",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormatInterval",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "value",
              "type": "number",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The number to format."
              },
              "internal": false
            },
            {
              "name": "interval",
              "type": "string",
              "attribute": "interval",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "every",
              "type": "string",
              "attribute": "every",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'/'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "fallback",
              "type": "string",
              "attribute": "fallback",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-interval/sc-format-interval.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-interval/sc-format-interval.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": false,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-format-interval.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-invoices-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScInvoicesList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
              "complexType": {
                "original": "{\n    page: number;\n    per_page: number;\n  }",
                "resolved": "{ page: number; per_page: number; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Query to fetch invoices"
              },
              "internal": false
            },
            {
              "name": "allLink",
              "type": "string",
              "attribute": "all-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "invoices"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            },
            {
              "name": "pagination"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-INVOICES-LIST",
              "styleStr": null,
              "styleIdentifier": "scInvoicesListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/invoices-list/sc-invoices-list.scss",
                  "relativePath": "sc-invoices-list.scss",
                  "originalComponentPath": "sc-invoices-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/invoices-list/sc-invoices-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/invoices-list/sc-invoices-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "status",
            "noPadding",
            "style",
            "mobile-size",
            "name",
            "icon",
            "href",
            "class",
            "date",
            "month",
            "day",
            "year",
            "truncate",
            "currency",
            "value",
            "no-padding",
            "error",
            "slot",
            "page",
            "perPage",
            "total",
            "totalPages",
            "totalShowing",
            "onScNextPage",
            "onScPrevPage"
          ],
          "htmlTagNames": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "div",
            "sc-divider",
            "slot",
            "sc-empty",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-icon",
            "sc-pagination",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-divider",
            "sc-empty",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-pagination",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-divider",
            "sc-empty",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-pagination",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-flex",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-order-status-badge",
            "sc-pagination",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-text"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-invoices-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-licenses-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLicensesList",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "licenses",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "License[]",
                "resolved": "License[]",
                "references": {
                  "License": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "activations",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Activation[]",
                "resolved": "Activation[]",
                "references": {
                  "Activation": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "copied",
              "type": "boolean",
              "attribute": "copied",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LICENSES-LIST",
              "styleStr": null,
              "styleIdentifier": "scLicensesListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.css",
                  "relativePath": "sc-licenses-list.css",
                  "originalComponentPath": "sc-licenses-list.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "class",
            "part",
            "slot",
            "name",
            "no-padding",
            "style",
            "value",
            "readonly",
            "size",
            "onClick"
          ],
          "htmlTagNames": [
            "sc-tag",
            "sc-dashboard-module",
            "span",
            "slot",
            "sc-card",
            "sc-table",
            "sc-table-cell",
            "sc-table-row",
            "sc-input",
            "sc-button"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag",
            "sc-dashboard-module",
            "sc-card",
            "sc-table",
            "sc-table-cell",
            "sc-table-row",
            "sc-input",
            "sc-button"
          ],
          "directDependencies": [
            "sc-tag",
            "sc-dashboard-module",
            "sc-card",
            "sc-table",
            "sc-table-cell",
            "sc-table-row",
            "sc-input",
            "sc-button"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-table",
            "sc-table-cell",
            "sc-table-row",
            "sc-tag",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-licenses-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-line-item-bump",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLineItemBump",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LINE-ITEM-BUMP",
              "styleStr": null,
              "styleIdentifier": "scLineItemBumpStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.scss",
                  "relativePath": "sc-line-item-bump.scss",
                  "originalComponentPath": "sc-line-item-bump.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "slot",
            "type",
            "currency",
            "value"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "span",
            "sc-format-number"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-format-number"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-format-number"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-line-item"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-line-item-bump.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-line-items",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLineItems",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "prices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Prices",
                "resolved": "{ [id: string]: Price; }",
                "references": {
                  "Prices": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "editable",
              "type": "boolean",
              "attribute": "editable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "removable",
              "type": "boolean",
              "attribute": "removable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "editLineItems",
              "type": "boolean",
              "attribute": "edit-line-items",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "removeLineItems",
              "type": "boolean",
              "attribute": "remove-line-items",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "lockedChoices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<PriceChoice>",
                "resolved": "PriceChoice[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "PriceChoice": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scUpdateLineItem",
              "method": "scUpdateLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update the line item."
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scRemoveLineItem",
              "method": "scRemoveLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Remove the line item."
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LINE-ITEMS",
              "styleStr": null,
              "styleIdentifier": "scLineItemsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-items/sc-line-items.css",
                  "relativePath": "sc-line-items.css",
                  "originalComponentPath": "sc-line-items.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-items/sc-line-items.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-items/sc-line-items.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": true,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "slot",
            "class",
            "key",
            "imageUrl",
            "name",
            "max",
            "editable",
            "removable",
            "quantity",
            "fees",
            "setupFeeTrialEnabled",
            "amount",
            "scratchAmount",
            "currency",
            "trialDurationDays",
            "interval",
            "onScUpdateQuantity",
            "onScRemove"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "sc-skeleton",
            "div",
            "sc-product-line-item"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-skeleton",
            "sc-product-line-item"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-skeleton",
            "sc-product-line-item"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-product-line-item",
            "sc-quantity-select",
            "sc-skeleton"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-line-items.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-login-form",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLogin",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [
            {
              "name": "step"
            },
            {
              "name": "email"
            },
            {
              "name": "password"
            },
            {
              "name": "verifyCode"
            },
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "step",
              "methodName": "handleStepChange"
            },
            {
              "propName": "loading",
              "methodName": "handleLoadingChange"
            },
            {
              "propName": "verifyCode",
              "methodName": "handleVerifyCodeChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LOGIN-FORM",
              "styleStr": null,
              "styleIdentifier": "scLoginFormStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/login/sc-login-form.scss",
                  "relativePath": "sc-login-form.scss",
                  "originalComponentPath": "sc-login-form.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/login/sc-login-form.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/login/sc-login-form.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "onScFormSubmit",
            "label",
            "type",
            "ref",
            "autofocus",
            "required",
            "onScInput",
            "submit",
            "full",
            "name",
            "slot",
            "style",
            "size",
            "pill",
            "caret",
            "onClick",
            "flexDirection",
            "onKeyDown",
            "outline",
            "value",
            "open",
            "closable",
            "onScHide",
            "innerHTML",
            "spinner"
          ],
          "htmlTagNames": [
            "div",
            "sc-form",
            "sc-input",
            "sc-button",
            "sc-icon",
            "sc-flex",
            "sc-divider",
            "slot",
            "sc-card",
            "sc-alert",
            "span",
            "sc-block-ui"
          ],
          "htmlParts": [
            "title",
            "title",
            "title"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form",
            "sc-input",
            "sc-button",
            "sc-icon",
            "sc-flex",
            "sc-divider",
            "sc-card",
            "sc-alert",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-form",
            "sc-input",
            "sc-button",
            "sc-icon",
            "sc-flex",
            "sc-divider",
            "sc-card",
            "sc-alert",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-divider",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-login-form.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-menu-divider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScMenuDivider",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-MENU-DIVIDER",
              "styleStr": null,
              "styleIdentifier": "scMenuDividerStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-divider/sc-menu-divider.scss",
                  "relativePath": "sc-menu-divider.scss",
                  "originalComponentPath": "sc-menu-divider.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-divider/sc-menu-divider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-divider/sc-menu-divider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "aria-hidden"
          ],
          "htmlTagNames": [
            "div"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-menu-divider.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-mollie-add-method",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScMollieAddMethod",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "country",
              "type": "string",
              "attribute": "country",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "processorId",
              "type": "string",
              "attribute": "processor-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "currency",
              "type": "string",
              "attribute": "currency",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "liveMode",
              "type": "boolean",
              "attribute": "live-mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customerId",
              "type": "string",
              "attribute": "customer-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "methods"
            },
            {
              "name": "loading"
            },
            {
              "name": "error"
            },
            {
              "name": "selectedMethodId"
            },
            {
              "name": "paymentIntent"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-MOLLIE-ADD-METHOD",
              "styleStr": null,
              "styleIdentifier": "scMollieAddMethodStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-mollie-add-method/sc-mollie-add-method.css",
                  "relativePath": "sc-mollie-add-method.css",
                  "originalComponentPath": "sc-mollie-add-method.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-mollie-add-method/sc-mollie-add-method.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-mollie-add-method/sc-mollie-add-method.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "onScFormSubmit",
            "collapsible",
            "theme",
            "show-control",
            "shady",
            "borderless",
            "open",
            "onScShow",
            "slot",
            "class",
            "src",
            "label",
            "type",
            "submit",
            "full",
            "loading",
            "z-index"
          ],
          "htmlTagNames": [
            "sc-card",
            "sc-skeleton",
            "sc-form",
            "sc-toggles",
            "sc-toggle",
            "span",
            "img",
            "sc-payment-selected",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-card",
            "sc-skeleton",
            "sc-form",
            "sc-toggles",
            "sc-toggle",
            "sc-payment-selected",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-card",
            "sc-skeleton",
            "sc-form",
            "sc-toggles",
            "sc-toggle",
            "sc-payment-selected",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-divider",
            "sc-form",
            "sc-icon",
            "sc-payment-selected",
            "sc-skeleton",
            "sc-spinner",
            "sc-toggle",
            "sc-toggles"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-mollie-add-method.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrder",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "orderId",
              "type": "string",
              "attribute": "order-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customerIds",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string[]",
                "resolved": "string[]",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "order"
            },
            {
              "name": "purchases"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER",
              "styleStr": null,
              "styleIdentifier": "scOrderStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/order/sc-order.scss",
                  "relativePath": "sc-order.scss",
                  "originalComponentPath": "sc-order.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/order/sc-order.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/order/sc-order.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": true,
          "hasVdomKey": true,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "flexDirection",
            "style",
            "icon",
            "key",
            "imageUrl",
            "name",
            "editable",
            "removable",
            "quantity",
            "amount",
            "currency",
            "trialDurationDays",
            "interval",
            "slot",
            "type",
            "value",
            "error",
            "manualPaymentTitle",
            "manualPaymentInstructions",
            "no-padding",
            "status",
            "date",
            "month",
            "day",
            "year",
            "paymentMethod",
            "href",
            "target",
            "heading",
            "purchases"
          ],
          "htmlTagNames": [
            "sc-flex",
            "sc-skeleton",
            "sc-empty",
            "sc-product-line-item",
            "sc-divider",
            "sc-line-item",
            "span",
            "sc-format-number",
            "sc-spacing",
            "sc-dashboard-module",
            "sc-tag",
            "sc-order-manual-instructions",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "div",
            "sc-order-status-badge",
            "sc-format-date",
            "sc-payment-method",
            "sc-button",
            "sc-icon",
            "sc-purchase-downloads-list"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-flex",
            "sc-skeleton",
            "sc-empty",
            "sc-product-line-item",
            "sc-divider",
            "sc-line-item",
            "sc-format-number",
            "sc-spacing",
            "sc-dashboard-module",
            "sc-tag",
            "sc-order-manual-instructions",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-order-status-badge",
            "sc-format-date",
            "sc-payment-method",
            "sc-button",
            "sc-icon",
            "sc-purchase-downloads-list"
          ],
          "directDependencies": [
            "sc-flex",
            "sc-skeleton",
            "sc-empty",
            "sc-product-line-item",
            "sc-divider",
            "sc-line-item",
            "sc-format-number",
            "sc-spacing",
            "sc-dashboard-module",
            "sc-tag",
            "sc-order-manual-instructions",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-order-status-badge",
            "sc-format-date",
            "sc-payment-method",
            "sc-button",
            "sc-icon",
            "sc-purchase-downloads-list"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-cc-logo",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-flex",
            "sc-format-bytes",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-order-manual-instructions",
            "sc-order-status-badge",
            "sc-payment-method",
            "sc-product-line-item",
            "sc-purchase-downloads-list",
            "sc-quantity-select",
            "sc-skeleton",
            "sc-spacing",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-confirmation",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmation",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-CONFIRMATION",
              "styleStr": null,
              "styleIdentifier": "scOrderConfirmationStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.css",
                  "relativePath": "sc-order-confirmation.css",
                  "originalComponentPath": "sc-order-confirmation.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "open",
            "slot",
            "state",
            "class",
            "checkout"
          ],
          "htmlTagNames": [
            "sc-alert",
            "span",
            "div",
            "sc-order-confirm-components-validator",
            "slot",
            "sc-heading"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert",
            "sc-order-confirm-components-validator",
            "sc-heading"
          ],
          "directDependencies": [
            "sc-alert",
            "sc-order-confirm-components-validator",
            "sc-heading"
          ],
          "dependencies": [
            "sc-alert",
            "sc-heading",
            "sc-icon",
            "sc-order-confirm-components-validator",
            "sc-order-manual-instructions"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-confirmation.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-confirmation-customer",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmationCustomer",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The Order"
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The heading"
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The customer"
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "string",
              "attribute": "error",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Error message."
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-CONFIRMATION-CUSTOMER",
              "styleStr": null,
              "styleIdentifier": "scOrderConfirmationCustomerStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.css",
                  "relativePath": "sc-order-confirmation-customer.css",
                  "originalComponentPath": "sc-order-confirmation-customer.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "customer",
            "loading",
            "error",
            "slot",
            "name"
          ],
          "htmlTagNames": [
            "sc-customer-details",
            "span",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-customer-details"
          ],
          "directDependencies": [
            "sc-customer-details"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-card",
            "sc-customer-details",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-confirmation-customer.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-confirmation-details",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmationDetails",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Order",
                "resolved": "Order",
                "references": {
                  "Order": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-CONFIRMATION-DETAILS",
              "styleStr": null,
              "styleIdentifier": "scOrderConfirmationDetailsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.css",
                  "relativePath": "sc-order-confirmation-details.css",
                  "originalComponentPath": "sc-order-confirmation-details.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "status",
            "slot",
            "style",
            "class"
          ],
          "htmlTagNames": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-dashboard-module",
            "sc-skeleton",
            "sc-card",
            "sc-line-item",
            "sc-divider",
            "span",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-dashboard-module",
            "sc-skeleton",
            "sc-card",
            "sc-line-item",
            "sc-divider",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals"
          ],
          "directDependencies": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-dashboard-module",
            "sc-skeleton",
            "sc-card",
            "sc-line-item",
            "sc-divider",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals"
          ],
          "dependencies": [
            "sc-alert",
            "sc-card",
            "sc-dashboard-module",
            "sc-divider",
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-line-item-total",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals",
            "sc-order-status-badge",
            "sc-product-line-item",
            "sc-quantity-select",
            "sc-skeleton",
            "sc-tag",
            "sc-total"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-confirmation-details.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-coupon-form",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderCouponForm",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "any",
              "attribute": "error",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "collapsed",
              "type": "boolean",
              "attribute": "collapsed",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "buttonText",
              "type": "string",
              "attribute": "button-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "open"
            },
            {
              "name": "value"
            },
            {
              "name": "errorMessage"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scApplyCoupon",
              "method": "scApplyCoupon",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "error",
              "methodName": "handleErrorsChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-COUPON-FORM",
              "styleStr": null,
              "styleIdentifier": "scOrderCouponFormStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.scss",
                  "relativePath": "sc-order-coupon-form.scss",
                  "originalComponentPath": "sc-order-coupon-form.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "label",
            "collapsed",
            "placeholder",
            "loading",
            "busy",
            "error",
            "discount",
            "currency",
            "discount-amount",
            "class",
            "button-text"
          ],
          "htmlTagNames": [
            "sc-coupon-form"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-coupon-form"
          ],
          "directDependencies": [
            "sc-coupon-form"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-coupon-form",
            "sc-form-control",
            "sc-format-number",
            "sc-icon",
            "sc-input",
            "sc-line-item",
            "sc-skeleton",
            "sc-spinner",
            "sc-tag",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-coupon-form.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-detail",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSessionDetail",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "fallback",
              "type": "string",
              "attribute": "fallback",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "metaKey",
              "type": "string",
              "attribute": "meta-key",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-DETAIL",
              "styleStr": null,
              "styleIdentifier": "scOrderDetailStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-detail/sc-order-detail.scss",
                  "relativePath": "sc-order-detail.scss",
                  "originalComponentPath": "sc-order-detail.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-detail/sc-order-detail.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-detail/sc-order-detail.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "currency",
            "value",
            "part",
            "class",
            "style",
            "name"
          ],
          "htmlTagNames": [
            "sc-format-number",
            "div",
            "span",
            "sc-skeleton",
            "slot"
          ],
          "htmlParts": [
            "base",
            "label",
            "value",
            "base",
            "label",
            "value"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-number",
            "sc-skeleton"
          ],
          "directDependencies": [
            "sc-format-number",
            "sc-skeleton"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-skeleton"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-detail.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-password",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderPassword",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "emailExists",
              "type": "boolean",
              "attribute": "email-exists",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Does the email exist?"
              },
              "internal": false
            },
            {
              "name": "confirmation",
              "type": "boolean",
              "attribute": "confirmation",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's password confirmation attribute."
              },
              "internal": false
            },
            {
              "name": "confirmationLabel",
              "type": "string",
              "attribute": "confirmation-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's confirmation label text."
              },
              "internal": false
            },
            {
              "name": "confirmationPlaceholder",
              "type": "string",
              "attribute": "confirmation-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's confirmation placeholder text."
              },
              "internal": false
            },
            {
              "name": "confirmationHelp",
              "type": "string",
              "attribute": "confirmation-help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's confirmation help text."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-PASSWORD",
              "styleStr": null,
              "styleIdentifier": "scOrderPasswordStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-password/sc-order-password.scss",
                  "relativePath": "sc-order-password.scss",
                  "originalComponentPath": "sc-order-password.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-password/sc-order-password.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-password/sc-order-password.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "class",
            "ref",
            "label",
            "help",
            "autofocus",
            "placeholder",
            "showLabel",
            "size",
            "type",
            "name",
            "value",
            "required",
            "disabled"
          ],
          "htmlTagNames": [
            "div",
            "sc-input"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-input"
          ],
          "directDependencies": [
            "sc-input"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-input",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-password.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-submit",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderSubmit",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the order busy"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the order loading."
              },
              "internal": false
            },
            {
              "name": "paying",
              "type": "boolean",
              "attribute": "paying",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the order paying."
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'primary'",
              "complexType": {
                "original": "'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link'",
                "resolved": "\"danger\" | \"default\" | \"info\" | \"link\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The button's size."
              },
              "internal": false
            },
            {
              "name": "full",
              "type": "boolean",
              "attribute": "full",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show a full-width button."
              },
              "internal": false
            },
            {
              "name": "icon",
              "type": "string",
              "attribute": "icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Icon to show."
              },
              "internal": false
            },
            {
              "name": "showTotal",
              "type": "boolean",
              "attribute": "show-total",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the total."
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'live'",
              "complexType": {
                "original": "'test' | 'live'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this created in \"test\" mode"
              },
              "internal": false
            },
            {
              "name": "processors",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Processor[]",
                "resolved": "Processor[]",
                "references": {
                  "Processor": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Keys and secrets for processors."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The current order."
              },
              "internal": false
            },
            {
              "name": "currencyCode",
              "type": "string",
              "attribute": "currency-code",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'usd'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency Code"
              },
              "internal": false
            },
            {
              "name": "processor",
              "type": "string",
              "attribute": "processor",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ProcessorName",
                "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
                "references": {
                  "ProcessorName": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The selected processor."
              },
              "internal": false
            },
            {
              "name": "secureNoticeText",
              "type": "string",
              "attribute": "secure-notice-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Secure"
              },
              "internal": false
            },
            {
              "name": "secureNotice",
              "type": "boolean",
              "attribute": "secure-notice",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the secure notice"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-SUBMIT",
              "styleStr": null,
              "styleIdentifier": "scOrderSubmitStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-submit/sc-order-submit.scss",
                  "relativePath": "sc-order-submit.scss",
                  "originalComponentPath": "sc-order-submit.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-submit/sc-order-submit.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-submit/sc-order-submit.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "buttons",
            "busy",
            "mode",
            "order",
            "merchantInitiated",
            "currency-code",
            "client-id",
            "merchant-id",
            "label",
            "color",
            "hidden",
            "submit",
            "type",
            "size",
            "full",
            "loading",
            "disabled",
            "name",
            "slot",
            "class"
          ],
          "htmlTagNames": [
            "sc-paypal-buttons",
            "sc-button",
            "sc-icon",
            "slot",
            "span",
            "sc-total",
            "div",
            "sc-secure-notice"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-paypal-buttons",
            "sc-button",
            "sc-icon",
            "sc-total",
            "sc-secure-notice"
          ],
          "directDependencies": [
            "sc-paypal-buttons",
            "sc-button",
            "sc-icon",
            "sc-total",
            "sc-secure-notice"
          ],
          "dependencies": [
            "sc-button",
            "sc-format-number",
            "sc-icon",
            "sc-paypal-buttons",
            "sc-secure-notice",
            "sc-skeleton",
            "sc-spinner",
            "sc-total"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-submit.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-summary",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderSummary",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "closedText",
              "type": "string",
              "attribute": "closed-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Show Summary', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "openText",
              "type": "string",
              "attribute": "open-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Summary', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "collapsible",
              "type": "boolean",
              "attribute": "collapsible",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "collapsedOnMobile",
              "type": "boolean",
              "attribute": "collapsed-on-mobile",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "collapsed",
              "type": "boolean",
              "attribute": "collapsed",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scShow",
              "method": "scShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Show the toggle"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scHide",
              "method": "scHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Show the toggle"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "collapsed",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-SUMMARY",
              "styleStr": null,
              "styleIdentifier": "scOrderSummaryStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-summary/sc-order-summary.scss",
                  "relativePath": "sc-order-summary.scss",
                  "originalComponentPath": "sc-order-summary.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-summary/sc-order-summary.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-summary/sc-order-summary.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "slot",
            "style",
            "class",
            "onClick",
            "xmlns",
            "fill",
            "viewBox",
            "stroke",
            "stroke-linecap",
            "stroke-linejoin",
            "stroke-width",
            "d",
            "name",
            "type",
            "currency",
            "value",
            "total",
            "order",
            "ref"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "sc-skeleton",
            "span",
            "svg",
            "path",
            "slot",
            "sc-format-number",
            "sc-total",
            "div",
            "p"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-skeleton",
            "sc-format-number",
            "sc-total"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-skeleton",
            "sc-format-number",
            "sc-total"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-line-item",
            "sc-skeleton",
            "sc-total"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-order-summary.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-orders-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrdersList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
              "complexType": {
                "original": "{\n    page: number;\n    per_page: number;\n  }",
                "resolved": "{ page: number; per_page: number; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Query to fetch orders"
              },
              "internal": false
            },
            {
              "name": "allLink",
              "type": "string",
              "attribute": "all-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "isCustomer",
              "type": "boolean",
              "attribute": "is-customer",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "orders"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            },
            {
              "name": "pagination"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDERS-LIST",
              "styleStr": null,
              "styleIdentifier": "scOrdersListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/orders-list/sc-orders-list.scss",
                  "relativePath": "sc-orders-list.scss",
                  "originalComponentPath": "sc-orders-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/orders-list/sc-orders-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/orders-list/sc-orders-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "status",
            "noPadding",
            "style",
            "mobile-size",
            "name",
            "icon",
            "href",
            "class",
            "date",
            "month",
            "day",
            "year",
            "truncate",
            "currency",
            "value",
            "no-padding",
            "error",
            "slot",
            "page",
            "perPage",
            "total",
            "totalPages",
            "totalShowing",
            "onScNextPage",
            "onScPrevPage"
          ],
          "htmlTagNames": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "div",
            "sc-divider",
            "slot",
            "sc-empty",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-icon",
            "sc-pagination",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-divider",
            "sc-empty",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-pagination",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-tag",
            "sc-order-status-badge",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-divider",
            "sc-empty",
            "sc-format-date",
            "sc-text",
            "sc-format-number",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-pagination",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-flex",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-order-status-badge",
            "sc-pagination",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-text"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-orders-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-password-nag",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPasswordNag",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'primary'",
              "complexType": {
                "original": "'primary' | 'success' | 'info' | 'warning' | 'danger'",
                "resolved": "\"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The type of alert."
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The success url."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "set"
            },
            {
              "name": "loading"
            },
            {
              "name": "error"
            },
            {
              "name": "success"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "set",
              "methodName": "handleSetChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PASSWORD-NAG",
              "styleStr": null,
              "styleIdentifier": "scPasswordNagStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-password-nag/sc-password-nag.css",
                  "relativePath": "sc-password-nag.css",
                  "originalComponentPath": "sc-password-nag.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-password-nag/sc-password-nag.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-password-nag/sc-password-nag.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "open",
            "slot",
            "exportparts",
            "style",
            "class",
            "size",
            "onClick",
            "name",
            "onScFormSubmit",
            "label",
            "required",
            "ref",
            "full",
            "submit",
            "busy",
            "justify-content",
            "spinner"
          ],
          "htmlTagNames": [
            "sc-alert",
            "span",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-form",
            "sc-input",
            "div",
            "slot",
            "sc-flex",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-flex",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-alert",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-flex",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-password-nag.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-payment",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPayment",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "stripePaymentElement",
              "type": "boolean",
              "attribute": "stripe-payment-element",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "disabledProcessorTypes",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string[]",
                "resolved": "string[]",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disabled processor types"
              },
              "internal": false
            },
            {
              "name": "secureNotice",
              "type": "string",
              "attribute": "secure-notice",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "hideTestModeBadge",
              "type": "boolean",
              "attribute": "hide-test-mode-badge",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Hide the test mode badge"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYMENT",
              "styleStr": null,
              "styleIdentifier": "scPaymentStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/payment/sc-payment.scss",
                  "relativePath": "sc-payment.scss",
                  "originalComponentPath": "sc-payment.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              },
              {
                "name": "part",
                "text": "test-badge__base - Test badge base."
              },
              {
                "name": "part",
                "text": "test-badge__content - Test badge content."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/payment/sc-payment.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/payment/sc-payment.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": true,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "key",
            "processor-id",
            "card",
            "slot",
            "class",
            "name",
            "style",
            "label",
            "method-id",
            "exportparts",
            "type",
            "size",
            "collapsible",
            "theme",
            "open",
            "methods",
            "is-manual"
          ],
          "htmlTagNames": [
            "sc-payment-method-choice",
            "span",
            "sc-icon",
            "div",
            "slot",
            "sc-card",
            "sc-payment-selected",
            "sc-form-control",
            "sc-tag",
            "sc-checkout-mollie-payment",
            "sc-alert"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-payment-method-choice",
            "sc-icon",
            "sc-card",
            "sc-payment-selected",
            "sc-form-control",
            "sc-tag",
            "sc-checkout-mollie-payment",
            "sc-alert"
          ],
          "directDependencies": [
            "sc-payment-method-choice",
            "sc-icon",
            "sc-card",
            "sc-payment-selected",
            "sc-form-control",
            "sc-tag",
            "sc-checkout-mollie-payment",
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-card",
            "sc-checkout-mollie-payment",
            "sc-divider",
            "sc-form-control",
            "sc-icon",
            "sc-payment-method-choice",
            "sc-payment-selected",
            "sc-skeleton",
            "sc-spinner",
            "sc-tag",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-payment.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-payment-methods-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPaymentMethodsList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "object",
                "resolved": "object",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Query to fetch paymentMethods"
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The heading"
              },
              "internal": false
            },
            {
              "name": "isCustomer",
              "type": "boolean",
              "attribute": "is-customer",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this a customer"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "paymentMethods"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            },
            {
              "name": "hasTitleSlot"
            },
            {
              "name": "editPaymentMethod"
            },
            {
              "name": "deletePaymentMethod"
            },
            {
              "name": "cascadeDefaultPaymentMethod"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "editPaymentMethod",
              "methodName": "handleEditPaymentMethodChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYMENT-METHODS-LIST",
              "styleStr": null,
              "styleIdentifier": "scPaymentMethodsListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.scss",
                  "relativePath": "sc-payment-methods-list.scss",
                  "originalComponentPath": "sc-payment-methods-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "noPadding",
            "style",
            "mobile-size",
            "name",
            "icon",
            "paymentMethod",
            "class",
            "justify-content",
            "align-items",
            "type",
            "placement",
            "slot",
            "onClick",
            "no-padding",
            "error",
            "href",
            "open",
            "label",
            "onScRequestClose",
            "flexDirection",
            "checked",
            "onScChange",
            "spinner"
          ],
          "htmlTagNames": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "div",
            "sc-divider",
            "slot",
            "sc-empty",
            "sc-payment-method",
            "span",
            "sc-flex",
            "sc-tag",
            "sc-dropdown",
            "sc-icon",
            "sc-menu",
            "sc-menu-item",
            "sc-dashboard-module",
            "sc-button",
            "sc-dialog",
            "sc-alert",
            "sc-switch",
            "sc-block-ui",
            "sc-text"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-divider",
            "sc-empty",
            "sc-payment-method",
            "sc-flex",
            "sc-tag",
            "sc-dropdown",
            "sc-icon",
            "sc-menu",
            "sc-menu-item",
            "sc-dashboard-module",
            "sc-button",
            "sc-dialog",
            "sc-alert",
            "sc-switch",
            "sc-block-ui",
            "sc-text"
          ],
          "directDependencies": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-divider",
            "sc-empty",
            "sc-payment-method",
            "sc-flex",
            "sc-tag",
            "sc-dropdown",
            "sc-icon",
            "sc-menu",
            "sc-menu-item",
            "sc-dashboard-module",
            "sc-button",
            "sc-dialog",
            "sc-alert",
            "sc-switch",
            "sc-block-ui",
            "sc-text"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-cc-logo",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-divider",
            "sc-dropdown",
            "sc-empty",
            "sc-flex",
            "sc-icon",
            "sc-menu",
            "sc-menu-item",
            "sc-payment-method",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-switch",
            "sc-tag",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-payment-methods-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-paypal-add-method",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPaypalAddMethod",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "liveMode",
              "type": "boolean",
              "attribute": "live-mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customerId",
              "type": "string",
              "attribute": "customer-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "currency",
              "type": "string",
              "attribute": "currency",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "loaded"
            },
            {
              "name": "error"
            },
            {
              "name": "paymentIntent"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "paymentIntent",
              "methodName": "handlePaymentIntentCreate"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYPAL-ADD-METHOD",
              "styleStr": null,
              "styleIdentifier": "scPaypalAddMethodStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-paypal-add-method/sc-paypal-add-method.scss",
                  "relativePath": "sc-paypal-add-method.scss",
                  "originalComponentPath": "sc-paypal-add-method.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-paypal-add-method/sc-paypal-add-method.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-paypal-add-method/sc-paypal-add-method.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "open",
            "type",
            "slot",
            "class",
            "hidden",
            "ref"
          ],
          "htmlTagNames": [
            "sc-alert",
            "span",
            "div"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert"
          ],
          "directDependencies": [
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-paypal-add-method.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-premium-tag",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPremiumTag",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'small'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tag's size."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-premium-tag/sc-premium-tag.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-premium-tag/sc-premium-tag.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "size"
          ],
          "htmlTagNames": [
            "sc-tag"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag"
          ],
          "directDependencies": [
            "sc-tag"
          ],
          "dependencies": [
            "sc-tag"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-premium-tag.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-price-choice",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPriceChoice",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "priceId",
              "type": "string",
              "attribute": "price-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Id of the price."
              },
              "internal": false
            },
            {
              "name": "price",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Price",
                "resolved": "Price",
                "references": {
                  "Price": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Stores the price"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading"
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label for the choice."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the label"
              },
              "internal": false
            },
            {
              "name": "showPrice",
              "type": "boolean",
              "attribute": "show-price",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the price amount"
              },
              "internal": false
            },
            {
              "name": "showControl",
              "type": "boolean",
              "attribute": "show-control",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the radio/checkbox control"
              },
              "internal": false
            },
            {
              "name": "description",
              "type": "string",
              "attribute": "description",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label for the choice."
              },
              "internal": false
            },
            {
              "name": "prices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{}",
              "complexType": {
                "original": "Prices",
                "resolved": "{ [id: string]: Price; }",
                "references": {
                  "Prices": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Price entities"
              },
              "internal": false
            },
            {
              "name": "products",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{}",
              "complexType": {
                "original": "Products",
                "resolved": "{ [id: string]: Product; }",
                "references": {
                  "Products": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Product entity"
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Session"
              },
              "internal": false
            },
            {
              "name": "quantity",
              "type": "number",
              "attribute": "quantity",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Default quantity"
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'checkbox' | 'radio'",
                "resolved": "\"checkbox\" | \"radio\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Choice Type"
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this checked by default"
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ResponseError",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Errors from response"
              },
              "internal": false
            },
            {
              "name": "isAdHoc",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Boolean",
                "resolved": "Boolean",
                "references": {
                  "Boolean": {
                    "location": "global"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Is this an ad-hoc price choice"
              },
              "internal": false
            },
            {
              "name": "blank",
              "type": "boolean",
              "attribute": "blank",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this blank?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "errorMessage"
            },
            {
              "name": "adHocErrorMessage"
            },
            {
              "name": "product"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scUpdateLineItem",
              "method": "scUpdateLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scRemoveLineItem",
              "method": "scRemoveLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scAddEntities",
              "method": "scAddEntities",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Add entities"
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "priceId",
              "methodName": "handlePriceIdChage"
            },
            {
              "propName": "prices",
              "methodName": "handlePricesChange"
            },
            {
              "propName": "products",
              "methodName": "handlePricesChange"
            },
            {
              "propName": "price",
              "methodName": "handlePriseChange"
            },
            {
              "propName": "error",
              "methodName": "handleErrorsChange"
            },
            {
              "propName": "checked",
              "methodName": "handleCheckedChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PRICE-CHOICE",
              "styleStr": null,
              "styleIdentifier": "scPriceChoiceStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/price-choice/sc-price-choice.scss",
                  "relativePath": "sc-price-choice.scss",
                  "originalComponentPath": "sc-price-choice.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/price-choice/sc-price-choice.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/price-choice/sc-price-choice.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "open",
            "style",
            "value",
            "currency",
            "showControl",
            "name",
            "disabled",
            "class",
            "ref",
            "checked"
          ],
          "htmlTagNames": [
            "sc-alert",
            "sc-format-number",
            "sc-choice-container",
            "div",
            "sc-skeleton"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert",
            "sc-format-number",
            "sc-choice-container",
            "sc-skeleton"
          ],
          "directDependencies": [
            "sc-alert",
            "sc-format-number",
            "sc-choice-container",
            "sc-skeleton"
          ],
          "dependencies": [
            "sc-alert",
            "sc-choice-container",
            "sc-format-number",
            "sc-icon",
            "sc-skeleton"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-price-choice.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-price-choices",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPriceChoices",
          "elementRef": "el",
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Selector label"
              },
              "internal": false
            },
            {
              "name": "columns",
              "type": "number",
              "attribute": "columns",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Number of columns"
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Required by default"
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Session"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [
            {
              "name": "scChange",
              "method": "handleChange",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scRemoveLineItem",
              "method": "scRemoveLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scUpdateLineItem",
              "method": "scUpdateLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PRICE-CHOICES",
              "styleStr": null,
              "styleIdentifier": "scPriceChoicesStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/price-choices/sc-price-choices.css",
                  "relativePath": "sc-price-choices.css",
                  "originalComponentPath": "sc-price-choices.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/price-choices/sc-price-choices.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/price-choices/sc-price-choices.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "label",
            "required",
            "class",
            "style"
          ],
          "htmlTagNames": [
            "sc-choices",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-choices"
          ],
          "directDependencies": [
            "sc-choices"
          ],
          "dependencies": [
            "sc-choices",
            "sc-form-control",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-price-choices.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-price-range",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPriceRange",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "prices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Price[]",
                "resolved": "Price[]",
                "references": {
                  "Price": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The array of price objects"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "minPrice"
            },
            {
              "name": "maxPrice"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "prices",
              "methodName": "handlePricesChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PRICE-RANGE",
              "styleStr": null,
              "styleIdentifier": "scPriceRangeStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-price-range/sc-price-range.css",
                  "relativePath": "sc-price-range.css",
                  "originalComponentPath": "sc-price-range.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-price-range/sc-price-range.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-price-range/sc-price-range.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "type",
            "currency",
            "value"
          ],
          "htmlTagNames": [
            "span",
            "sc-format-number"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-number"
          ],
          "directDependencies": [
            "sc-format-number"
          ],
          "dependencies": [
            "sc-format-number"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-price-range.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-product-selected-price",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScProductSelectedPrice",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "productId",
              "type": "string",
              "attribute": "product-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The product id."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "showInput"
            },
            {
              "name": "adHocAmount"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scUpdateLineItem",
              "method": "scUpdateLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Toggle line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "src/types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "showInput",
              "methodName": "handleShowInputChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PRODUCT-SELECTED-PRICE",
              "styleStr": null,
              "styleIdentifier": "scProductSelectedPriceStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.scss",
                  "relativePath": "sc-product-selected-price.scss",
                  "originalComponentPath": "sc-product-selected-price.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "class",
            "onScSubmit",
            "onScFormSubmit",
            "ref",
            "size",
            "currency-code",
            "min",
            "max",
            "placeholder",
            "required",
            "value",
            "onScInput",
            "slot",
            "type",
            "submit",
            "part",
            "currency",
            "onClick",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "sc-form",
            "sc-price-input",
            "sc-button",
            "span",
            "sc-format-number",
            "sc-icon"
          ],
          "htmlParts": [
            "price__scratch"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form",
            "sc-price-input",
            "sc-button",
            "sc-format-number",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-form",
            "sc-price-input",
            "sc-button",
            "sc-format-number",
            "sc-icon"
          ],
          "dependencies": [
            "sc-button",
            "sc-form",
            "sc-form-control",
            "sc-format-number",
            "sc-icon",
            "sc-input",
            "sc-price-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-product-selected-price.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-prose",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScProse",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PROSE",
              "styleStr": null,
              "styleIdentifier": "scProseStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-prose/sc-prose.css",
                  "relativePath": "sc-prose.css",
                  "originalComponentPath": "sc-prose.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-prose/sc-prose.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-prose/sc-prose.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-prose.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScProvider",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "STENCIL_CONTEXT",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "{ [key: string]: any }",
                "resolved": "{ [key: string]: any; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "consumers"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "mountConsumer",
              "method": "mountConsumer",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "mountConsumer",
              "method": "mountEmitter",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "STENCIL_CONTEXT",
              "methodName": "watchContext"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/context/provider/sc-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/context/provider/sc-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-provider.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-radio",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScRadio",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The radios name attribute"
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The radios value"
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the radio disabled"
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the radio in a checked state."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required"
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
              },
              "internal": false
            },
            {
              "name": "edit",
              "type": "boolean",
              "attribute": "edit",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true as a workaround in the block editor to focus on the content."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            }
          ],
          "methods": [
            {
              "name": "ceClick",
              "docs": {
                "text": "Simulates a click on the radio.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's checked state changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "checked",
              "methodName": "handleCheckedChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-RADIO",
              "styleStr": null,
              "styleIdentifier": "scRadioStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/radio/sc-radio.scss",
                  "relativePath": "sc-radio.scss",
                  "originalComponentPath": "sc-radio.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "control - The control wrapper."
              },
              {
                "name": "part",
                "text": "checked-icon - Checked icon."
              },
              {
                "name": "part",
                "text": "label - The label."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/radio/sc-radio.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/radio/sc-radio.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "htmlFor",
            "onKeyDown",
            "onMouseDown",
            "viewBox",
            "stroke",
            "stroke-width",
            "fill",
            "fill-rule",
            "cx",
            "cy",
            "r",
            "id",
            "ref",
            "type",
            "name",
            "value",
            "checked",
            "disabled",
            "required",
            "aria-checked",
            "aria-disabled",
            "aria-labelledby",
            "onClick",
            "onBlur",
            "onFocus"
          ],
          "htmlTagNames": [
            "span",
            "svg",
            "g",
            "circle",
            "input",
            "slot"
          ],
          "htmlParts": [
            "base",
            "control",
            "checked-icon",
            "label"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-radio.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-radio-group",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScRadioGroup",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The radio group label. Required for proper accessibility."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The selected value of the control."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is one of these items required."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "click",
              "method": "handleRadioClick",
              "capture": false,
              "passive": false
            }
          ],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-RADIO-GROUP",
              "styleStr": null,
              "styleIdentifier": "scRadioGroupStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/radio-group/sc-radio-group.scss",
                  "relativePath": "sc-radio-group.scss",
                  "originalComponentPath": "sc-radio-group.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/radio-group/sc-radio-group.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/radio-group/sc-radio-group.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "aria-invalid",
            "role",
            "name",
            "type",
            "ref",
            "required",
            "value",
            "tabindex"
          ],
          "htmlTagNames": [
            "fieldset",
            "legend",
            "slot",
            "input"
          ],
          "htmlParts": [
            "base",
            "label"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-radio-group.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-rich-text",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScRichText",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's size."
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's name attribute."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's value attribute."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's label. Alternatively, you can use the label slot."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's help text. Alternatively, you can use the help-text slot."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's placeholder text."
              },
              "internal": false
            },
            {
              "name": "maxlength",
              "type": "number",
              "attribute": "maxlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The max length."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the textarea."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the textarea readonly."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the textarea a required field."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "updatedAt"
            },
            {
              "name": "hasFocus"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-RICH-TEXT",
              "styleStr": null,
              "styleIdentifier": "scRichTextStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/rich-text/sc-rich-text.scss",
                  "relativePath": "sc-rich-text.scss",
                  "originalComponentPath": "sc-rich-text.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/rich-text/sc-rich-text.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/rich-text/sc-rich-text.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "exportparts",
            "size",
            "required",
            "label",
            "showLabel",
            "help",
            "inputId",
            "helpId",
            "labelId",
            "name",
            "part",
            "class",
            "type",
            "onClick",
            "disabled",
            "ref"
          ],
          "htmlTagNames": [
            "sc-form-control",
            "div",
            "sc-button",
            "sc-icon"
          ],
          "htmlParts": [
            "base",
            "editor"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control",
            "sc-button",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-form-control",
            "sc-button",
            "sc-icon"
          ],
          "dependencies": [
            "sc-button",
            "sc-form-control",
            "sc-icon",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-rich-text.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-stripe-add-method",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScStripeAddMethod",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "liveMode",
              "type": "boolean",
              "attribute": "live-mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customerId",
              "type": "string",
              "attribute": "customer-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "loaded"
            },
            {
              "name": "error"
            },
            {
              "name": "paymentIntent"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "paymentIntent",
              "methodName": "handlePaymentIntentCreate"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-STRIPE-ADD-METHOD",
              "styleStr": null,
              "styleIdentifier": "scStripeAddMethodStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-stripe-add-method/sc-stripe-add-method.scss",
                  "relativePath": "sc-stripe-add-method.scss",
                  "originalComponentPath": "sc-stripe-add-method.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-stripe-add-method/sc-stripe-add-method.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-stripe-add-method/sc-stripe-add-method.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "onScFormSubmit",
            "open",
            "type",
            "slot",
            "class",
            "hidden",
            "style",
            "ref",
            "submit",
            "full",
            "loading"
          ],
          "htmlTagNames": [
            "sc-form",
            "sc-alert",
            "span",
            "div",
            "sc-skeleton",
            "sc-button"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form",
            "sc-alert",
            "sc-skeleton",
            "sc-button"
          ],
          "directDependencies": [
            "sc-form",
            "sc-alert",
            "sc-skeleton",
            "sc-button"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-form",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-stripe-add-method.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-stripe-element",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScStripeElement",
          "elementRef": "el",
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Whether this field is disabled"
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The checkout session object for finalizing intents"
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'live'",
              "complexType": {
                "original": "'live' | 'test'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Mode for the payment"
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label. Alternatively, you can use the label slot."
              },
              "internal": false
            },
            {
              "name": "secureText",
              "type": "string",
              "attribute": "secure-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text. Alternatively, you can use the help-text slot."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            },
            {
              "name": "selectedProcessorId",
              "type": "string",
              "attribute": "selected-processor-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ProcessorName",
                "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
                "references": {
                  "ProcessorName": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The selected processor id"
              },
              "internal": false
            },
            {
              "name": "formState",
              "type": "string",
              "attribute": "form-state",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "FormState",
                "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
                "references": {
                  "FormState": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The form state"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "error"
            },
            {
              "name": "confirming"
            }
          ],
          "methods": [
            {
              "name": "confirmCardPayment",
              "docs": {
                "text": "Confirm card payment",
                "tags": []
              },
              "complexType": {
                "signature": "(secret: any) => Promise<any>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<any>"
              },
              "internal": false
            },
            {
              "name": "confirmCardSetup",
              "docs": {
                "text": "Confirm card setup.",
                "tags": []
              },
              "complexType": {
                "signature": "(secret: any) => Promise<any>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<any>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scPaid",
              "method": "scPaid",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPayError",
              "method": "scPayError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state"
              },
              "complexType": {
                "original": "FormStateSetter",
                "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
                "references": {
                  "FormStateSetter": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "formState",
              "methodName": "maybeConfirmOrder"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-STRIPE-ELEMENT",
              "styleStr": null,
              "styleIdentifier": "scStripeElementStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-element/sc-stripe-element.scss",
                  "relativePath": "sc-stripe-element.scss",
                  "originalComponentPath": "sc-stripe-element.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-element/sc-stripe-element.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-element/sc-stripe-element.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "size",
            "label",
            "ref",
            "style"
          ],
          "htmlTagNames": [
            "sc-form-control",
            "div",
            "sc-text"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control",
            "sc-text"
          ],
          "directDependencies": [
            "sc-form-control",
            "sc-text"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-stripe-element.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-stripe-payment-element",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScStripePaymentElement",
          "elementRef": "el",
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "stripePaymentIntent",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "PaymentIntent",
                "resolved": "PaymentIntent",
                "references": {
                  "PaymentIntent": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The Payment Intent"
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Order to watch"
              },
              "internal": false
            },
            {
              "name": "address",
              "type": "boolean",
              "attribute": "address",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we collect an address?"
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Success url to redirect."
              },
              "internal": false
            },
            {
              "name": "formState",
              "type": "string",
              "attribute": "form-state",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "FormState",
                "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
                "references": {
                  "FormState": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The current form state."
              },
              "internal": false
            },
            {
              "name": "selectedProcessorId",
              "type": "string",
              "attribute": "selected-processor-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ProcessorName",
                "resolved": "\"paypal\" | \"paypal-card\" | \"stripe\"",
                "references": {
                  "ProcessorName": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The selected processor name."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "error"
            },
            {
              "name": "loaded"
            },
            {
              "name": "confirming"
            }
          ],
          "methods": [
            {
              "name": "confirm",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "(type: any, args?: {}) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  },
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scPaid",
              "method": "scPaid",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "The order/invoice was paid for."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPayError",
              "method": "scPayError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "There was a payment error."
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state"
              },
              "complexType": {
                "original": "FormStateSetter",
                "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
                "references": {
                  "FormStateSetter": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "stripePaymentIntent",
              "methodName": "handleUpdatedChange"
            },
            {
              "propName": "order",
              "methodName": "handleUpdateElement"
            },
            {
              "propName": "error",
              "methodName": "handleUpdateElement"
            },
            {
              "propName": "formState",
              "methodName": "maybeConfirmOrder"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-STRIPE-PAYMENT-ELEMENT",
              "styleStr": null,
              "styleIdentifier": "scStripePaymentElementStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-payment-element/sc-stripe-payment-element.scss",
                  "relativePath": "sc-stripe-payment-element.scss",
                  "originalComponentPath": "sc-stripe-payment-element.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-payment-element/sc-stripe-payment-element.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-payment-element/sc-stripe-payment-element.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "data-testid",
            "style",
            "hidden",
            "ref"
          ],
          "htmlTagNames": [
            "div",
            "sc-text",
            "sc-skeleton"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-text",
            "sc-skeleton"
          ],
          "directDependencies": [
            "sc-text",
            "sc-skeleton"
          ],
          "dependencies": [
            "sc-skeleton",
            "sc-text"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-stripe-payment-element.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscription",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscription",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "subscriptionId",
              "type": "string",
              "attribute": "subscription-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Customer id to fetch subscriptions"
              },
              "internal": false
            },
            {
              "name": "showCancel",
              "type": "boolean",
              "attribute": "show-cancel",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "object",
                "resolved": "object",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "protocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "SubscriptionProtocol",
                "resolved": "SubscriptionProtocol",
                "references": {
                  "SubscriptionProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "cancelModal"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription/sc-subscription.scss",
                  "relativePath": "sc-subscription.scss",
                  "originalComponentPath": "sc-subscription.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription/sc-subscription.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription/sc-subscription.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "subscription",
            "date",
            "month",
            "day",
            "year",
            "name",
            "style",
            "mobile-size",
            "heading",
            "class",
            "error",
            "slot",
            "type",
            "href",
            "onClick",
            "noPadding",
            "spinner",
            "protocol",
            "open",
            "onScRequestClose",
            "onScRefresh"
          ],
          "htmlTagNames": [
            "sc-subscription-status-badge",
            "span",
            "sc-format-date",
            "slot",
            "sc-stacked-list-row",
            "div",
            "sc-skeleton",
            "sc-subscription-next-payment",
            "sc-subscription-details",
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-block-ui",
            "sc-cancel-dialog"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-subscription-status-badge",
            "sc-format-date",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-subscription-next-payment",
            "sc-subscription-details",
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-block-ui",
            "sc-cancel-dialog"
          ],
          "directDependencies": [
            "sc-subscription-status-badge",
            "sc-format-date",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-subscription-next-payment",
            "sc-subscription-details",
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-block-ui",
            "sc-cancel-dialog"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-card",
            "sc-cc-logo",
            "sc-choice",
            "sc-choices",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-divider",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-payment-method",
            "sc-product-line-item",
            "sc-quantity-select",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-status-badge",
            "sc-tag",
            "sc-text",
            "sc-textarea",
            "sc-toggle",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-subscription.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscription-ad-hoc-confirm",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionAdHocConfirm",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "price",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Price",
                "resolved": "Price",
                "references": {
                  "Price": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "busy"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-AD-HOC-CONFIRM",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionAdHocConfirmStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.scss",
                  "relativePath": "sc-subscription-ad-hoc-confirm.scss",
                  "originalComponentPath": "sc-subscription-ad-hoc-confirm.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "heading",
            "class",
            "onScSubmit",
            "label",
            "name",
            "autofocus",
            "required",
            "slot",
            "style",
            "type",
            "full",
            "submit",
            "loading"
          ],
          "htmlTagNames": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-price-input",
            "span",
            "sc-button",
            "sc-icon",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-price-input",
            "sc-button",
            "sc-icon",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-price-input",
            "sc-button",
            "sc-icon",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-price-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-subscription-ad-hoc-confirm.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscription-payment",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionPayment",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "subscriptionId",
              "type": "string",
              "attribute": "subscription-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "backUrl",
              "type": "string",
              "attribute": "back-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "paymentMethods",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<PaymentMethod>",
                "resolved": "PaymentMethod[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "PaymentMethod": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customerIds",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<string>",
                "resolved": "string[]",
                "references": {
                  "Array": {
                    "location": "global"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-PAYMENT",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionPaymentStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-payment/sc-subscription-payment.scss",
                  "relativePath": "sc-subscription-payment.scss",
                  "originalComponentPath": "sc-subscription-payment.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-payment/sc-subscription-payment.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-payment/sc-subscription-payment.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "disabled",
            "style",
            "slot",
            "type",
            "full",
            "submit",
            "loading",
            "busy",
            "href",
            "icon",
            "checked",
            "value",
            "paymentMethod",
            "heading",
            "class",
            "error",
            "onScFormSubmit"
          ],
          "htmlTagNames": [
            "sc-choice",
            "sc-skeleton",
            "sc-button",
            "sc-empty",
            "sc-choices",
            "div",
            "sc-payment-method",
            "sc-dashboard-module",
            "sc-form",
            "sc-card",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-choice",
            "sc-skeleton",
            "sc-button",
            "sc-empty",
            "sc-choices",
            "sc-payment-method",
            "sc-dashboard-module",
            "sc-form",
            "sc-card",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-choice",
            "sc-skeleton",
            "sc-button",
            "sc-empty",
            "sc-choices",
            "sc-payment-method",
            "sc-dashboard-module",
            "sc-form",
            "sc-card",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-cc-logo",
            "sc-choice",
            "sc-choices",
            "sc-dashboard-module",
            "sc-empty",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-payment-method",
            "sc-skeleton",
            "sc-spinner",
            "sc-tag",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-subscription-payment.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscription-payment-method",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionPaymentMethod",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The heading"
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The subscription"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "paymentMethods"
            },
            {
              "name": "error"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "method"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-PAYMENT-METHOD",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionPaymentMethodStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.css",
                  "relativePath": "sc-subscription-payment-method.css",
                  "originalComponentPath": "sc-subscription-payment-method.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "noPadding",
            "style",
            "mobile-size",
            "name",
            "icon",
            "onScSubmit",
            "type",
            "submit",
            "full",
            "size",
            "busy",
            "disabled",
            "href",
            "slot",
            "checked",
            "value",
            "required",
            "justifyContent",
            "align-items",
            "paymentMethod",
            "heading",
            "class",
            "error",
            "spinner"
          ],
          "htmlTagNames": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "slot",
            "sc-empty",
            "sc-form",
            "sc-choices",
            "sc-button",
            "sc-icon",
            "sc-choice",
            "sc-flex",
            "sc-payment-method",
            "sc-tag",
            "div",
            "span",
            "sc-dashboard-module",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-empty",
            "sc-form",
            "sc-choices",
            "sc-button",
            "sc-icon",
            "sc-choice",
            "sc-flex",
            "sc-payment-method",
            "sc-tag",
            "sc-dashboard-module",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-empty",
            "sc-form",
            "sc-choices",
            "sc-button",
            "sc-icon",
            "sc-choice",
            "sc-flex",
            "sc-payment-method",
            "sc-tag",
            "sc-dashboard-module",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-cc-logo",
            "sc-choice",
            "sc-choices",
            "sc-dashboard-module",
            "sc-empty",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-payment-method",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-subscription-payment-method.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscription-switch",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionSwitch",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "object",
                "resolved": "object",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Customer id to fetch subscriptions"
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "productGroupId",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ProductGroup",
                "resolved": "ProductGroup",
                "references": {
                  "ProductGroup": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "productId",
              "type": "string",
              "attribute": "product-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "filterAbove",
              "type": "number",
              "attribute": "filter-above",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "4",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "selectedPrice"
            },
            {
              "name": "products"
            },
            {
              "name": "prices"
            },
            {
              "name": "filter"
            },
            {
              "name": "hasFilters"
            },
            {
              "name": "showFilters"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "products",
              "methodName": "handleProductsChange"
            },
            {
              "propName": "prices",
              "methodName": "handlePricesChange"
            },
            {
              "propName": "subscription",
              "methodName": "handleSubscriptionChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-SWITCH",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionSwitchStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-switch/sc-subscription-switch.scss",
                  "relativePath": "sc-subscription-switch.scss",
                  "originalComponentPath": "sc-subscription-switch.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-switch/sc-subscription-switch.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-switch/sc-subscription-switch.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": true,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "slot",
            "class",
            "onClick",
            "size",
            "type",
            "name",
            "disabled",
            "style",
            "required",
            "key",
            "checked",
            "value",
            "hidden",
            "onScChange",
            "currency",
            "open",
            "heading",
            "error",
            "onScFormSubmit",
            "full",
            "submit",
            "loading"
          ],
          "htmlTagNames": [
            "sc-flex",
            "sc-button",
            "sc-choice",
            "sc-skeleton",
            "sc-choices",
            "div",
            "strong",
            "sc-format-number",
            "sc-tag",
            "sc-alert",
            "sc-dashboard-module",
            "span",
            "sc-form",
            "sc-icon",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-flex",
            "sc-button",
            "sc-choice",
            "sc-skeleton",
            "sc-choices",
            "sc-format-number",
            "sc-tag",
            "sc-alert",
            "sc-dashboard-module",
            "sc-form",
            "sc-icon",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-flex",
            "sc-button",
            "sc-choice",
            "sc-skeleton",
            "sc-choices",
            "sc-format-number",
            "sc-tag",
            "sc-alert",
            "sc-dashboard-module",
            "sc-form",
            "sc-icon",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-choice",
            "sc-choices",
            "sc-dashboard-module",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-format-number",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-tag",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-subscription-switch.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscriptions-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionsList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "query",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    page: 1,\n    per_page: 10,\n  }",
              "complexType": {
                "original": "{\n    page: number;\n    per_page: number;\n  }",
                "resolved": "{ page: number; per_page: number; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Customer id to fetch subscriptions"
              },
              "internal": false
            },
            {
              "name": "allLink",
              "type": "string",
              "attribute": "all-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "isCustomer",
              "type": "boolean",
              "attribute": "is-customer",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "cancelBehavior",
              "type": "string",
              "attribute": "cancel-behavior",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'period_end'",
              "complexType": {
                "original": "'period_end' | 'immediate'",
                "resolved": "\"immediate\" | \"period_end\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "subscriptions"
            },
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            },
            {
              "name": "pagination"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTIONS-LIST",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionsListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.scss",
                  "relativePath": "sc-subscriptions-list.scss",
                  "originalComponentPath": "sc-subscriptions-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": true,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "name",
            "icon",
            "no-padding",
            "mobile-size",
            "href",
            "key",
            "subscription",
            "slot",
            "class",
            "error",
            "type",
            "page",
            "perPage",
            "total",
            "totalPages",
            "totalShowing",
            "onScNextPage",
            "onScPrevPage"
          ],
          "htmlTagNames": [
            "div",
            "sc-divider",
            "slot",
            "sc-empty",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-subscription-details",
            "sc-icon",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-pagination",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-divider",
            "sc-empty",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-subscription-details",
            "sc-icon",
            "sc-dashboard-module",
            "sc-button",
            "sc-pagination",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-divider",
            "sc-empty",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-subscription-details",
            "sc-icon",
            "sc-dashboard-module",
            "sc-button",
            "sc-pagination",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-divider",
            "sc-empty",
            "sc-flex",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-pagination",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-subscription-details",
            "sc-subscription-status-badge",
            "sc-tag",
            "sc-text"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-subscriptions-list.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-tab",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTab",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "panel",
              "type": "string",
              "attribute": "panel",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The name of the tab panel the tab will control. The panel must be located in the same tab group."
              },
              "internal": false
            },
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "active",
              "type": "boolean",
              "attribute": "active",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the tab in an active state."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the tab in a disabled state."
              },
              "internal": false
            },
            {
              "name": "count",
              "type": "string",
              "attribute": "count",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasPrefix"
            },
            {
              "name": "hasSuffix"
            }
          ],
          "methods": [
            {
              "name": "triggerFocus",
              "docs": {
                "text": "Sets focus to the tab.",
                "tags": []
              },
              "complexType": {
                "signature": "(options?: FocusOptions) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FocusOptions": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerBlur",
              "docs": {
                "text": "Removes focus from the tab.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scClose",
              "method": "scClose",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Close event"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TAB",
              "styleStr": null,
              "styleIdentifier": "scTabStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab/sc-tab.scss",
                  "relativePath": "sc-tab.scss",
                  "originalComponentPath": "sc-tab.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab/sc-tab.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab/sc-tab.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "href",
            "class",
            "ref",
            "role",
            "aria-disabled",
            "aria-selected",
            "tabindex",
            "onSlotchange",
            "name"
          ],
          "htmlTagNames": [
            "span",
            "slot",
            "div"
          ],
          "htmlParts": [
            "prefix",
            "content",
            "suffix",
            "counter"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-tab.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-tab-group",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTabGroup",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [
            {
              "name": "activeTab"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scTabHide",
              "method": "scTabHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scTabShow",
              "method": "scTabShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TAB-GROUP",
              "styleStr": null,
              "styleIdentifier": "scTabGroupStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab-group/sc-tab-group.scss",
                  "relativePath": "sc-tab-group.scss",
                  "originalComponentPath": "sc-tab-group.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab-group/sc-tab-group.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab-group/sc-tab-group.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "onClick",
            "onKeyDown",
            "role",
            "onSlotchange",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base",
            "nav",
            "tabs",
            "body"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-tab-group.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-tab-panel",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTabPanel",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tab panel's name."
              },
              "internal": false
            },
            {
              "name": "active",
              "type": "boolean",
              "attribute": "active",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "When true, the tab panel will be shown."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TAB-PANEL",
              "styleStr": null,
              "styleIdentifier": "scTabPanelStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab-panel/sc-tab-panel.scss",
                  "relativePath": "sc-tab-panel.scss",
                  "originalComponentPath": "sc-tab-panel.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab-panel/sc-tab-panel.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tab-panel/sc-tab-panel.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "part",
            "class",
            "role",
            "aria-hidden"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-tab-panel.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-table-head",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTable",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TABLE-HEAD",
              "styleStr": null,
              "styleIdentifier": "scTableHeadStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-head/sc-table-head.scss",
                  "relativePath": "sc-table-head.scss",
                  "originalComponentPath": "sc-table-head.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-head/sc-table-head.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-head/sc-table-head.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-table-head.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-upcoming-invoice",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScUpcomingInvoice",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "subscriptionId",
              "type": "string",
              "attribute": "subscription-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "priceId",
              "type": "string",
              "attribute": "price-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "quantity",
              "type": "number",
              "attribute": "quantity",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "discount",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "{\n    promotion_code?: string;\n    coupon?: string;\n  }",
                "resolved": "{ promotion_code?: string; coupon?: string; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "payment_method",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "PaymentMethod",
                "resolved": "PaymentMethod",
                "references": {
                  "PaymentMethod": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "quantityUpdatesEnabled",
              "type": "boolean",
              "attribute": "quantity-updates-enabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "adHocAmount",
              "type": "number",
              "attribute": "ad-hoc-amount",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            },
            {
              "name": "price"
            },
            {
              "name": "invoice"
            },
            {
              "name": "couponError"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-UPCOMING-INVOICE",
              "styleStr": null,
              "styleIdentifier": "scUpcomingInvoiceStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.scss",
                  "relativePath": "sc-upcoming-invoice.scss",
                  "originalComponentPath": "sc-upcoming-invoice.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "date",
            "month",
            "day",
            "year",
            "name",
            "style",
            "class",
            "currency",
            "value",
            "imageUrl",
            "editable",
            "removable",
            "quantity",
            "amount",
            "interval",
            "onScUpdateQuantity",
            "slot",
            "discount",
            "label",
            "onScApplyCoupon",
            "error",
            "collapsed",
            "buttonText",
            "href",
            "justify-content",
            "align-items",
            "paymentMethod",
            "open",
            "heading",
            "onScFormSubmit",
            "full",
            "submit",
            "loading",
            "disabled"
          ],
          "htmlTagNames": [
            "div",
            "strong",
            "sc-format-date",
            "slot",
            "sc-skeleton",
            "sc-format-number",
            "sc-product-line-item",
            "sc-line-item",
            "span",
            "sc-coupon-form",
            "sc-divider",
            "a",
            "sc-flex",
            "sc-payment-method",
            "sc-icon",
            "sc-alert",
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-button",
            "sc-text",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-date",
            "sc-skeleton",
            "sc-format-number",
            "sc-product-line-item",
            "sc-line-item",
            "sc-coupon-form",
            "sc-divider",
            "sc-flex",
            "sc-payment-method",
            "sc-icon",
            "sc-alert",
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-button",
            "sc-text",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-format-date",
            "sc-skeleton",
            "sc-format-number",
            "sc-product-line-item",
            "sc-line-item",
            "sc-coupon-form",
            "sc-divider",
            "sc-flex",
            "sc-payment-method",
            "sc-icon",
            "sc-alert",
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-button",
            "sc-text",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-cc-logo",
            "sc-coupon-form",
            "sc-dashboard-module",
            "sc-divider",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-input",
            "sc-line-item",
            "sc-payment-method",
            "sc-product-line-item",
            "sc-quantity-select",
            "sc-skeleton",
            "sc-spinner",
            "sc-tag",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-upcoming-invoice.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-upgrade-required",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScUpgradeRequired",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'small'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tag's size."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "open"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-UPGRADE-REQUIRED",
              "styleStr": null,
              "styleIdentifier": "scUpgradeRequiredStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-upgrade-required/sc-upgrade-required.scss",
                  "relativePath": "sc-upgrade-required.scss",
                  "originalComponentPath": "sc-upgrade-required.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-upgrade-required/sc-upgrade-required.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-upgrade-required/sc-upgrade-required.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "onClick",
            "class",
            "label",
            "open",
            "onScRequestClose",
            "style",
            "slot",
            "name",
            "href",
            "type",
            "target",
            "full"
          ],
          "htmlTagNames": [
            "slot",
            "span",
            "sc-premium-badge",
            "sc-dialog",
            "sc-icon",
            "p",
            "sc-button"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-premium-badge",
            "sc-dialog",
            "sc-icon",
            "sc-button"
          ],
          "directDependencies": [
            "sc-dialog",
            "sc-icon",
            "sc-button"
          ],
          "dependencies": [
            "sc-button",
            "sc-dialog",
            "sc-icon",
            "sc-spinner"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-upgrade-required.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-wordpress-password-edit",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScWordPressPasswordEdit",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "user",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "WordPressUser",
                "resolved": "WordPressUser",
                "references": {
                  "WordPressUser": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-WORDPRESS-PASSWORD-EDIT",
              "styleStr": null,
              "styleIdentifier": "scWordpressPasswordEditStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.css",
                  "relativePath": "sc-wordpress-password-edit.css",
                  "originalComponentPath": "sc-wordpress-password-edit.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "class",
            "error",
            "slot",
            "onScFormSubmit",
            "label",
            "type",
            "required",
            "full",
            "submit",
            "spinner"
          ],
          "htmlTagNames": [
            "slot",
            "sc-dashboard-module",
            "span",
            "sc-card",
            "sc-form",
            "sc-input",
            "div",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-wordpress-password-edit.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-wordpress-user",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScWordPressUser",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "user",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "WordPressUser",
                "resolved": "WordPressUser",
                "references": {
                  "WordPressUser": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-WORDPRESS-USER",
              "styleStr": null,
              "styleIdentifier": "scWordpressUserStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.css",
                  "relativePath": "sc-wordpress-user.css",
                  "originalComponentPath": "sc-wordpress-user.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "mobileSize",
            "name",
            "class",
            "slot",
            "type",
            "href",
            "no-padding"
          ],
          "htmlTagNames": [
            "sc-stacked-list-row",
            "div",
            "strong",
            "slot",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-stacked-list"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-stacked-list-row",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-stacked-list"
          ],
          "directDependencies": [
            "sc-stacked-list-row",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon",
            "sc-card",
            "sc-stacked-list"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-icon",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-wordpress-user.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-wordpress-user-edit",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScWordPressUserEdit",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "user",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "WordPressUser",
                "resolved": "WordPressUser",
                "references": {
                  "WordPressUser": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-WORDPRESS-USER-EDIT",
              "styleStr": null,
              "styleIdentifier": "scWordpressUserEditStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.css",
                  "relativePath": "sc-wordpress-user-edit.css",
                  "originalComponentPath": "sc-wordpress-user-edit.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "class",
            "error",
            "slot",
            "onScFormSubmit",
            "label",
            "value",
            "required",
            "style",
            "type",
            "full",
            "submit",
            "spinner"
          ],
          "htmlTagNames": [
            "slot",
            "sc-dashboard-module",
            "span",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-columns",
            "sc-column",
            "div",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-columns",
            "sc-column",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-dashboard-module",
            "sc-card",
            "sc-form",
            "sc-input",
            "sc-columns",
            "sc-column",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-column",
            "sc-columns",
            "sc-dashboard-module",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [],
          "directDependents": []
        }
      ],
      "entryKey": "sc-wordpress-user-edit.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cancel-dialog",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCancelDialog",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "protocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "SubscriptionProtocol",
                "resolved": "SubscriptionProtocol",
                "references": {
                  "SubscriptionProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "reasons"
            },
            {
              "name": "reason"
            },
            {
              "name": "step"
            },
            {
              "name": "comment"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scRequestClose",
              "method": "scRequestClose",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "'close-button' | 'keyboard' | 'overlay'",
                "resolved": "\"close-button\" | \"keyboard\" | \"overlay\"",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scRefresh",
              "method": "scRefresh",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CANCEL-DIALOG",
              "styleStr": null,
              "styleIdentifier": "scCancelDialogStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.scss",
                  "relativePath": "sc-cancel-dialog.scss",
                  "originalComponentPath": "sc-cancel-dialog.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "noHeader",
            "open",
            "onScRequestClose",
            "class",
            "type",
            "circle",
            "onClick",
            "name",
            "subscription",
            "protocol",
            "reason",
            "comment",
            "onScAbandon",
            "onScCancelled",
            "onScSubmitReason",
            "onScCancel",
            "onScPreserved"
          ],
          "htmlTagNames": [
            "sc-dialog",
            "div",
            "sc-button",
            "sc-icon",
            "sc-subscription-cancel",
            "sc-cancel-survey",
            "sc-cancel-discount"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dialog",
            "sc-button",
            "sc-icon",
            "sc-subscription-cancel",
            "sc-cancel-survey",
            "sc-cancel-discount"
          ],
          "directDependencies": [
            "sc-dialog",
            "sc-button",
            "sc-icon",
            "sc-subscription-cancel",
            "sc-cancel-survey",
            "sc-cancel-discount"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-choice",
            "sc-choices",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-format-date",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-subscription-cancel",
            "sc-textarea",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-subscription"
          ],
          "directDependents": [
            "sc-subscription"
          ]
        },
        {
          "tagName": "sc-subscription-next-payment",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionNextPayment",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "period"
            },
            {
              "name": "loading"
            },
            {
              "name": "error"
            },
            {
              "name": "details"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "subscription",
              "methodName": "handleSubscriptionChange"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "borderless",
            "disabled",
            "slot",
            "flexDirection",
            "style",
            "subscription",
            "shady",
            "type",
            "currency",
            "value",
            "noPadding",
            "imageUrl",
            "name",
            "editable",
            "removable",
            "quantity",
            "amount",
            "interval",
            "href",
            "justify-content",
            "align-items",
            "paymentMethod"
          ],
          "htmlTagNames": [
            "sc-toggle",
            "sc-flex",
            "sc-skeleton",
            "div",
            "sc-subscription-details",
            "span",
            "strong",
            "sc-format-number",
            "sc-card",
            "sc-product-line-item",
            "sc-line-item",
            "sc-divider",
            "a",
            "sc-payment-method",
            "sc-icon"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-toggle",
            "sc-flex",
            "sc-skeleton",
            "sc-subscription-details",
            "sc-format-number",
            "sc-card",
            "sc-product-line-item",
            "sc-line-item",
            "sc-divider",
            "sc-payment-method",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-toggle",
            "sc-flex",
            "sc-skeleton",
            "sc-subscription-details",
            "sc-format-number",
            "sc-card",
            "sc-product-line-item",
            "sc-line-item",
            "sc-divider",
            "sc-payment-method",
            "sc-icon"
          ],
          "dependencies": [
            "sc-button",
            "sc-card",
            "sc-cc-logo",
            "sc-dialog",
            "sc-divider",
            "sc-flex",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-payment-method",
            "sc-product-line-item",
            "sc-quantity-select",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-subscription-details",
            "sc-subscription-status-badge",
            "sc-tag",
            "sc-text",
            "sc-toggle",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-subscription"
          ],
          "directDependents": [
            "sc-subscription"
          ]
        }
      ],
      "entryKey": "sc-cancel-dialog.sc-subscription-next-payment.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cart-icon",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartIcon",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "icon",
              "type": "string",
              "attribute": "icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'shopping-bag'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The icon to show."
              },
              "internal": false
            },
            {
              "name": "count",
              "type": "number",
              "attribute": "count",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The count to show in the cart icon."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CART-ICON",
              "styleStr": null,
              "styleIdentifier": "scCartIconStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-cart-icon/sc-cart-icon.scss",
                  "relativePath": "sc-cart-icon.scss",
                  "originalComponentPath": "sc-cart-icon.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "container - The container."
              },
              {
                "name": "part",
                "text": "icon__base - The icon base wrapper."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-cart-icon/sc-cart-icon.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-cart-icon/sc-cart-icon.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "exportparts",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "sc-icon"
          ],
          "htmlParts": [
            "base",
            "container"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-cart"
          ],
          "directDependents": [
            "sc-cart"
          ]
        },
        {
          "tagName": "sc-cart-session-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCartSessionProvider",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Order Object"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "session"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scUpdateOrder",
              "method": "handleUpdateSession",
              "capture": false,
              "passive": false
            },
            {
              "name": "scApplyCoupon",
              "method": "handleCouponApply",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update line items event"
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Error event"
              },
              "complexType": {
                "original": "{ message: string; code?: string; data?: any; additional_errors?: any } | {}",
                "resolved": "{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state"
              },
              "complexType": {
                "original": "'loading' | 'busy' | 'navigating' | 'idle'",
                "resolved": "\"busy\" | \"idle\" | \"loading\" | \"navigating\"",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "session",
              "methodName": "handleSessionUpdate"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/cart-session-provider/sc-cart-session-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/cart-session-provider/sc-cart-session-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "order",
            "onScUpdateLineItems"
          ],
          "htmlTagNames": [
            "sc-line-items-provider",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-items-provider"
          ],
          "directDependencies": [
            "sc-line-items-provider"
          ],
          "dependencies": [
            "sc-line-items-provider"
          ],
          "dependents": [
            "sc-cart"
          ],
          "directDependents": [
            "sc-cart"
          ]
        },
        {
          "tagName": "sc-drawer",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDrawer",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates whether or not the drawer is open. You can use this in lieu of the show/hide methods."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The drawer's label as displayed in the header. You should always include a relevant label even when using\n`no-header`, as it is required for proper accessibility."
              },
              "internal": false
            },
            {
              "name": "placement",
              "type": "string",
              "attribute": "placement",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'end'",
              "complexType": {
                "original": "'top' | 'end' | 'bottom' | 'start'",
                "resolved": "\"bottom\" | \"end\" | \"start\" | \"top\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The direction from which the drawer will open."
              },
              "internal": false
            },
            {
              "name": "contained",
              "type": "boolean",
              "attribute": "contained",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of\nits parent element, set this prop and add `position: relative` to the parent."
              },
              "internal": false
            },
            {
              "name": "noHeader",
              "type": "boolean",
              "attribute": "no-header",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Removes the header. This will also remove the default close button, so please ensure you provide an easy,\naccessible way for users to dismiss the drawer."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scInitialFocus",
              "method": "scInitialFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scRequestClose",
              "method": "scRequestClose",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "'close-button' | 'keyboard' | 'overlay'",
                "resolved": "\"close-button\" | \"keyboard\" | \"overlay\"",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scShow",
              "method": "scShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scHide",
              "method": "scHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scAfterShow",
              "method": "scAfterShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scAfterHide",
              "method": "scAfterHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DRAWER",
              "styleStr": null,
              "styleIdentifier": "scDrawerStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-drawer/sc-drawer.css",
                  "relativePath": "sc-drawer.css",
                  "originalComponentPath": "sc-drawer.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-drawer/sc-drawer.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-drawer/sc-drawer.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "ref",
            "onKeyDown",
            "onClick",
            "tabindex",
            "role",
            "aria-modal",
            "aria-hidden",
            "aria-label",
            "aria-labelledby",
            "name",
            "id",
            "exportparts",
            "label"
          ],
          "htmlTagNames": [
            "div",
            "header",
            "slot",
            "h2",
            "sc-icon",
            "footer"
          ],
          "htmlParts": [
            "base",
            "overlay",
            "panel",
            "header",
            "title",
            "close-button",
            "header-suffix",
            "body",
            "footer"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-cart"
          ],
          "directDependents": [
            "sc-cart"
          ]
        },
        {
          "tagName": "sc-error",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormErrorProvider",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "error",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ResponseError | null",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Error to display."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [
            {
              "name": "scError",
              "method": "handleErrorEvent",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scUpdateError",
              "method": "scUpdateError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state."
              },
              "complexType": {
                "original": "ResponseError",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "error",
              "methodName": "handleErrorUpdate"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "icon - The alert icon."
              },
              {
                "name": "part",
                "text": "text - The alert text."
              },
              {
                "name": "part",
                "text": "title - The alert title."
              },
              {
                "name": "part",
                "text": "message - The alert message."
              },
              {
                "name": "part",
                "text": "close - The close icon."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/error/sc-error.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/error/sc-error.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "exportparts",
            "type",
            "scrollOnOpen",
            "open",
            "slot"
          ],
          "htmlTagNames": [
            "sc-alert",
            "span"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert"
          ],
          "directDependencies": [
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon"
          ],
          "dependents": [
            "sc-cart"
          ],
          "directDependents": [
            "sc-cart"
          ]
        }
      ],
      "entryKey": "sc-cart-icon.sc-cart-session-provider.sc-drawer.sc-error.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-checkout-mollie-payment",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCheckoutMolliePayment",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "processorId",
              "type": "string",
              "attribute": "processor-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "method",
              "type": "string",
              "attribute": "method",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "error"
            },
            {
              "name": "methods"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Error event"
              },
              "complexType": {
                "original": "ResponseError",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHECKOUT-MOLLIE-PAYMENT",
              "styleStr": null,
              "styleIdentifier": "scCheckoutMolliePaymentStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.css",
                  "relativePath": "sc-checkout-mollie-payment.css",
                  "originalComponentPath": "sc-checkout-mollie-payment.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": true,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "type",
            "open",
            "collapsible",
            "theme",
            "processor-id",
            "method-id",
            "key",
            "slot",
            "class",
            "src",
            "label",
            "methods",
            "z-index",
            "is-manual"
          ],
          "htmlTagNames": [
            "sc-card",
            "sc-skeleton",
            "sc-alert",
            "sc-payment-method-choice",
            "span",
            "img",
            "sc-payment-selected",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-card",
            "sc-skeleton",
            "sc-alert",
            "sc-payment-method-choice",
            "sc-payment-selected",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-card",
            "sc-skeleton",
            "sc-alert",
            "sc-payment-method-choice",
            "sc-payment-selected",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-card",
            "sc-divider",
            "sc-icon",
            "sc-payment-method-choice",
            "sc-payment-selected",
            "sc-skeleton",
            "sc-spinner"
          ],
          "dependents": [
            "sc-payment"
          ],
          "directDependents": [
            "sc-payment"
          ]
        }
      ],
      "entryKey": "sc-checkout-mollie-payment.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-checkout-unsaved-changes-warning",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCheckoutUnsavedChangesWarning",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "state",
              "type": "string",
              "attribute": "state",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "FormState",
                "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
                "references": {
                  "FormState": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/checkout-unsaved-changes-warning/sc-checkout-unsaved-changes-warning.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/checkout-unsaved-changes-warning/sc-checkout-unsaved-changes-warning.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": false,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": false,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        },
        {
          "tagName": "sc-form-components-validator",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormComponentsValidator",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disable validation?"
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The order"
              },
              "internal": false
            },
            {
              "name": "taxProtocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "TaxProtocol",
                "resolved": "TaxProtocol",
                "references": {
                  "TaxProtocol": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The tax protocol"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasAddress"
            },
            {
              "name": "hasTaxIDField"
            },
            {
              "name": "hasBumpsField"
            },
            {
              "name": "hasTaxLine"
            },
            {
              "name": "hasBumpLine"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleOrderChange"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/form-components-validator/sc-form-components-validator.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/form-components-validator/sc-form-components-validator.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-order-bumps",
            "sc-line-item-tax",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-order-bumps",
            "sc-line-item-tax"
          ],
          "directDependencies": [
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-order-bumps",
            "sc-line-item-tax"
          ],
          "dependencies": [
            "sc-address",
            "sc-block-ui",
            "sc-button",
            "sc-choice",
            "sc-compact-address",
            "sc-divider",
            "sc-dropdown",
            "sc-form-control",
            "sc-format-number",
            "sc-icon",
            "sc-input",
            "sc-line-item",
            "sc-line-item-tax",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-order-bump",
            "sc-order-bumps",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-select",
            "sc-spinner",
            "sc-tax-id-input",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        },
        {
          "tagName": "sc-form-error-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormErrorProvider",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "checkoutState",
              "type": "string",
              "attribute": "checkout-state",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "FormState",
                "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
                "references": {
                  "FormState": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The current order."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scError",
              "method": "handleErrorEvent",
              "capture": false,
              "passive": false
            },
            {
              "name": "scPayError",
              "method": "handlePayError",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scUpdateError",
              "method": "scUpdateError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state."
              },
              "complexType": {
                "original": "ResponseError",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Form state event."
              },
              "complexType": {
                "original": "FormStateSetter",
                "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
                "references": {
                  "FormStateSetter": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "error",
              "methodName": "handleErrorUpdate"
            },
            {
              "propName": "checkoutState",
              "methodName": "handleStateChange"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": "This component listens for a confirmed event and redirects to the success url."
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/form-error-provider/sc-form-error-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/form-error-provider/sc-form-error-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "sc-checkout-form-errors",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-checkout-form-errors"
          ],
          "directDependencies": [
            "sc-checkout-form-errors"
          ],
          "dependencies": [
            "sc-alert",
            "sc-checkout-form-errors",
            "sc-icon"
          ],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        },
        {
          "tagName": "sc-form-state-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormStateProvider",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [
            {
              "name": "checkoutState"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scSetState",
              "method": "handleSetStateEvent",
              "capture": false,
              "passive": false
            },
            {
              "name": "scPaid",
              "method": "handlePaid",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scSetCheckoutFormState",
              "method": "scSetCheckoutFormState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state."
              },
              "complexType": {
                "original": "FormState",
                "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
                "references": {
                  "FormState": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "checkoutState",
              "methodName": "handleCheckoutStateChange"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": "This component listens for a confirmed event and redirects to the success url."
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/form-state-provider/sc-form-state-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/form-state-provider/sc-form-state-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "sc-block-ui",
            "div",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-block-ui",
            "sc-spinner"
          ],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        },
        {
          "tagName": "sc-login-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLoginProvider",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "loggedIn",
              "type": "boolean",
              "attribute": "logged-in",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the user logged in."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "notice"
            },
            {
              "name": "open"
            },
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scLoginPrompt",
              "method": "handleLoginPrompt",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scSetLoggedIn",
              "method": "scSetLoggedIn",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetCustomer",
              "method": "scSetCustomer",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "{ email: string; name?: string }",
                "resolved": "{ email: string; name?: string; }",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleLoginDialogChange"
            },
            {
              "propName": "loggedIn",
              "methodName": "handleLoggedInChange"
            },
            {
              "propName": "order",
              "methodName": "handleOrderChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LOGIN-PROVIDER",
              "styleStr": null,
              "styleIdentifier": "scLoginProviderStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/sc-login-provider/sc-login-provider.css",
                  "relativePath": "sc-login-provider.css",
                  "originalComponentPath": "sc-login-provider.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/sc-login-provider/sc-login-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/sc-login-provider/sc-login-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "open",
            "style",
            "closable",
            "slot",
            "label",
            "onScRequestClose",
            "ref",
            "onScFormSubmit",
            "onScSubmit",
            "name",
            "required",
            "autofocus",
            "full",
            "loading",
            "submit"
          ],
          "htmlTagNames": [
            "sc-alert",
            "span",
            "slot",
            "sc-dialog",
            "sc-form",
            "sc-input",
            "sc-button"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert",
            "sc-dialog",
            "sc-form",
            "sc-input",
            "sc-button"
          ],
          "directDependencies": [
            "sc-alert",
            "sc-dialog",
            "sc-form",
            "sc-input",
            "sc-button"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-dialog",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        },
        {
          "tagName": "sc-order-confirm-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmProvider",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Success url."
              },
              "internal": false
            },
            {
              "name": "successText",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "{\n    title: string;\n    description: string;\n    button: string;\n  }",
                "resolved": "{ title: string; description: string; button: string; }",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Success text for the form."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "showSuccessModal"
            },
            {
              "name": "confirmedCheckout"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scPaid",
              "method": "handlePaidEvent",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scOrderPaid",
              "method": "scOrderPaid",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "The order is paid event."
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Error event."
              },
              "complexType": {
                "original": "{ message: string; code?: string; data?: any; additional_errors?: any } | {}",
                "resolved": "{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-CONFIRM-PROVIDER",
              "styleStr": null,
              "styleIdentifier": "scOrderConfirmProviderStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/order-confirm-provider/sc-order-confirm-provider.scss",
                  "relativePath": "sc-order-confirm-provider.scss",
                  "originalComponentPath": "sc-order-confirm-provider.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": "This component listens to the order status\nand confirms the order when payment is successful."
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/order-confirm-provider/sc-order-confirm-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/order-confirm-provider/sc-order-confirm-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "open",
            "style",
            "noHeader",
            "onScRequestClose",
            "class",
            "name",
            "heading",
            "slot",
            "type",
            "href",
            "size"
          ],
          "htmlTagNames": [
            "slot",
            "sc-dialog",
            "div",
            "sc-icon",
            "sc-dashboard-module",
            "span",
            "sc-alert",
            "p",
            "sc-button"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dialog",
            "sc-icon",
            "sc-dashboard-module",
            "sc-alert",
            "sc-button"
          ],
          "directDependencies": [
            "sc-dialog",
            "sc-icon",
            "sc-dashboard-module",
            "sc-alert",
            "sc-button"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-dashboard-module",
            "sc-dialog",
            "sc-icon",
            "sc-spinner"
          ],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        },
        {
          "tagName": "sc-session-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSessionProvider",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "prices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<PriceChoice>",
                "resolved": "PriceChoice[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "PriceChoice": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "An array of prices to pre-fill in the form."
              },
              "internal": false
            },
            {
              "name": "persist",
              "type": "boolean",
              "attribute": "persist",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we persist the session."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "finalize",
              "docs": {
                "text": "Finalize the order.",
                "tags": [
                  {
                    "name": "returns"
                  }
                ]
              },
              "complexType": {
                "signature": "() => Promise<Checkout | NodeJS.Timeout>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  },
                  "NodeJS": {
                    "location": "global"
                  }
                },
                "return": "Promise<Checkout | Timeout>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "scFormSubmit",
              "method": "handleFormSubmit",
              "capture": false,
              "passive": false
            },
            {
              "name": "scPaid",
              "method": "handlePaid",
              "capture": false,
              "passive": false
            },
            {
              "name": "scPayError",
              "method": "handlePayError",
              "capture": false,
              "passive": false
            },
            {
              "name": "scUpdateAbandonedCart",
              "method": "handleAbandonedCartUpdate",
              "capture": false,
              "passive": false
            },
            {
              "name": "scApplyCoupon",
              "method": "handleCouponApply",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update line items event"
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scUpdateDraftState",
              "method": "scUpdateDraftState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update line items event"
              },
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scPaid",
              "method": "scPaid",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Error event"
              },
              "complexType": {
                "original": "{ message: string; code?: string; data?: any; additional_errors?: any } | {}",
                "resolved": "{ message: string; code?: string; data?: any; additional_errors?: any; } | {}",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state"
              },
              "complexType": {
                "original": "FormStateSetter",
                "resolved": "\"EXPIRE\" | \"FETCH\" | \"FINALIZE\" | \"PAID\" | \"PAYING\" | \"REJECT\" | \"RESOLVE\"",
                "references": {
                  "FormStateSetter": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "prices",
              "methodName": "handlePricesChange"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/session-provider/sc-session-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/session-provider/sc-session-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "order",
            "onScUpdateLineItems"
          ],
          "htmlTagNames": [
            "sc-line-items-provider",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-items-provider"
          ],
          "directDependencies": [
            "sc-line-items-provider"
          ],
          "dependencies": [
            "sc-line-items-provider"
          ],
          "dependents": [
            "sc-checkout"
          ],
          "directDependents": [
            "sc-checkout"
          ]
        }
      ],
      "entryKey": "sc-checkout-unsaved-changes-warning.sc-form-components-validator.sc-form-error-provider.sc-form-state-provider.sc-login-provider.sc-order-confirm-provider.sc-session-provider.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-choice-container",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScChoiceContainer",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The choice name attribute"
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The choice value"
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'radio'",
              "complexType": {
                "original": "'radio' | 'checkbox'",
                "resolved": "\"checkbox\" | \"radio\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The choice name attribute"
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the choice disabled"
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the choice in a checked state."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required"
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
              },
              "internal": false
            },
            {
              "name": "showControl",
              "type": "boolean",
              "attribute": "show-control",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the radio/checkbox control"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            }
          ],
          "methods": [
            {
              "name": "triggerClick",
              "docs": {
                "text": "Simulates a click on the choice.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerFocus",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            },
            {
              "name": "setCustomValidity",
              "docs": {
                "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "(message: string) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "click",
              "method": "handleClickEvent",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's checked state changes."
              },
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "checked",
              "methodName": "handleCheckedChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHOICE-CONTAINER",
              "styleStr": null,
              "styleIdentifier": "scChoiceContainerStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choice-container/sc-choice-container.scss",
                  "relativePath": "sc-choice-container.scss",
                  "originalComponentPath": "sc-choice-container.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choice-container/sc-choice-container.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choice-container/sc-choice-container.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "tabindex",
            "onFocus",
            "part",
            "class",
            "onKeyDown",
            "onMouseDown",
            "name",
            "htmlFor",
            "hidden",
            "viewBox",
            "stroke",
            "stroke-width",
            "fill",
            "fill-rule",
            "stroke-linecap",
            "transform",
            "d",
            "cx",
            "cy",
            "r",
            "id",
            "ref",
            "type",
            "value",
            "checked",
            "disabled",
            "aria-checked",
            "aria-disabled",
            "aria-labelledby",
            "onBlur",
            "onChange"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "label",
            "span",
            "svg",
            "g",
            "path",
            "circle",
            "input"
          ],
          "htmlParts": [
            "base",
            "content",
            "control",
            "checked-icon",
            "label"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-price-choice"
          ],
          "directDependents": [
            "sc-price-choice"
          ]
        }
      ],
      "entryKey": "sc-choice-container.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-heading",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScHeading",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-HEADING",
              "styleStr": null,
              "styleIdentifier": "scHeadingStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/heading/sc-heading.scss",
                  "relativePath": "sc-heading.scss",
                  "originalComponentPath": "sc-heading.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/heading/sc-heading.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/heading/sc-heading.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base",
            "title",
            "description"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-order-confirmation"
          ],
          "directDependents": [
            "sc-order-confirmation"
          ]
        },
        {
          "tagName": "sc-order-confirm-components-validator",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmComponentsValidator",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "checkout",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The checkout"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasManualInstructions"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "checkout",
              "methodName": "handleOrderChange"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/sc-order-confirm-components-validator/sc-order-confirm-components-validator.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/sc-order-confirm-components-validator/sc-order-confirm-components-validator.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "sc-order-manual-instructions",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-order-manual-instructions"
          ],
          "directDependencies": [
            "sc-order-manual-instructions"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon",
            "sc-order-manual-instructions"
          ],
          "dependents": [
            "sc-order-confirmation"
          ],
          "directDependents": [
            "sc-order-confirmation"
          ]
        }
      ],
      "entryKey": "sc-heading.sc-order-confirm-components-validator.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-confirmation-line-items",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmationLineItems",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-CONFIRMATION-LINE-ITEMS",
              "styleStr": null,
              "styleIdentifier": "scOrderConfirmationLineItemsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.scss",
                  "relativePath": "sc-order-confirmation-line-items.scss",
                  "originalComponentPath": "sc-order-confirmation-line-items.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": true,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "slot",
            "class",
            "part",
            "key",
            "imageUrl",
            "name",
            "editable",
            "removable",
            "quantity",
            "fees",
            "amount",
            "currency",
            "trialDurationDays",
            "interval"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "sc-skeleton",
            "div",
            "sc-product-line-item"
          ],
          "htmlParts": [
            "line-items"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-skeleton",
            "sc-product-line-item"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-skeleton",
            "sc-product-line-item"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-product-line-item",
            "sc-quantity-select",
            "sc-skeleton"
          ],
          "dependents": [
            "sc-order-confirmation-details"
          ],
          "directDependents": [
            "sc-order-confirmation-details"
          ]
        },
        {
          "tagName": "sc-order-confirmation-totals",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderConfirmationTotals",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-CONFIRMATION-TOTALS",
              "styleStr": null,
              "styleIdentifier": "scOrderConfirmationTotalsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.css",
                  "relativePath": "sc-order-confirmation-totals.css",
                  "originalComponentPath": "sc-order-confirmation-totals.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "slot",
            "type",
            "size",
            "class",
            "currency",
            "value",
            "order",
            "total",
            "show-currency"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "span",
            "br",
            "sc-tag",
            "sc-format-number",
            "div",
            "sc-line-item-total",
            "sc-divider"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-tag",
            "sc-format-number",
            "sc-line-item-total",
            "sc-divider"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-tag",
            "sc-format-number",
            "sc-line-item-total",
            "sc-divider"
          ],
          "dependencies": [
            "sc-divider",
            "sc-format-number",
            "sc-line-item",
            "sc-line-item-total",
            "sc-skeleton",
            "sc-tag",
            "sc-total"
          ],
          "dependents": [
            "sc-order-confirmation-details"
          ],
          "directDependents": [
            "sc-order-confirmation-details"
          ]
        }
      ],
      "entryKey": "sc-order-confirmation-line-items.sc-order-confirmation-totals.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-paypal-buttons",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPaypalButtons",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "clientId",
              "type": "string",
              "attribute": "client-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Client id for the script."
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this busy?"
              },
              "internal": false
            },
            {
              "name": "merchantId",
              "type": "string",
              "attribute": "merchant-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The merchant id for paypal."
              },
              "internal": false
            },
            {
              "name": "merchantInitiated",
              "type": "boolean",
              "attribute": "merchant-initiated",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Merchant initiated billing enabled."
              },
              "internal": false
            },
            {
              "name": "mode",
              "type": "string",
              "attribute": "mode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'test' | 'live'",
                "resolved": "\"live\" | \"test\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Test or live mode."
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The order."
              },
              "internal": false
            },
            {
              "name": "buttons",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "['paypal', 'card']",
              "complexType": {
                "original": "string[]",
                "resolved": "string[]",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Buttons to render"
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'paypal'",
              "complexType": {
                "original": "'paypal' | 'checkout' | 'buynow' | 'pay' | 'installment'",
                "resolved": "\"buynow\" | \"checkout\" | \"installment\" | \"pay\" | \"paypal\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label for the button."
              },
              "internal": false
            },
            {
              "name": "color",
              "type": "string",
              "attribute": "color",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'gold'",
              "complexType": {
                "original": "'gold' | 'blue' | 'silver' | 'black' | 'white'",
                "resolved": "\"black\" | \"blue\" | \"gold\" | \"silver\" | \"white\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Button color."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loaded"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emit an error"
              },
              "complexType": {
                "original": "object",
                "resolved": "object",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the state machine"
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPaid",
              "method": "scPaid",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleOrderChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYPAL-BUTTONS",
              "styleStr": null,
              "styleIdentifier": "scPaypalButtonsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/paypal-buttons/paypal-buttons.scss",
                  "relativePath": "paypal-buttons.scss",
                  "originalComponentPath": "paypal-buttons.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/paypal-buttons/paypal-buttons.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/paypal-buttons/paypal-buttons.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "style",
            "hidden",
            "ref"
          ],
          "htmlTagNames": [
            "div",
            "sc-skeleton"
          ],
          "htmlParts": [
            "paypal-card-button",
            "paypal-button"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-skeleton"
          ],
          "directDependencies": [
            "sc-skeleton"
          ],
          "dependencies": [
            "sc-skeleton"
          ],
          "dependents": [
            "sc-order-submit"
          ],
          "directDependents": [
            "sc-order-submit"
          ]
        },
        {
          "tagName": "sc-secure-notice",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSecureNotice",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SECURE-NOTICE",
              "styleStr": null,
              "styleIdentifier": "scSecureNoticeStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/secure-notice/sc-secure-notice.scss",
                  "relativePath": "sc-secure-notice.scss",
                  "originalComponentPath": "sc-secure-notice.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/secure-notice/sc-secure-notice.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/secure-notice/sc-secure-notice.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "xmlns",
            "width",
            "height",
            "viewBox",
            "fill",
            "d",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "svg",
            "path",
            "span",
            "slot"
          ],
          "htmlParts": [
            "base",
            "icon",
            "text"
          ],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-order-submit"
          ],
          "directDependents": [
            "sc-order-submit"
          ]
        }
      ],
      "entryKey": "sc-paypal-buttons.sc-secure-notice.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-stripe-payment-request",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScStripePaymentRequest",
          "elementRef": "el",
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "stripeAccountId",
              "type": "string",
              "attribute": "stripe-account-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Your stripe connected account id."
              },
              "internal": false
            },
            {
              "name": "publishableKey",
              "type": "string",
              "attribute": "publishable-key",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Stripe publishable key"
              },
              "internal": false
            },
            {
              "name": "country",
              "type": "string",
              "attribute": "country",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'US'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Country"
              },
              "internal": false
            },
            {
              "name": "currencyCode",
              "type": "string",
              "attribute": "currency-code",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'usd'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency"
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Checkout Session"
              },
              "internal": false
            },
            {
              "name": "prices",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Prices",
                "resolved": "{ [id: string]: Price; }",
                "references": {
                  "Prices": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'total'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label"
              },
              "internal": false
            },
            {
              "name": "amount",
              "type": "number",
              "attribute": "amount",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Amount"
              },
              "internal": false
            },
            {
              "name": "theme",
              "type": "string",
              "attribute": "theme",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'dark'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Payment request theme"
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ResponseError | null",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "paymentMethod",
              "type": "string",
              "attribute": "payment-method",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "debug",
              "type": "boolean",
              "attribute": "debug",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this in debug mode."
              },
              "internal": false
            },
            {
              "name": "formId",
              "type": "any",
              "attribute": "form-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number | string",
                "resolved": "number | string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This is required to validate the form on the server"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loaded"
            },
            {
              "name": "debugError"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scFormSubmit",
              "method": "scFormSubmit",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPaid",
              "method": "scPaid",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPayError",
              "method": "scPayError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPaymentRequestLoaded",
              "method": "scPaymentRequestLoaded",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scUpdateOrderState",
              "method": "scUpdateOrderState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "order",
              "methodName": "handleOrderChange"
            },
            {
              "propName": "loaded",
              "methodName": "handleLoaded"
            },
            {
              "propName": "error",
              "methodName": "handleErrorChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-STRIPE-PAYMENT-REQUEST",
              "styleStr": null,
              "styleIdentifier": "scStripePaymentRequestStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-payment-request/sc-stripe-payment-request.scss",
                  "relativePath": "sc-stripe-payment-request.scss",
                  "originalComponentPath": "sc-stripe-payment-request.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-payment-request/sc-stripe-payment-request.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stripe-payment-request/sc-stripe-payment-request.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "name",
            "type",
            "open",
            "slot",
            "part",
            "ref"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "sc-alert",
            "span"
          ],
          "htmlParts": [
            "button"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert"
          ],
          "directDependencies": [
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon"
          ],
          "dependents": [
            "sc-express-payment"
          ],
          "directDependents": [
            "sc-express-payment"
          ]
        }
      ],
      "entryKey": "sc-stripe-payment-request.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-table",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTable",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TABLE",
              "styleStr": null,
              "styleIdentifier": "scTableStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table/sc-table.scss",
                  "relativePath": "sc-table.scss",
                  "originalComponentPath": "sc-table.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table/sc-table.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table/sc-table.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "name"
          ],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-licenses-list"
          ],
          "directDependents": [
            "sc-licenses-list"
          ]
        },
        {
          "tagName": "sc-table-cell",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTableScll",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TABLE-CELL",
              "styleStr": null,
              "styleIdentifier": "scTableCellStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-cell/sc-table-cell.scss",
                  "relativePath": "sc-table-cell.scss",
                  "originalComponentPath": "sc-table-cell.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-cell/sc-table-cell.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-cell/sc-table-cell.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-licenses-list"
          ],
          "directDependents": [
            "sc-licenses-list"
          ]
        },
        {
          "tagName": "sc-table-row",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTableRow",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TABLE-ROW",
              "styleStr": null,
              "styleIdentifier": "scTableRowStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-row/sc-table-row.scss",
                  "relativePath": "sc-table-row.scss",
                  "originalComponentPath": "sc-table-row.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-row/sc-table-row.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/table-row/sc-table-row.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-licenses-list"
          ],
          "directDependents": [
            "sc-licenses-list"
          ]
        }
      ],
      "entryKey": "sc-table.sc-table-cell.sc-table-row.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-toggles",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScToggles",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "accordion",
              "type": "boolean",
              "attribute": "accordion",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should this function as an accordion?"
              },
              "internal": false
            },
            {
              "name": "collapsible",
              "type": "boolean",
              "attribute": "collapsible",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Are these collapsible?"
              },
              "internal": false
            },
            {
              "name": "theme",
              "type": "string",
              "attribute": "theme",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'default'",
              "complexType": {
                "original": "'default' | 'container'",
                "resolved": "\"container\" | \"default\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Theme for the toggles"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [
            {
              "name": "scShow",
              "method": "handleShowChange",
              "capture": false,
              "passive": false
            }
          ],
          "events": [],
          "watchers": [
            {
              "propName": "collapsible",
              "methodName": "handleCollapibleChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TOGGLES",
              "styleStr": null,
              "styleIdentifier": "scTogglesStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-toggles/sc-toggles.scss",
                  "relativePath": "sc-toggles.scss",
                  "originalComponentPath": "sc-toggles.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-toggles/sc-toggles.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-toggles/sc-toggles.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "no-padding"
          ],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-mollie-add-method"
          ],
          "directDependents": [
            "sc-mollie-add-method"
          ]
        }
      ],
      "entryKey": "sc-toggles.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cancel-discount",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCancelDiscount",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "reason",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "CancellationReason",
                "resolved": "CancellationReason",
                "references": {
                  "CancellationReason": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "comment",
              "type": "string",
              "attribute": "comment",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "protocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "SubscriptionProtocol",
                "resolved": "SubscriptionProtocol",
                "references": {
                  "SubscriptionProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scCancel",
              "method": "scCancel",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scPreserved",
              "method": "scPreserved",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CANCEL-DISCOUNT",
              "styleStr": null,
              "styleIdentifier": "scCancelDiscountStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.scss",
                  "relativePath": "sc-cancel-discount.scss",
                  "originalComponentPath": "sc-cancel-discount.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "heading",
            "style",
            "slot",
            "justifyContent",
            "type",
            "onClick",
            "spinner"
          ],
          "htmlTagNames": [
            "div",
            "sc-dashboard-module",
            "span",
            "sc-flex",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-dashboard-module",
            "sc-flex",
            "sc-icon",
            "sc-spinner"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-subscription"
          ],
          "directDependents": [
            "sc-cancel-dialog"
          ]
        },
        {
          "tagName": "sc-cancel-survey",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCancelSurvey",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "protocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "SubscriptionProtocol",
                "resolved": "SubscriptionProtocol",
                "references": {
                  "SubscriptionProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "reasons",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "CancellationReason[]",
                "resolved": "CancellationReason[]",
                "references": {
                  "CancellationReason": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "selectedReason"
            },
            {
              "name": "comment"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scAbandon",
              "method": "scAbandon",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSubmitReason",
              "method": "scSubmitReason",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "{ reason: CancellationReason; comment: string }",
                "resolved": "{ reason: CancellationReason; comment: string; }",
                "references": {
                  "CancellationReason": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "selectedReason",
              "methodName": "handleSelectedReasonChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CANCEL-SURVEY",
              "styleStr": null,
              "styleIdentifier": "scCancelSurveyStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.scss",
                  "relativePath": "sc-cancel-survey.scss",
                  "originalComponentPath": "sc-cancel-survey.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "value",
            "name",
            "onScChange",
            "class",
            "heading",
            "style",
            "slot",
            "onScSubmit",
            "showLabel",
            "label",
            "required",
            "ref",
            "onScInput",
            "justifyContent",
            "type",
            "submit",
            "onClick"
          ],
          "htmlTagNames": [
            "sc-choice",
            "sc-skeleton",
            "div",
            "sc-dashboard-module",
            "span",
            "sc-form",
            "sc-choices",
            "sc-textarea",
            "sc-flex",
            "sc-button",
            "sc-icon"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-choice",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-form",
            "sc-choices",
            "sc-textarea",
            "sc-flex",
            "sc-button",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-choice",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-form",
            "sc-choices",
            "sc-textarea",
            "sc-flex",
            "sc-button",
            "sc-icon"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-choice",
            "sc-choices",
            "sc-dashboard-module",
            "sc-flex",
            "sc-form",
            "sc-form-control",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-textarea",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-subscription"
          ],
          "directDependents": [
            "sc-cancel-dialog"
          ]
        },
        {
          "tagName": "sc-subscription-cancel",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionCancel",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "backUrl",
              "type": "string",
              "attribute": "back-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "successUrl",
              "type": "string",
              "attribute": "success-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "protocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "SubscriptionProtocol",
                "resolved": "SubscriptionProtocol",
                "references": {
                  "SubscriptionProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "reason",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "CancellationReason",
                "resolved": "CancellationReason",
                "references": {
                  "CancellationReason": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "comment",
              "type": "string",
              "attribute": "comment",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "loading"
            },
            {
              "name": "busy"
            },
            {
              "name": "error"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scAbandon",
              "method": "scAbandon",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scCancelled",
              "method": "scCancelled",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-CANCEL",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionCancelStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.scss",
                  "relativePath": "sc-subscription-cancel.scss",
                  "originalComponentPath": "sc-subscription-cancel.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "slot",
            "type",
            "date",
            "month",
            "day",
            "year",
            "style",
            "heading",
            "class",
            "error",
            "justifyContent",
            "loading",
            "disabled",
            "onClick"
          ],
          "htmlTagNames": [
            "div",
            "strong",
            "sc-format-date",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-date",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-format-date",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-flex",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-dashboard-module",
            "sc-flex",
            "sc-format-date",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-subscription"
          ],
          "directDependents": [
            "sc-cancel-dialog"
          ]
        },
        {
          "tagName": "sc-textarea",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTextarea",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's size."
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's name attribute."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's value attribute."
              },
              "internal": false
            },
            {
              "name": "filled",
              "type": "boolean",
              "attribute": "filled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a filled textarea."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's label. Alternatively, you can use the label slot."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's help text. Alternatively, you can use the help-text slot."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's placeholder text."
              },
              "internal": false
            },
            {
              "name": "rows",
              "type": "number",
              "attribute": "rows",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "4",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The number of rows to display by default."
              },
              "internal": false
            },
            {
              "name": "resize",
              "type": "string",
              "attribute": "resize",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'vertical'",
              "complexType": {
                "original": "'none' | 'vertical' | 'auto'",
                "resolved": "\"auto\" | \"none\" | \"vertical\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Controls how the textarea can be resized."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the textarea."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the textarea readonly."
              },
              "internal": false
            },
            {
              "name": "minlength",
              "type": "number",
              "attribute": "minlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The minimum length of input that will be considered valid."
              },
              "internal": false
            },
            {
              "name": "maxlength",
              "type": "number",
              "attribute": "maxlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The maximum length of input that will be considered valid."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the textarea a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, and `maxlength` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autocapitalize",
              "type": "string",
              "attribute": "autocapitalize",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'",
                "resolved": "\"characters\" | \"none\" | \"off\" | \"on\" | \"sentences\" | \"words\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's autocapitalize attribute."
              },
              "internal": false
            },
            {
              "name": "autocorrect",
              "type": "string",
              "attribute": "autocorrect",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's autocorrect attribute."
              },
              "internal": false
            },
            {
              "name": "autocomplete",
              "type": "string",
              "attribute": "autocomplete",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's autocomplete attribute."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "enterkeyhint",
              "type": "string",
              "attribute": "enterkeyhint",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'",
                "resolved": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's enterkeyhint attribute. This can be used to customize the label or icon of the Enter key on virtual\nkeyboards."
              },
              "internal": false
            },
            {
              "name": "spellcheck",
              "type": "boolean",
              "attribute": "spellcheck",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Enables spell checking on the textarea."
              },
              "internal": false
            },
            {
              "name": "inputmode",
              "type": "string",
              "attribute": "inputmode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'",
                "resolved": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The textarea's inputmode attribute."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            },
            {
              "name": "showCharLimit"
            }
          ],
          "methods": [
            {
              "name": "triggerFocus",
              "docs": {
                "text": "Sets focus on the input.",
                "tags": []
              },
              "complexType": {
                "signature": "(options?: FocusOptions) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FocusOptions": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "rows",
              "methodName": "handleRowsChange"
            },
            {
              "propName": "value",
              "methodName": "handleValueChange"
            },
            {
              "propName": "disabled",
              "methodName": "handleDisabledChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TEXTAREA",
              "styleStr": null,
              "styleIdentifier": "scTextareaStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-textarea/sc-textarea.css",
                  "relativePath": "sc-textarea.css",
                  "originalComponentPath": "sc-textarea.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input - The html input element."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-textarea/sc-textarea.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-textarea/sc-textarea.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "exportparts",
            "size",
            "required",
            "label",
            "showLabel",
            "help",
            "inputId",
            "helpId",
            "labelId",
            "name",
            "ref",
            "id",
            "value",
            "disabled",
            "readonly",
            "placeholder",
            "rows",
            "minlength",
            "maxlength",
            "autocapitalize",
            "autocorrect",
            "autofocus",
            "spellcheck",
            "enterkeyhint",
            "inputmode",
            "aria-describedby",
            "onChange",
            "onInput",
            "onFocus",
            "onBlur",
            "slot"
          ],
          "htmlTagNames": [
            "div",
            "sc-form-control",
            "textarea"
          ],
          "htmlParts": [
            "form-control",
            "form-control-input",
            "base",
            "textarea"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control"
          ],
          "directDependencies": [
            "sc-form-control"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-subscription"
          ],
          "directDependents": [
            "sc-cancel-survey"
          ]
        }
      ],
      "entryKey": "sc-cancel-discount.sc-cancel-survey.sc-subscription-cancel.sc-textarea.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-checkout-form-errors",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCheckoutFormErrors",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "checkoutState",
              "type": "string",
              "attribute": "checkout-state",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "FormState",
                "resolved": "\"confirmed\" | \"confirming\" | \"draft\" | \"expired\" | \"failure\" | \"finalizing\" | \"idle\" | \"loading\" | \"paid\" | \"paying\" | \"redirecting\" | \"updating\"",
                "references": {
                  "FormState": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The current order."
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "ResponseError | null",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Error to display."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": "This component listens for a confirmed event and redirects to the success url."
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/checkout-form-errors/sc-checkout-form-errors.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/checkout-form-errors/sc-checkout-form-errors.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "innerHTML",
            "style",
            "type",
            "scrollOnOpen",
            "open",
            "slot"
          ],
          "htmlTagNames": [
            "span",
            "sc-alert",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert"
          ],
          "directDependencies": [
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-error-provider"
          ],
          "directDependents": [
            "sc-form-error-provider"
          ]
        }
      ],
      "entryKey": "sc-checkout-form-errors.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-column",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScColumn",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-COLUMN",
              "styleStr": null,
              "styleIdentifier": "scColumnStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/column/sc-column.css",
                  "relativePath": "sc-column.css",
                  "originalComponentPath": "sc-column.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/column/sc-column.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/column/sc-column.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-customer-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-customer-edit",
            "sc-wordpress-user-edit"
          ]
        },
        {
          "tagName": "sc-columns",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScColumns",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "verticalAlignment",
              "type": "string",
              "attribute": "vertical-alignment",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The vertical alignment of the columns."
              },
              "internal": false
            },
            {
              "name": "isStackedOnMobile",
              "type": "boolean",
              "attribute": "is-stacked-on-mobile",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this stacked on mobile"
              },
              "internal": false
            },
            {
              "name": "isFullHeight",
              "type": "boolean",
              "attribute": "is-full-height",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this full vertical height"
              },
              "internal": false
            },
            {
              "name": "isReversedOnMobile",
              "type": "boolean",
              "attribute": "is-reversed-on-mobile",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this reverse ordered on mobile"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-COLUMNS",
              "styleStr": null,
              "styleIdentifier": "scColumnsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/columns/sc-columns.scss",
                  "relativePath": "sc-columns.scss",
                  "originalComponentPath": "sc-columns.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/columns/sc-columns.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/columns/sc-columns.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class"
          ],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-customer-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-customer-edit",
            "sc-wordpress-user-edit"
          ]
        }
      ],
      "entryKey": "sc-column.sc-columns.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-coupon-form",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCouponForm",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The label for the coupon form"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the form loading"
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the form calculating"
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The placeholder for the input"
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "string",
              "attribute": "error",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The error message"
              },
              "internal": false
            },
            {
              "name": "forceOpen",
              "type": "boolean",
              "attribute": "force-open",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Force the form to show"
              },
              "internal": false
            },
            {
              "name": "discount",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "DiscountResponse",
                "resolved": "DiscountResponse",
                "references": {
                  "DiscountResponse": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The discount"
              },
              "internal": false
            },
            {
              "name": "currency",
              "type": "string",
              "attribute": "currency",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency"
              },
              "internal": false
            },
            {
              "name": "discountAmount",
              "type": "number",
              "attribute": "discount-amount",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The discount amount"
              },
              "internal": false
            },
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is it open"
              },
              "internal": false
            },
            {
              "name": "collapsed",
              "type": "boolean",
              "attribute": "collapsed",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "buttonText",
              "type": "string",
              "attribute": "button-text",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The text for apply button"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "value"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scApplyCoupon",
              "method": "scApplyCoupon",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "When the coupon is applied"
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-COUPON-FORM",
              "styleStr": null,
              "styleIdentifier": "scCouponFormStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/coupon-form/sc-coupon-form.scss",
                  "relativePath": "sc-coupon-form.scss",
                  "originalComponentPath": "sc-coupon-form.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "form - The form."
              },
              {
                "name": "part",
                "text": "input__base - The input base."
              },
              {
                "name": "part",
                "text": "input - The input."
              },
              {
                "name": "part",
                "text": "input__form-control - The input form control."
              },
              {
                "name": "part",
                "text": "button__base - The button base element."
              },
              {
                "name": "part",
                "text": "button__label - The button label."
              },
              {
                "name": "part",
                "text": "info - The discount info."
              },
              {
                "name": "part",
                "text": "discount - The discount displayed (% off)"
              },
              {
                "name": "part",
                "text": "amount - The discount amount."
              },
              {
                "name": "part",
                "text": "discount-label - The discount label."
              },
              {
                "name": "part",
                "text": "coupon-tag - The coupon tag."
              },
              {
                "name": "part",
                "text": "error__base - The error base."
              },
              {
                "name": "part",
                "text": "error__icon - The error icon"
              },
              {
                "name": "part",
                "text": "error__text - The error text."
              },
              {
                "name": "part",
                "text": "error_title - The error title."
              },
              {
                "name": "part",
                "text": "error__message - The error message."
              },
              {
                "name": "part",
                "text": "block-ui - The block ui base component."
              },
              {
                "name": "part",
                "text": "block-ui__content - The block ui content (spinner)."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/coupon-form/sc-coupon-form.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/coupon-form/sc-coupon-form.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "exportparts",
            "slot",
            "part",
            "type",
            "class",
            "clearable",
            "onScClear",
            "currency",
            "value",
            "onMouseDown",
            "name",
            "onScInput",
            "placeholder",
            "onScBlur",
            "onKeyDown",
            "ref",
            "loading",
            "size",
            "onClick",
            "outline",
            "open",
            "label"
          ],
          "htmlTagNames": [
            "sc-skeleton",
            "sc-line-item",
            "span",
            "div",
            "sc-tag",
            "sc-format-number",
            "slot",
            "sc-input",
            "sc-button",
            "sc-alert",
            "sc-block-ui",
            "sc-form-control"
          ],
          "htmlParts": [
            "discount-label",
            "base",
            "label",
            "form"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-skeleton",
            "sc-line-item",
            "sc-tag",
            "sc-format-number",
            "sc-input",
            "sc-button",
            "sc-alert",
            "sc-block-ui",
            "sc-form-control"
          ],
          "directDependencies": [
            "sc-skeleton",
            "sc-line-item",
            "sc-tag",
            "sc-format-number",
            "sc-input",
            "sc-button",
            "sc-alert",
            "sc-block-ui",
            "sc-form-control"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-form-control",
            "sc-format-number",
            "sc-icon",
            "sc-input",
            "sc-line-item",
            "sc-skeleton",
            "sc-spinner",
            "sc-tag",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-order-coupon-form",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-order-coupon-form",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-coupon-form.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-customer-details",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCustomerDetails",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "editLink",
              "type": "string",
              "attribute": "edit-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "customer",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Customer",
                "resolved": "Customer",
                "references": {
                  "Customer": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "string",
              "attribute": "error",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CUSTOMER-DETAILS",
              "styleStr": null,
              "styleIdentifier": "scCustomerDetailsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/customer-details/sc-customer-details.css",
                  "relativePath": "sc-customer-details.css",
                  "originalComponentPath": "sc-customer-details.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "heading - The heading."
              },
              {
                "name": "part",
                "text": "heading-text - The heading text wrapper."
              },
              {
                "name": "part",
                "text": "heading-title - The heading title."
              },
              {
                "name": "part",
                "text": "heading-description - The heading description."
              },
              {
                "name": "part",
                "text": "error__base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "error__icon - The alert icon."
              },
              {
                "name": "part",
                "text": "error__text - The alert text."
              },
              {
                "name": "part",
                "text": "error__title - The alert title."
              },
              {
                "name": "part",
                "text": "error__ message - The alert message."
              },
              {
                "name": "part",
                "text": "test-tag__base - The base test tag."
              },
              {
                "name": "part",
                "text": "text-tag__content - The base test tag content."
              },
              {
                "name": "part",
                "text": "button__base - The button base."
              },
              {
                "name": "part",
                "text": "button__label - The button label."
              },
              {
                "name": "part",
                "text": "button__prefix - The button prefix."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/customer-details/sc-customer-details.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/customer-details/sc-customer-details.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "no-padding",
            "style",
            "mobileSize",
            "type",
            "name",
            "icon",
            "mobile-size",
            "exportparts",
            "class",
            "error",
            "slot",
            "size",
            "href"
          ],
          "htmlTagNames": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "div",
            "strong",
            "sc-tag",
            "sc-divider",
            "slot",
            "sc-empty",
            "sc-skeleton",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-icon"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-divider",
            "sc-empty",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag",
            "sc-divider",
            "sc-empty",
            "sc-skeleton",
            "sc-dashboard-module",
            "sc-button",
            "sc-icon"
          ],
          "dependencies": [
            "sc-alert",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-tag"
          ],
          "dependents": [
            "sc-dashboard-customer-details",
            "sc-order-confirmation-customer"
          ],
          "directDependents": [
            "sc-dashboard-customer-details",
            "sc-order-confirmation-customer"
          ]
        }
      ],
      "entryKey": "sc-customer-details.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-compact-address",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCompactAddress",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "address",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    country: null,\n    city: null,\n    line_1: null,\n    line_2: null,\n    postal_code: null,\n    state: null,\n  }",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The address."
              },
              "internal": false
            },
            {
              "name": "names",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    country: 'shipping_country',\n    city: 'shipping_city',\n    line_1: 'shipping_line_1',\n    line_2: 'shipping_line_2',\n    postal_code: 'shipping_postal_code',\n    state: 'shipping_state',\n  }",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "placeholders",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    country: '',\n    postal_code: '',\n    state: '',\n  }",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Placeholders"
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Country or region', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label for the address"
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required?"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "countryChoices"
            },
            {
              "name": "regions"
            },
            {
              "name": "showState"
            },
            {
              "name": "showPostal"
            }
          ],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChangeAddress",
              "method": "scChangeAddress",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Address change event."
              },
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scInputAddress",
              "method": "scInputAddress",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Address input event."
              },
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "address",
              "methodName": "handleAddressChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-COMPACT-ADDRESS",
              "styleStr": null,
              "styleIdentifier": "scCompactAddressStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-compact-address/sc-compact-address.scss",
                  "relativePath": "sc-compact-address.scss",
                  "originalComponentPath": "sc-compact-address.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input__base - The inputs base element."
              },
              {
                "name": "part",
                "text": "select__base - The select boxes base element."
              },
              {
                "name": "part",
                "text": "input - The html input element."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              },
              {
                "name": "part",
                "text": "trigger - The select box trigger."
              },
              {
                "name": "part",
                "text": "panel - The select box panel."
              },
              {
                "name": "part",
                "text": "caret - The select box caret."
              },
              {
                "name": "part",
                "text": "search__base - The select search base."
              },
              {
                "name": "part",
                "text": "search__input - The select search input."
              },
              {
                "name": "part",
                "text": "search__form-control - The select search form control."
              },
              {
                "name": "part",
                "text": "menu__base - The select menu base."
              },
              {
                "name": "part",
                "text": "spinner__base  - The select spinner base."
              },
              {
                "name": "part",
                "text": "empty - The select empty message."
              },
              {
                "name": "part",
                "text": "block-ui - The block ui base component."
              },
              {
                "name": "part",
                "text": "block-ui__content - The block ui content (spinner)."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-compact-address/sc-compact-address.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-compact-address/sc-compact-address.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "exportparts",
            "label",
            "required",
            "value",
            "onScChange",
            "choices",
            "autocomplete",
            "placeholder",
            "name",
            "search",
            "unselect",
            "squared-bottom",
            "squared-top",
            "squared-right",
            "onScInput",
            "maxlength",
            "squared-left"
          ],
          "htmlTagNames": [
            "div",
            "sc-form-control",
            "sc-select",
            "sc-input",
            "sc-block-ui"
          ],
          "htmlParts": [
            "base",
            "control"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control",
            "sc-select",
            "sc-input",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-form-control",
            "sc-select",
            "sc-input",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-block-ui",
            "sc-dropdown",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-select",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-components-validator",
            "sc-order-shipping-address"
          ],
          "directDependents": [
            "sc-order-shipping-address"
          ]
        },
        {
          "tagName": "sc-line-item-tax",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLineItemTax",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LINE-ITEM-TAX",
              "styleStr": null,
              "styleIdentifier": "scLineItemTaxStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.scss",
                  "relativePath": "sc-line-item-tax.scss",
                  "originalComponentPath": "sc-line-item-tax.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "slot",
            "type",
            "currency",
            "value"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "span",
            "sc-format-number"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-format-number"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-format-number"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-line-item"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-components-validator"
          ],
          "directDependents": [
            "sc-form-components-validator"
          ]
        },
        {
          "tagName": "sc-order-bump",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderBump",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "bump",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Bump",
                "resolved": "Bump",
                "references": {
                  "Bump": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The bump"
              },
              "internal": false
            },
            {
              "name": "checkout",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The checkout"
              },
              "internal": false
            },
            {
              "name": "showControl",
              "type": "boolean",
              "attribute": "show-control",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the controls"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scAddLineItem",
              "method": "scAddLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Add line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scRemoveLineItem",
              "method": "scRemoveLineItem",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Remove line item event"
              },
              "complexType": {
                "original": "LineItemData",
                "resolved": "LineItemData",
                "references": {
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-BUMP",
              "styleStr": null,
              "styleIdentifier": "scOrderBumpStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-order-bump/sc-order-bump.scss",
                  "relativePath": "sc-order-bump.scss",
                  "originalComponentPath": "sc-order-bump.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-order-bump/sc-order-bump.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-order-bump/sc-order-bump.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "slot",
            "part",
            "type",
            "value",
            "currency",
            "showControl",
            "checked",
            "onScChange",
            "exportparts",
            "style",
            "src"
          ],
          "htmlTagNames": [
            "span",
            "div",
            "sc-format-number",
            "sc-choice",
            "sc-divider",
            "img"
          ],
          "htmlParts": [
            "price",
            "base-content"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-number",
            "sc-choice",
            "sc-divider"
          ],
          "directDependencies": [
            "sc-format-number",
            "sc-choice",
            "sc-divider"
          ],
          "dependencies": [
            "sc-choice",
            "sc-divider",
            "sc-format-number"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-components-validator",
            "sc-order-bumps"
          ],
          "directDependents": [
            "sc-order-bumps"
          ]
        },
        {
          "tagName": "sc-order-bumps",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderBumps",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "showControl",
              "type": "boolean",
              "attribute": "show-control",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "bumps",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Bump[]",
                "resolved": "Bump[]",
                "references": {
                  "Bump": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "checkout",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-BUMPS",
              "styleStr": null,
              "styleIdentifier": "scOrderBumpsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.scss",
                  "relativePath": "sc-order-bumps.scss",
                  "originalComponentPath": "sc-order-bumps.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": true,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "label",
            "help",
            "class",
            "key",
            "showControl",
            "bump",
            "checkout"
          ],
          "htmlTagNames": [
            "sc-form-control",
            "div",
            "sc-order-bump"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control",
            "sc-order-bump"
          ],
          "directDependencies": [
            "sc-form-control",
            "sc-order-bump"
          ],
          "dependencies": [
            "sc-choice",
            "sc-divider",
            "sc-form-control",
            "sc-format-number",
            "sc-order-bump",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-components-validator"
          ],
          "directDependents": [
            "sc-form-components-validator"
          ]
        },
        {
          "tagName": "sc-order-shipping-address",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderShippingAddress",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Label for the field."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required (defaults to false)"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading."
              },
              "internal": false
            },
            {
              "name": "shippingAddress",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Address",
                "resolved": "Address",
                "references": {
                  "Address": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Holds the customer's billing address"
              },
              "internal": false
            },
            {
              "name": "taxStatus",
              "type": "string",
              "attribute": "tax-status",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "TaxStatus",
                "resolved": "\"address_invalid\" | \"calculated\" | \"disabled\" | \"estimated\" | \"reverse_charged\" | \"tax_registration_not_found\" | \"tax_zone_not_found\"",
                "references": {
                  "TaxStatus": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Tax status of the order"
              },
              "internal": false
            },
            {
              "name": "taxEnabled",
              "type": "boolean",
              "attribute": "tax-enabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tax enabled status of the order"
              },
              "internal": false
            },
            {
              "name": "shippingEnabled",
              "type": "boolean",
              "attribute": "shipping-enabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is shipping enabled for this order?"
              },
              "internal": false
            },
            {
              "name": "full",
              "type": "boolean",
              "attribute": "full",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the full address"
              },
              "internal": false
            },
            {
              "name": "showName",
              "type": "boolean",
              "attribute": "show-name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the name field."
              },
              "internal": false
            },
            {
              "name": "namePlaceholder",
              "type": "string",
              "attribute": "name-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Name or Company Name', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the placeholder fields."
              },
              "internal": false
            },
            {
              "name": "countryPlaceholder",
              "type": "string",
              "attribute": "country-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Country', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "cityPlaceholder",
              "type": "string",
              "attribute": "city-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('City', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "line1Placeholder",
              "type": "string",
              "attribute": "line-1-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Address', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "line2Placeholder",
              "type": "string",
              "attribute": "line-2-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Address Line 2', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "postalCodePlaceholder",
              "type": "string",
              "attribute": "postal-code-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Postal Code/Zip', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "statePlaceholder",
              "type": "string",
              "attribute": "state-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('State/Province/Region', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "defaultCountry",
              "type": "string",
              "attribute": "default-country",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Default country for address"
              },
              "internal": false
            },
            {
              "name": "placeholders",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    name: __('Name or Company Name', 'surecart'),\n    country: __('Country', 'surecart'),\n    city: __('City', 'surecart'),\n    line_1: __('Address', 'surecart'),\n    line_2: __('Address Line 2', 'surecart'),\n    postal_code: __('Postal Code/Zip', 'surecart'),\n    state: __('State/Province/Region', 'surecart'),\n  }",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Placeholder values."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "address"
            }
          ],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scUpdateOrder",
              "method": "scUpdateOrder",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Make a request to update the order."
              },
              "complexType": {
                "original": "{\n    data: Partial<Checkout>;\n    options?: { silent?: boolean };\n  }",
                "resolved": "{ data: Partial<Checkout>; options?: { silent?: boolean; }; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "shippingAddress",
              "methodName": "handleCustomerAddressChange"
            },
            {
              "propName": "shippingEnabled",
              "methodName": "handleRequirementChange"
            },
            {
              "propName": "taxEnabled",
              "methodName": "handleRequirementChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-SHIPPING-ADDRESS",
              "styleStr": null,
              "styleIdentifier": "scOrderShippingAddressStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.scss",
                  "relativePath": "sc-order-shipping-address.scss",
                  "originalComponentPath": "sc-order-shipping-address.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "exportparts",
            "ref",
            "label",
            "placeholders",
            "required",
            "loading",
            "address",
            "show-name",
            "onScChangeAddress"
          ],
          "htmlTagNames": [
            "sc-address",
            "sc-compact-address"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-address",
            "sc-compact-address"
          ],
          "directDependencies": [
            "sc-address",
            "sc-compact-address"
          ],
          "dependencies": [
            "sc-address",
            "sc-block-ui",
            "sc-compact-address",
            "sc-dropdown",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-select",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-components-validator"
          ],
          "directDependents": [
            "sc-form-components-validator"
          ]
        },
        {
          "tagName": "sc-order-tax-id-input",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderTaxIdInput",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Partial<Checkout>",
                "resolved": "{ id?: string; status?: \"draft\" | \"paid\" | \"canceled\" | \"finalized\" | \"payment_intent_canceled\" | \"payment_failed\" | \"processing\"; staged_payment_intents?: { object: \"list\"; pagination: Pagination; data: PaymentIntent[]; }; abandoned_checkout_enabled?: boolean; bump_amount?: number; payment_method_required?: boolean; manual_payment?: boolean; manual_payment_method?: string | ManualPaymentMethod; reusable_payment_method_required?: boolean; number?: string; amount_due?: number; trial_amount?: number; charge?: string | Charge; name?: string; email?: string; live_mode?: boolean; currency?: string; total_amount?: number; subtotal_amount?: number; full_amount?: number; proration_amount?: number; total_savings_amount?: number; applied_balance_amount?: number; discounts?: number; tax_enabled?: boolean; tax_amount?: number; email_exists?: boolean; tax_inclusive_amount?: number; tax_exclusive_amount?: number; tax_status?: \"disabled\" | \"address_invalid\" | \"estimated\" | \"calculated\"; tax_label?: string; tax_percent?: number; line_items?: lineItems; recommended_bumps?: { object: \"list\"; pagination: Pagination; data: Bump[]; }; metadata?: any; payment_intent?: PaymentIntent; payment_method?: PaymentMethod; order?: string | Order; customer?: string | Customer; subscriptions?: { object: \"list\"; pagination: Pagination; data: Subscription[]; }; purchases?: { object: \"list\"; pagination: Pagination; data: Purchase[]; }; discount_amount?: number; discount?: DiscountResponse; billing_address?: string | Address; shipping_address?: string | Address; shipping_enabled?: boolean; processor_data?: ProcessorData; tax_identifier?: { number: string; number_type: string; }; url?: string; created_at?: number; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The order"
              },
              "internal": false
            },
            {
              "name": "show",
              "type": "boolean",
              "attribute": "show",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Force show the field."
              },
              "internal": false
            },
            {
              "name": "taxIdentifier",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "TaxIdentifier",
                "resolved": "TaxIdentifier",
                "references": {
                  "TaxIdentifier": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Tax identifier"
              },
              "internal": false
            },
            {
              "name": "taxProtocol",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "TaxProtocol",
                "resolved": "TaxProtocol",
                "references": {
                  "TaxProtocol": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The tax protocol."
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this busy"
              },
              "internal": false
            },
            {
              "name": "otherLabel",
              "type": "string",
              "attribute": "other-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Other zones label"
              },
              "internal": false
            },
            {
              "name": "caGstLabel",
              "type": "string",
              "attribute": "ca-gst-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "GST zone label"
              },
              "internal": false
            },
            {
              "name": "auAbnLabel",
              "type": "string",
              "attribute": "au-abn-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "AU zone label"
              },
              "internal": false
            },
            {
              "name": "gbVatLabel",
              "type": "string",
              "attribute": "gb-vat-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "UK zone label"
              },
              "internal": false
            },
            {
              "name": "euVatLabel",
              "type": "string",
              "attribute": "eu-vat-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "EU zone label"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scUpdateOrder",
              "method": "scUpdateOrder",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Make a request to update the order."
              },
              "complexType": {
                "original": "{\n    data: Partial<Checkout>;\n    options?: { silent?: boolean };\n  }",
                "resolved": "{ data: Partial<Checkout>; options?: { silent?: boolean; }; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scError",
              "method": "scError",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Error event"
              },
              "complexType": {
                "original": "ResponseError",
                "resolved": "ResponseError",
                "references": {
                  "ResponseError": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-TAX-ID-INPUT",
              "styleStr": null,
              "styleIdentifier": "scOrderTaxIdInputStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.css",
                  "relativePath": "sc-order-tax-id-input.css",
                  "originalComponentPath": "sc-order-tax-id-input.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "show",
            "number",
            "type",
            "country",
            "status",
            "loading",
            "onScChange",
            "otherLabel",
            "caGstLabel",
            "auAbnLabel",
            "gbVatLabel",
            "euVatLabel"
          ],
          "htmlTagNames": [
            "sc-tax-id-input"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tax-id-input"
          ],
          "directDependencies": [
            "sc-tax-id-input"
          ],
          "dependencies": [
            "sc-button",
            "sc-dropdown",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-spinner",
            "sc-tax-id-input",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout",
            "sc-form-components-validator"
          ],
          "directDependents": [
            "sc-form-components-validator"
          ]
        }
      ],
      "entryKey": "sc-compact-address.sc-line-item-tax.sc-order-bump.sc-order-bumps.sc-order-shipping-address.sc-order-tax-id-input.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-line-item-total",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLineItemTotal",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "total",
              "type": "string",
              "attribute": "total",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'total'",
              "complexType": {
                "original": "'total' | 'subtotal'",
                "resolved": "\"subtotal\" | \"total\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'large' | 'medium'",
                "resolved": "\"large\" | \"medium\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LINE-ITEM-TOTAL",
              "styleStr": null,
              "styleIdentifier": "scLineItemTotalStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-item-total/sc-line-item-total.scss",
                  "relativePath": "sc-line-item-total.scss",
                  "originalComponentPath": "sc-line-item-total.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-item-total/sc-line-item-total.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/line-item-total/sc-line-item-total.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "slot",
            "style",
            "class",
            "name",
            "order",
            "total",
            "type",
            "currency",
            "value"
          ],
          "htmlTagNames": [
            "sc-line-item",
            "sc-skeleton",
            "div",
            "span",
            "slot",
            "sc-total",
            "sc-format-number"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-line-item",
            "sc-skeleton",
            "sc-total",
            "sc-format-number"
          ],
          "directDependencies": [
            "sc-line-item",
            "sc-skeleton",
            "sc-total",
            "sc-format-number"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-line-item",
            "sc-skeleton",
            "sc-total"
          ],
          "dependents": [
            "sc-order-confirmation-details",
            "sc-order-confirmation-totals"
          ],
          "directDependents": [
            "sc-order-confirmation-totals"
          ]
        }
      ],
      "entryKey": "sc-line-item-total.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-payment-method-choice",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPaymentMethodChoice",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "methodId",
              "type": "string",
              "attribute": "method-id",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The method id"
              },
              "internal": false
            },
            {
              "name": "processorId",
              "type": "string",
              "attribute": "processor-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The processor ID"
              },
              "internal": false
            },
            {
              "name": "isManual",
              "type": "boolean",
              "attribute": "is-manual",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this a manual processor"
              },
              "internal": false
            },
            {
              "name": "card",
              "type": "boolean",
              "attribute": "card",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show this in a card?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYMENT-METHOD-CHOICE",
              "styleStr": null,
              "styleIdentifier": "scPaymentMethodChoiceStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/processors/sc-payment-method-choice/sc-payment-method-choice.css",
                  "relativePath": "sc-payment-method-choice.css",
                  "originalComponentPath": "sc-payment-method-choice.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/processors/sc-payment-method-choice/sc-payment-method-choice.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/processors/sc-payment-method-choice/sc-payment-method-choice.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "show-control",
            "borderless",
            "open",
            "onScShow",
            "name",
            "slot"
          ],
          "htmlTagNames": [
            "slot",
            "sc-card"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-card"
          ],
          "directDependencies": [
            "sc-card"
          ],
          "dependencies": [
            "sc-card"
          ],
          "dependents": [
            "sc-checkout-mollie-payment",
            "sc-payment"
          ],
          "directDependents": [
            "sc-checkout-mollie-payment",
            "sc-payment"
          ]
        },
        {
          "tagName": "sc-payment-selected",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPaymentSelected",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "iconName",
              "type": "string",
              "attribute": "icon-name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYMENT-SELECTED",
              "styleStr": null,
              "styleIdentifier": "scPaymentSelectedStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/payment-selected/sc-payment-selected.scss",
                  "relativePath": "sc-payment-selected.scss",
                  "originalComponentPath": "sc-payment-selected.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "divider - The divider."
              },
              {
                "name": "part",
                "text": "divider__line - The divider line."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/payment-selected/sc-payment-selected.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/payment-selected/sc-payment-selected.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "name",
            "style",
            "exportparts",
            "viewBox",
            "fill",
            "xmlns",
            "role",
            "opacity",
            "fill-rule",
            "clip-rule",
            "d"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "sc-divider",
            "svg",
            "path"
          ],
          "htmlParts": [
            "base",
            "instructions",
            "icon",
            "text"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-divider"
          ],
          "directDependencies": [
            "sc-divider"
          ],
          "dependencies": [
            "sc-divider"
          ],
          "dependents": [
            "sc-checkout-mollie-payment",
            "sc-mollie-add-method",
            "sc-payment"
          ],
          "directDependents": [
            "sc-checkout-mollie-payment",
            "sc-mollie-add-method",
            "sc-payment"
          ]
        }
      ],
      "entryKey": "sc-payment-method-choice.sc-payment-selected.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-purchase-downloads-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPurchaseDownloadsList",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "allLink",
              "type": "string",
              "attribute": "all-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "busy",
              "type": "boolean",
              "attribute": "busy",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "requestNonce",
              "type": "string",
              "attribute": "request-nonce",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "string",
              "attribute": "error",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "purchases",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<Purchase>",
                "resolved": "Purchase[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "Purchase": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PURCHASE-DOWNLOADS-LIST",
              "styleStr": null,
              "styleIdentifier": "scPurchaseDownloadsListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/purchase-downloads-list/sc-purchase-downloads-list.scss",
                  "relativePath": "sc-purchase-downloads-list.scss",
                  "originalComponentPath": "sc-purchase-downloads-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/purchase-downloads-list/sc-purchase-downloads-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/purchase-downloads-list/sc-purchase-downloads-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": true,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "name",
            "icon",
            "no-padding",
            "mobile-size",
            "href",
            "key",
            "class",
            "value",
            "slot",
            "error",
            "type"
          ],
          "htmlTagNames": [
            "div",
            "sc-divider",
            "slot",
            "sc-empty",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-spacing",
            "strong",
            "sc-format-bytes",
            "sc-icon",
            "sc-dashboard-module",
            "span",
            "sc-button",
            "sc-block-ui"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-divider",
            "sc-empty",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-spacing",
            "sc-format-bytes",
            "sc-icon",
            "sc-dashboard-module",
            "sc-button",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-divider",
            "sc-empty",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-skeleton",
            "sc-spacing",
            "sc-format-bytes",
            "sc-icon",
            "sc-dashboard-module",
            "sc-button",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-alert",
            "sc-block-ui",
            "sc-button",
            "sc-card",
            "sc-dashboard-module",
            "sc-divider",
            "sc-empty",
            "sc-format-bytes",
            "sc-icon",
            "sc-skeleton",
            "sc-spacing",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row"
          ],
          "dependents": [
            "sc-dashboard-downloads-list",
            "sc-order"
          ],
          "directDependents": [
            "sc-dashboard-downloads-list",
            "sc-order"
          ]
        },
        {
          "tagName": "sc-spacing",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSpacing",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SPACING",
              "styleStr": null,
              "styleIdentifier": "scSpacingStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/spacing/sc-spacing.scss",
                  "relativePath": "sc-spacing.scss",
                  "originalComponentPath": "sc-spacing.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/spacing/sc-spacing.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/spacing/sc-spacing.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-dashboard-downloads-list",
            "sc-order",
            "sc-purchase-downloads-list"
          ],
          "directDependents": [
            "sc-order",
            "sc-purchase-downloads-list"
          ]
        }
      ],
      "entryKey": "sc-purchase-downloads-list.sc-spacing.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-switch",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSwitch",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The switch's name attribute."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The switch's value attribute."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the switch."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the switch a required field."
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the switch in a checked state."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
              },
              "internal": false
            },
            {
              "name": "reversed",
              "type": "boolean",
              "attribute": "reversed",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "edit",
              "type": "boolean",
              "attribute": "edit",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true as a workaround in the block editor to focus on the content."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasDescription"
            },
            {
              "name": "hasFocus"
            }
          ],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's checked state changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "checked",
              "methodName": "handleCheckedChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SWITCH",
              "styleStr": null,
              "styleIdentifier": "scSwitchStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/switch/sc-switch.scss",
                  "relativePath": "sc-switch.scss",
                  "originalComponentPath": "sc-switch.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [
            {
              "name": "--width",
              "docs": "The width of the switch.",
              "annotation": "prop"
            },
            {
              "name": "--height",
              "docs": "The height of the switch.",
              "annotation": "prop"
            },
            {
              "name": "--thumb-size",
              "docs": "The size of the thumb.",
              "annotation": "prop"
            }
          ],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/switch/sc-switch.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/switch/sc-switch.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "htmlFor",
            "class",
            "onMouseDown",
            "ref",
            "id",
            "type",
            "role",
            "name",
            "value",
            "checked",
            "disabled",
            "required",
            "aria-checked",
            "aria-labelledby",
            "onClick",
            "onBlur",
            "onFocus",
            "onKeyDown"
          ],
          "htmlTagNames": [
            "span",
            "input",
            "slot"
          ],
          "htmlParts": [
            "base",
            "control",
            "thumb",
            "title",
            "description"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-customer-edit",
            "sc-payment-methods-list"
          ],
          "directDependents": [
            "sc-customer-edit",
            "sc-payment-methods-list"
          ]
        }
      ],
      "entryKey": "sc-switch.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-manual-instructions",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderManualInstructions",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "manualPaymentTitle",
              "type": "string",
              "attribute": "manual-payment-title",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "manualPaymentInstructions",
              "type": "string",
              "attribute": "manual-payment-instructions",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-MANUAL-INSTRUCTIONS",
              "styleStr": null,
              "styleIdentifier": "scOrderManualInstructionsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.css",
                  "relativePath": "sc-order-manual-instructions.css",
                  "originalComponentPath": "sc-order-manual-instructions.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "style",
            "type",
            "open",
            "slot"
          ],
          "htmlTagNames": [
            "sc-alert",
            "span",
            "p"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert"
          ],
          "directDependencies": [
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon"
          ],
          "dependents": [
            "sc-order",
            "sc-order-confirm-components-validator",
            "sc-order-confirmation"
          ],
          "directDependents": [
            "sc-order",
            "sc-order-confirm-components-validator"
          ]
        }
      ],
      "entryKey": "sc-order-manual-instructions.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-subscription-details",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionDetails",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "pendingPrice",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Price",
                "resolved": "Price",
                "references": {
                  "Price": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "hideRenewalText",
              "type": "boolean",
              "attribute": "hide-renewal-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "activationsModal"
            },
            {
              "name": "loading"
            },
            {
              "name": "hasPendingUpdate"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "subscription",
              "methodName": "handleSubscriptionChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-DETAILS",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionDetailsStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-details/sc-subscription-details.css",
                  "relativePath": "sc-subscription-details.css",
                  "originalComponentPath": "sc-subscription-details.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-details/sc-subscription-details.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/dashboard/subscription-details/sc-subscription-details.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "subscription",
            "date",
            "month",
            "day",
            "year",
            "type",
            "currency",
            "value",
            "justifyContent",
            "alignItems",
            "size",
            "style",
            "onClick",
            "class",
            "label",
            "onScRequestClose",
            "open",
            "no-padding",
            "mobileSize"
          ],
          "htmlTagNames": [
            "sc-subscription-status-badge",
            "span",
            "sc-format-date",
            "sc-skeleton",
            "strong",
            "sc-format-number",
            "sc-flex",
            "sc-tag",
            "sc-text",
            "div",
            "slot",
            "sc-dialog",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-subscription-status-badge",
            "sc-format-date",
            "sc-skeleton",
            "sc-format-number",
            "sc-flex",
            "sc-tag",
            "sc-text",
            "sc-dialog",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row"
          ],
          "directDependencies": [
            "sc-subscription-status-badge",
            "sc-format-date",
            "sc-skeleton",
            "sc-format-number",
            "sc-flex",
            "sc-tag",
            "sc-text",
            "sc-dialog",
            "sc-card",
            "sc-stacked-list",
            "sc-stacked-list-row"
          ],
          "dependencies": [
            "sc-button",
            "sc-card",
            "sc-dialog",
            "sc-flex",
            "sc-format-date",
            "sc-format-number",
            "sc-icon",
            "sc-skeleton",
            "sc-spinner",
            "sc-stacked-list",
            "sc-stacked-list-row",
            "sc-subscription-status-badge",
            "sc-tag",
            "sc-text"
          ],
          "dependents": [
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-subscriptions-list"
          ],
          "directDependents": [
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-subscriptions-list"
          ]
        },
        {
          "tagName": "sc-subscription-status-badge",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSubscriptionStatusBadge",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "status",
              "type": "string",
              "attribute": "status",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "SubscriptionStatus",
                "resolved": "\"active\" | \"canceled\" | \"completed\" | \"incomplete\" | \"past_due\" | \"trialing\" | \"unpaid\"",
                "references": {
                  "SubscriptionStatus": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Subscription status"
              },
              "internal": false
            },
            {
              "name": "subscription",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Subscription",
                "resolved": "Subscription",
                "references": {
                  "Subscription": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The tag's status type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tag's size."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style tag with rounded edges."
              },
              "internal": false
            },
            {
              "name": "clearable",
              "type": "boolean",
              "attribute": "clearable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the tag clearable."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SUBSCRIPTION-STATUS-BADGE",
              "styleStr": null,
              "styleIdentifier": "scSubscriptionStatusBadgeStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/subscription-status-badge/sc-subscription-status-badge.css",
                  "relativePath": "sc-subscription-status-badge.css",
                  "originalComponentPath": "sc-subscription-status-badge.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/subscription-status-badge/sc-subscription-status-badge.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/subscription-status-badge/sc-subscription-status-badge.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "date",
            "month",
            "day"
          ],
          "htmlTagNames": [
            "sc-format-date",
            "sc-tag"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-date",
            "sc-tag"
          ],
          "directDependencies": [
            "sc-format-date",
            "sc-tag"
          ],
          "dependencies": [
            "sc-format-date",
            "sc-tag"
          ],
          "dependents": [
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscriptions-list"
          ],
          "directDependents": [
            "sc-subscription",
            "sc-subscription-details"
          ]
        }
      ],
      "entryKey": "sc-subscription-details.sc-subscription-status-badge.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-toggle",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScToggle",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates whether or not the details is open. You can use this in lieu of the show/hide methods."
              },
              "internal": false
            },
            {
              "name": "summary",
              "type": "string",
              "attribute": "summary",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The summary to show in the details header. If you need to display HTML, use the `summary` slot instead."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the details so it can't be toggled."
              },
              "internal": false
            },
            {
              "name": "borderless",
              "type": "boolean",
              "attribute": "borderless",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this a borderless toggle?"
              },
              "internal": false
            },
            {
              "name": "shady",
              "type": "boolean",
              "attribute": "shady",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this a shady"
              },
              "internal": false
            },
            {
              "name": "showControl",
              "type": "boolean",
              "attribute": "show-control",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show a radio control?"
              },
              "internal": false
            },
            {
              "name": "showIcon",
              "type": "boolean",
              "attribute": "show-icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the arrow icon?"
              },
              "internal": false
            },
            {
              "name": "collapsible",
              "type": "boolean",
              "attribute": "collapsible",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Are these collapsible?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scShow",
              "method": "scShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Show the toggle"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scHide",
              "method": "scHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Show the toggle"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TOGGLE",
              "styleStr": null,
              "styleIdentifier": "scToggleStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-toggle/sc-toggle.scss",
                  "relativePath": "sc-toggle.scss",
                  "originalComponentPath": "sc-toggle.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-toggle/sc-toggle.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-toggle/sc-toggle.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "ref",
            "id",
            "role",
            "aria-expanded",
            "aria-controls",
            "aria-disabled",
            "tabindex",
            "onClick",
            "onKeyDown",
            "viewBox",
            "stroke",
            "stroke-width",
            "fill",
            "fill-rule",
            "cx",
            "cy",
            "r",
            "name",
            "aria-labelledby"
          ],
          "htmlTagNames": [
            "div",
            "header",
            "span",
            "svg",
            "g",
            "circle",
            "slot",
            "sc-icon"
          ],
          "htmlParts": [
            "base",
            "header",
            "radio",
            "summary",
            "summary-icon",
            "content"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-mollie-add-method",
            "sc-subscription",
            "sc-subscription-next-payment"
          ],
          "directDependents": [
            "sc-mollie-add-method",
            "sc-subscription-next-payment"
          ]
        }
      ],
      "entryKey": "sc-toggle.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-address",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScAddress",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "address",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    country: null,\n    city: null,\n    line_1: null,\n    line_2: null,\n    postal_code: null,\n    state: null,\n  }",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The address."
              },
              "internal": false
            },
            {
              "name": "names",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{\n    name: 'shipping_name',\n    country: 'shipping_country',\n    city: 'shipping_city',\n    line_1: 'shipping_line_1',\n    line_2: 'shipping_line_2',\n    postal_code: 'shipping_postal_code',\n    state: 'shipping_state',\n  }",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "placeholders",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "{}",
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading?"
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this disabled?"
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The label for the field."
              },
              "internal": false
            },
            {
              "name": "showName",
              "type": "boolean",
              "attribute": "show-name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show name field?"
              },
              "internal": false
            },
            {
              "name": "showLine2",
              "type": "boolean",
              "attribute": "show-line-2",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show name field?"
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required?"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "showCity"
            },
            {
              "name": "showPostal"
            },
            {
              "name": "regions"
            },
            {
              "name": "countryChoices"
            }
          ],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChangeAddress",
              "method": "scChangeAddress",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Address change event."
              },
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scInputAddress",
              "method": "scInputAddress",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Address change event."
              },
              "complexType": {
                "original": "Partial<Address>",
                "resolved": "{ name?: string; line_1?: string; line_2?: string; city?: string; state?: string; postal_code?: string; country?: string; constructor?: Function; toString?: () => string; toLocaleString?: () => string; valueOf?: () => Object; hasOwnProperty?: (v: PropertyKey) => boolean; isPrototypeOf?: (v: Object) => boolean; propertyIsEnumerable?: (v: PropertyKey) => boolean; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  },
                  "Address": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "address",
              "methodName": "handleAddressChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ADDRESS",
              "styleStr": null,
              "styleIdentifier": "scAddressStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/address/sc-address.scss",
                  "relativePath": "sc-address.scss",
                  "originalComponentPath": "sc-address.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input__base - The inputs base element."
              },
              {
                "name": "part",
                "text": "select__base - The select boxes base element."
              },
              {
                "name": "part",
                "text": "input - The html input element."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              },
              {
                "name": "part",
                "text": "trigger - The select box trigger."
              },
              {
                "name": "part",
                "text": "panel - The select box panel."
              },
              {
                "name": "part",
                "text": "caret - The select box caret."
              },
              {
                "name": "part",
                "text": "search__base - The select search base."
              },
              {
                "name": "part",
                "text": "search__input - The select search input."
              },
              {
                "name": "part",
                "text": "search__form-control - The select search form control."
              },
              {
                "name": "part",
                "text": "menu__base - The select menu base."
              },
              {
                "name": "part",
                "text": "spinner__base  - The select spinner base."
              },
              {
                "name": "part",
                "text": "empty - The select empty message."
              },
              {
                "name": "part",
                "text": "block-ui - The block ui base component."
              },
              {
                "name": "part",
                "text": "block-ui__content - The block ui content (spinner)."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/address/sc-address.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/address/sc-address.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "label",
            "exportparts",
            "required",
            "value",
            "onScChange",
            "onScInput",
            "autocomplete",
            "placeholder",
            "name",
            "squared-bottom",
            "disabled",
            "choices",
            "search",
            "unselect",
            "squared",
            "squared-top",
            "squared-right",
            "maxlength",
            "squared-left"
          ],
          "htmlTagNames": [
            "div",
            "sc-form-control",
            "sc-input",
            "sc-select",
            "sc-block-ui"
          ],
          "htmlParts": [
            "base",
            "name__input",
            "columns"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control",
            "sc-input",
            "sc-select",
            "sc-block-ui"
          ],
          "directDependencies": [
            "sc-form-control",
            "sc-input",
            "sc-select",
            "sc-block-ui"
          ],
          "dependencies": [
            "sc-block-ui",
            "sc-dropdown",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-select",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-shipping-address"
          ],
          "directDependents": [
            "sc-customer-edit",
            "sc-order-shipping-address"
          ]
        },
        {
          "tagName": "sc-select",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSelectDropdown",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "autocomplete",
              "type": "string",
              "attribute": "autocomplete",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autocomplete attribute."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Placeholder for no value"
              },
              "internal": false
            },
            {
              "name": "searchPlaceholder",
              "type": "string",
              "attribute": "search-placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Placeholder for search"
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "choices",
              "type": "unknown",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "[]",
              "complexType": {
                "original": "Array<ChoiceItem>",
                "resolved": "ChoiceItem[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "ChoiceItem": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "unselect",
              "type": "boolean",
              "attribute": "unselect",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Can we unselect items."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "search",
              "type": "boolean",
              "attribute": "search",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is search enabled?"
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's name attribute."
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Some help text for the input."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "position",
              "type": "string",
              "attribute": "position",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'bottom-right'",
              "complexType": {
                "original": "'bottom-left' | 'bottom-right'",
                "resolved": "\"bottom-left\" | \"bottom-right\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this open"
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "showParentLabel",
              "type": "boolean",
              "attribute": "show-parent-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "hoist",
              "type": "boolean",
              "attribute": "hoist",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squared",
              "type": "boolean",
              "attribute": "squared",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredBottom",
              "type": "boolean",
              "attribute": "squared-bottom",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredTop",
              "type": "boolean",
              "attribute": "squared-top",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredLeft",
              "type": "boolean",
              "attribute": "squared-left",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredRight",
              "type": "boolean",
              "attribute": "squared-right",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            },
            {
              "name": "searchTerm"
            },
            {
              "name": "filteredChoices"
            }
          ],
          "methods": [
            {
              "name": "setCustomValidity",
              "docs": {
                "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "(message: string) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "keydown",
              "method": "handleKeyDown",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scSearch",
              "method": "scSearch",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted whent the components search query changes"
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scOpen",
              "method": "scOpen",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted whent the components search query changes"
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scClose",
              "method": "scClose",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted whent the components search query changes"
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scScrollEnd",
              "method": "scScrollEnd",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the list scrolls to the end."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "searchTerm",
              "methodName": "handleSearchChange"
            },
            {
              "propName": "choices",
              "methodName": "handleSearchChange"
            },
            {
              "propName": "value",
              "methodName": "handleValueChange"
            },
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SELECT",
              "styleStr": null,
              "styleIdentifier": "scSelectStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/select/sc-select.scss",
                  "relativePath": "sc-select.scss",
                  "originalComponentPath": "sc-select.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input - The html input element."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              },
              {
                "name": "part",
                "text": "trigger - The trigger for the dropdown."
              },
              {
                "name": "part",
                "text": "panel - Them panel for the dropdown."
              },
              {
                "name": "part",
                "text": "caret - The caret."
              },
              {
                "name": "part",
                "text": "search___base - The search base wrapper."
              },
              {
                "name": "part",
                "text": "search__input - The search input element."
              },
              {
                "name": "part",
                "text": "search__form-control - The search form control wrapper."
              },
              {
                "name": "part",
                "text": "menu__base - The menu base."
              },
              {
                "name": "part",
                "text": "spinner__base - The spinner base."
              },
              {
                "name": "part",
                "text": "empty - The empty message."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/select/sc-select.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/select/sc-select.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": true,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "src",
            "alt",
            "slot",
            "class",
            "name",
            "key",
            "checked",
            "value",
            "onClick",
            "disabled",
            "part",
            "exportparts",
            "size",
            "required",
            "label",
            "help",
            "inputId",
            "helpId",
            "labelId",
            "onBlur",
            "onFocus",
            "ref",
            "open",
            "position",
            "hoist",
            "style",
            "onScShow",
            "onScHide",
            "placeholder",
            "onScInput",
            "clearable",
            "onScroll"
          ],
          "htmlTagNames": [
            "img",
            "sc-icon",
            "sc-menu-label",
            "sc-menu-item",
            "span",
            "div",
            "sc-form-control",
            "input",
            "sc-dropdown",
            "sc-input",
            "sc-spinner",
            "sc-menu",
            "slot"
          ],
          "htmlParts": [
            "base",
            "search",
            "empty"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon",
            "sc-menu-label",
            "sc-menu-item",
            "sc-form-control",
            "sc-dropdown",
            "sc-input",
            "sc-spinner",
            "sc-menu"
          ],
          "directDependencies": [
            "sc-icon",
            "sc-menu-label",
            "sc-menu-item",
            "sc-form-control",
            "sc-dropdown",
            "sc-input",
            "sc-spinner",
            "sc-menu"
          ],
          "dependencies": [
            "sc-dropdown",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-menu-label",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-address",
            "sc-checkout",
            "sc-compact-address",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-shipping-address"
          ],
          "directDependents": [
            "sc-address",
            "sc-compact-address"
          ]
        },
        {
          "tagName": "sc-tax-id-input",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTaxIdInput",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "country",
              "type": "string",
              "attribute": "country",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The country code."
              },
              "internal": false
            },
            {
              "name": "show",
              "type": "boolean",
              "attribute": "show",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Force show the field."
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "'other'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Type of tax id"
              },
              "internal": false
            },
            {
              "name": "number",
              "type": "string",
              "attribute": "number",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "null",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tax ID Number"
              },
              "internal": false
            },
            {
              "name": "status",
              "type": "string",
              "attribute": "status",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'unknown'",
              "complexType": {
                "original": "'valid' | 'invalid' | 'unknown'",
                "resolved": "\"invalid\" | \"unknown\" | \"valid\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The status"
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this loading?"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Help text."
              },
              "internal": false
            },
            {
              "name": "otherLabel",
              "type": "string",
              "attribute": "other-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('Tax ID', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Other zones label"
              },
              "internal": false
            },
            {
              "name": "caGstLabel",
              "type": "string",
              "attribute": "ca-gst-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('GST Number', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "GST zone label"
              },
              "internal": false
            },
            {
              "name": "auAbnLabel",
              "type": "string",
              "attribute": "au-abn-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('ABN Number', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "AU zone label"
              },
              "internal": false
            },
            {
              "name": "gbVatLabel",
              "type": "string",
              "attribute": "gb-vat-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('UK VAT', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "UK zone label"
              },
              "internal": false
            },
            {
              "name": "euVatLabel",
              "type": "string",
              "attribute": "eu-vat-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "__('EU VAT', 'surecart')",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "EU zone label"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Make a request to update the order."
              },
              "complexType": {
                "original": "{ number: string; number_type: string }",
                "resolved": "{ number: string; number_type: string; }",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Make a request to update the order."
              },
              "complexType": {
                "original": "Partial<{ number: string; number_type: string }>",
                "resolved": "{ number?: string; number_type?: string; }",
                "references": {
                  "Partial": {
                    "location": "global"
                  }
                }
              },
              "internal": false
            },
            {
              "name": "scInputType",
              "method": "scInputType",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Change the Type"
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scSetState",
              "method": "scSetState",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Set the checkout state."
              },
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "country",
              "methodName": "handleCountryChange"
            },
            {
              "propName": "otherLabel",
              "methodName": "onLabelChange"
            },
            {
              "propName": "caGstLabel",
              "methodName": "onLabelChange"
            },
            {
              "propName": "auAbnLabel",
              "methodName": "onLabelChange"
            },
            {
              "propName": "gbVatLabel",
              "methodName": "onLabelChange"
            },
            {
              "propName": "euVatLabel",
              "methodName": "onLabelChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TAX-ID-INPUT",
              "styleStr": null,
              "styleIdentifier": "scTaxIdInputStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tax-id-input/sc-tax-id-input.css",
                  "relativePath": "sc-tax-id-input.css",
                  "originalComponentPath": "sc-tax-id-input.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tax-id-input/sc-tax-id-input.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tax-id-input/sc-tax-id-input.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "slot",
            "style",
            "value",
            "label",
            "onScInput",
            "onScChange",
            "position",
            "type",
            "caret",
            "loading",
            "onClick",
            "checked"
          ],
          "htmlTagNames": [
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-dropdown",
            "sc-button",
            "sc-menu",
            "sc-menu-item"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-dropdown",
            "sc-button",
            "sc-menu",
            "sc-menu-item"
          ],
          "directDependencies": [
            "sc-icon",
            "sc-input",
            "sc-spinner",
            "sc-dropdown",
            "sc-button",
            "sc-menu",
            "sc-menu-item"
          ],
          "dependencies": [
            "sc-button",
            "sc-dropdown",
            "sc-form-control",
            "sc-icon",
            "sc-input",
            "sc-menu",
            "sc-menu-item",
            "sc-spinner",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-checkout",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-tax-id-input"
          ],
          "directDependents": [
            "sc-customer-edit",
            "sc-order-tax-id-input"
          ]
        }
      ],
      "entryKey": "sc-address.sc-select.sc-tax-id-input.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-format-bytes",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormatBytes",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "locale",
              "type": "string",
              "attribute": "locale",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The locale to use when formatting the number."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "number",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The number to format in bytes."
              },
              "internal": false
            },
            {
              "name": "unit",
              "type": "string",
              "attribute": "unit",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'byte'",
              "complexType": {
                "original": "'byte' | 'bit'",
                "resolved": "\"bit\" | \"byte\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The unit to display."
              },
              "internal": false
            },
            {
              "name": "display",
              "type": "string",
              "attribute": "display",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'short'",
              "complexType": {
                "original": "'long' | 'short' | 'narrow'",
                "resolved": "\"long\" | \"narrow\" | \"short\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Determines how to display the result, e.g. \"100 bytes\", \"100 b\", or \"100b\"."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-FORMAT-BYTES",
              "styleStr": null,
              "styleIdentifier": "scFormatBytesStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-bytes/sc-format-bytes.css",
                  "relativePath": "sc-format-bytes.css",
                  "originalComponentPath": "sc-format-bytes.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-bytes/sc-format-bytes.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-bytes/sc-format-bytes.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": false,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-dashboard-downloads-list",
            "sc-downloads-list",
            "sc-order",
            "sc-purchase-downloads-list"
          ],
          "directDependents": [
            "sc-downloads-list",
            "sc-purchase-downloads-list"
          ]
        }
      ],
      "entryKey": "sc-format-bytes.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-line-items-provider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLineItemsProvider",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Order Object"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "syncItems"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scToggleLineItem",
              "method": "handleLineItemToggle",
              "capture": false,
              "passive": false
            },
            {
              "name": "scRemoveLineItem",
              "method": "handleLineItemRemove",
              "capture": false,
              "passive": false
            },
            {
              "name": "scAddLineItem",
              "method": "handleLineItemAdd",
              "capture": false,
              "passive": false
            },
            {
              "name": "scUpdateLineItem",
              "method": "handleLineItemUpdate",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scUpdateLineItems",
              "method": "scUpdateLineItems",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Update line items event"
              },
              "complexType": {
                "original": "Array<LineItemData>",
                "resolved": "LineItemData[]",
                "references": {
                  "Array": {
                    "location": "global"
                  },
                  "LineItemData": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "syncItems",
              "methodName": "syncItemsHandler"
            }
          ],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/line-items-provider/sc-line-items-provider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/providers/line-items-provider/sc-line-items-provider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-cart",
            "sc-cart-session-provider",
            "sc-checkout",
            "sc-session-provider"
          ],
          "directDependents": [
            "sc-cart-session-provider",
            "sc-session-provider"
          ]
        }
      ],
      "entryKey": "sc-line-items-provider.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-order-status-badge",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScOrderStatusBadge",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "status",
              "type": "string",
              "attribute": "status",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "OrderStatus",
                "resolved": "\"canceled\" | \"paid\" | \"payment_failed\" | \"processing\" | \"void\"",
                "references": {
                  "OrderStatus": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The tag's statux type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tag's size."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style tag with rounded edges."
              },
              "internal": false
            },
            {
              "name": "clearable",
              "type": "boolean",
              "attribute": "clearable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the tag clearable."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ORDER-STATUS-BADGE",
              "styleStr": null,
              "styleIdentifier": "scOrderStatusBadgeStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/order-status-badge/sc-order-status-badge.css",
                  "relativePath": "sc-order-status-badge.css",
                  "originalComponentPath": "sc-order-status-badge.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/order-status-badge/sc-order-status-badge.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/order-status-badge/sc-order-status-badge.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type"
          ],
          "htmlTagNames": [
            "sc-tag"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tag"
          ],
          "directDependencies": [
            "sc-tag"
          ],
          "dependencies": [
            "sc-tag"
          ],
          "dependents": [
            "sc-invoices-list",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-orders-list"
          ],
          "directDependents": [
            "sc-invoices-list",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-orders-list"
          ]
        }
      ],
      "entryKey": "sc-order-status-badge.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-price-input",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPriceInput",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's name attribute."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "clearable",
              "type": "boolean",
              "attribute": "clearable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Adds a clear button when the input is populated."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "minlength",
              "type": "number",
              "attribute": "minlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The minimum length of input that will be considered valid."
              },
              "internal": false
            },
            {
              "name": "maxlength",
              "type": "number",
              "attribute": "maxlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The maximum length of input that will be considered valid."
              },
              "internal": false
            },
            {
              "name": "max",
              "type": "number",
              "attribute": "max",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's maximum value."
              },
              "internal": false
            },
            {
              "name": "min",
              "type": "number",
              "attribute": "min",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's minimum value."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            },
            {
              "name": "currencyCode",
              "type": "string",
              "attribute": "currency-code",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "3 letter currency code for input"
              },
              "internal": false
            },
            {
              "name": "showCode",
              "type": "boolean",
              "attribute": "show-code",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the currency code with the input"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            },
            {
              "name": "triggerFocus",
              "docs": {
                "text": "Sets focus on the input.",
                "tags": []
              },
              "complexType": {
                "signature": "(options?: FocusOptions) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FocusOptions": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "setCustomValidity",
              "docs": {
                "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "(message: string) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerBlur",
              "docs": {
                "text": "Removes focus from the input.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "hasFocus",
              "methodName": "handleFocusChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PRICE-INPUT",
              "styleStr": null,
              "styleIdentifier": "scPriceInputStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/price-input/sc-price-input.css",
                  "relativePath": "sc-price-input.css",
                  "originalComponentPath": "sc-price-input.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input - The html input element."
              },
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "prefix - Used to prepend an icon or element to the input."
              },
              {
                "name": "part",
                "text": "suffix - Used to prepend an icon or element to the input."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/price-input/sc-price-input.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/price-input/sc-price-input.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "exportparts",
            "size",
            "label",
            "showLabel",
            "help",
            "ref",
            "type",
            "name",
            "disabled",
            "readonly",
            "required",
            "placeholder",
            "minlength",
            "maxlength",
            "min",
            "step",
            "max",
            "autofocus",
            "inputmode",
            "onScChange",
            "onScInput",
            "onScBlur",
            "onScFocus",
            "value",
            "style",
            "slot"
          ],
          "htmlTagNames": [
            "sc-input",
            "span",
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-input"
          ],
          "directDependencies": [
            "sc-input"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-input",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-custom-order-price-input",
            "sc-donation-choices",
            "sc-product-selected-price",
            "sc-subscription-ad-hoc-confirm"
          ],
          "directDependents": [
            "sc-custom-order-price-input",
            "sc-donation-choices",
            "sc-product-selected-price",
            "sc-subscription-ad-hoc-confirm"
          ]
        }
      ],
      "entryKey": "sc-price-input.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-pagination",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPagination",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "page",
              "type": "number",
              "attribute": "page",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "perPage",
              "type": "number",
              "attribute": "per-page",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "total",
              "type": "number",
              "attribute": "total",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "totalShowing",
              "type": "number",
              "attribute": "total-showing",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "totalPages",
              "type": "number",
              "attribute": "total-pages",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasNextPage"
            },
            {
              "name": "hasPreviousPage"
            },
            {
              "name": "from"
            },
            {
              "name": "to"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scPrevPage",
              "method": "scPrevPage",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scNextPage",
              "method": "scNextPage",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "total",
              "methodName": "handlePaginationChange"
            },
            {
              "propName": "totalPages",
              "methodName": "handlePaginationChange"
            },
            {
              "propName": "page",
              "methodName": "handlePaginationChange"
            },
            {
              "propName": "perPage",
              "methodName": "handlePaginationChange"
            },
            {
              "propName": "totalShowing",
              "methodName": "handlePaginationChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAGINATION",
              "styleStr": null,
              "styleIdentifier": "scPaginationStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/pagination/sc-pagination.css",
                  "relativePath": "sc-pagination.css",
                  "originalComponentPath": "sc-pagination.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/pagination/sc-pagination.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/pagination/sc-pagination.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "onClick",
            "disabled",
            "size"
          ],
          "htmlTagNames": [
            "sc-flex",
            "div",
            "sc-button"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-flex",
            "sc-button"
          ],
          "directDependencies": [
            "sc-flex",
            "sc-button"
          ],
          "dependencies": [
            "sc-button",
            "sc-flex",
            "sc-spinner"
          ],
          "dependents": [
            "sc-charges-list",
            "sc-dashboard-downloads-list",
            "sc-invoices-list",
            "sc-orders-list",
            "sc-subscriptions-list"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-dashboard-downloads-list",
            "sc-invoices-list",
            "sc-orders-list",
            "sc-subscriptions-list"
          ]
        }
      ],
      "entryKey": "sc-pagination.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-total",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTotal",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "total",
              "type": "string",
              "attribute": "total",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'amount_due'",
              "complexType": {
                "original": "'total' | 'subtotal' | 'amount_due'",
                "resolved": "\"amount_due\" | \"subtotal\" | \"total\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "order",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Checkout",
                "resolved": "Checkout",
                "references": {
                  "Checkout": {
                    "location": "import",
                    "path": "../../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TOTAL",
              "styleStr": null,
              "styleIdentifier": "scTotalStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/total/sc-total.css",
                  "relativePath": "sc-total.css",
                  "originalComponentPath": "sc-total.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/total/sc-total.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/controllers/checkout-form/total/sc-total.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "type",
            "currency",
            "value"
          ],
          "htmlTagNames": [
            "sc-format-number"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-number"
          ],
          "directDependencies": [
            "sc-format-number"
          ],
          "dependencies": [
            "sc-format-number"
          ],
          "dependents": [
            "sc-line-item-total",
            "sc-order-confirmation-details",
            "sc-order-confirmation-totals",
            "sc-order-submit",
            "sc-order-summary"
          ],
          "directDependents": [
            "sc-line-item-total",
            "sc-order-submit",
            "sc-order-summary"
          ]
        }
      ],
      "entryKey": "sc-total.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-menu-label",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScMenuLabel",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-MENU-LABEL",
              "styleStr": null,
              "styleIdentifier": "scMenuLabelStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-label/sc-menu-label.scss",
                  "relativePath": "sc-menu-label.scss",
                  "originalComponentPath": "sc-menu-label.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-label/sc-menu-label.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/menu-label/sc-menu-label.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-checkout",
            "sc-compact-address",
            "sc-customer-edit",
            "sc-form-components-validator",
            "sc-order-shipping-address",
            "sc-select"
          ],
          "directDependents": [
            "sc-select"
          ]
        }
      ],
      "entryKey": "sc-menu-label.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-cc-logo",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCcLogo",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "brand",
              "type": "string",
              "attribute": "brand",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CC-LOGO",
              "styleStr": null,
              "styleIdentifier": "scCcLogoStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/cc-logo/sc-cc-logo.css",
                  "relativePath": "sc-cc-logo.css",
                  "originalComponentPath": "sc-cc-logo.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/cc-logo/sc-cc-logo.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/cc-logo/sc-cc-logo.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "style",
            "class",
            "part"
          ],
          "htmlTagNames": [
            "sc-icon",
            "div"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-order",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-payment-method"
          ]
        },
        {
          "tagName": "sc-payment-method",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScPaymentMethod",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "paymentMethod",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "PaymentMethod",
                "resolved": "PaymentMethod",
                "references": {
                  "PaymentMethod": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "full",
              "type": "boolean",
              "attribute": "full",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "externalLink",
              "type": "string",
              "attribute": "external-link",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "externalLinkTooltipText",
              "type": "string",
              "attribute": "external-link-tooltip-text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PAYMENT-METHOD",
              "styleStr": null,
              "styleIdentifier": "scPaymentMethodStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-payment-method/sc-payment-method.css",
                  "relativePath": "sc-payment-method.css",
                  "originalComponentPath": "sc-payment-method.css"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-payment-method/sc-payment-method.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-payment-method/sc-payment-method.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "text",
            "type",
            "style",
            "size",
            "href",
            "target",
            "name",
            "class",
            "part",
            "exportparts",
            "pill",
            "brand",
            "truncate"
          ],
          "htmlTagNames": [
            "sc-tooltip",
            "sc-button",
            "sc-icon",
            "div",
            "span",
            "sc-tag",
            "sc-cc-logo",
            "sc-text"
          ],
          "htmlParts": [
            "bank",
            "instrument",
            "instrument",
            "instrument",
            "card",
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tooltip",
            "sc-button",
            "sc-icon",
            "sc-tag",
            "sc-cc-logo",
            "sc-text"
          ],
          "directDependencies": [
            "sc-tooltip",
            "sc-button",
            "sc-icon",
            "sc-tag",
            "sc-cc-logo",
            "sc-text"
          ],
          "dependencies": [
            "sc-button",
            "sc-cc-logo",
            "sc-icon",
            "sc-spinner",
            "sc-tag",
            "sc-text",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-order",
            "sc-payment-methods-list",
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-order",
            "sc-payment-methods-list",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-cc-logo.sc-payment-method.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-product-line-item",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScProductLineItem",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "imageUrl",
              "type": "string",
              "attribute": "image-url",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Url for the product image"
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Product name"
              },
              "internal": false
            },
            {
              "name": "quantity",
              "type": "number",
              "attribute": "quantity",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Quantity"
              },
              "internal": false
            },
            {
              "name": "amount",
              "type": "number",
              "attribute": "amount",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Product monetary amount"
              },
              "internal": false
            },
            {
              "name": "fees",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "Fee[]",
                "resolved": "Fee[]",
                "references": {
                  "Fee": {
                    "location": "import",
                    "path": "../../../types"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "Product line item fees."
              },
              "internal": false
            },
            {
              "name": "setupFeeTrialEnabled",
              "type": "boolean",
              "attribute": "setup-fee-trial-enabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the setup fee not included in the free trial?"
              },
              "internal": false
            },
            {
              "name": "scratchAmount",
              "type": "number",
              "attribute": "scratch-amount",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The line item scratch amount"
              },
              "internal": false
            },
            {
              "name": "currency",
              "type": "string",
              "attribute": "currency",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency for the product"
              },
              "internal": false
            },
            {
              "name": "interval",
              "type": "string",
              "attribute": "interval",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Recurring interval (i.e. monthly, once, etc.)"
              },
              "internal": false
            },
            {
              "name": "trialDurationDays",
              "type": "number",
              "attribute": "trial-duration-days",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Trial duration days"
              },
              "internal": false
            },
            {
              "name": "removable",
              "type": "boolean",
              "attribute": "removable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the line item removable"
              },
              "internal": false
            },
            {
              "name": "editable",
              "type": "boolean",
              "attribute": "editable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Can we select the quantity"
              },
              "internal": false
            },
            {
              "name": "max",
              "type": "number",
              "attribute": "max",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "100",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The max allowed."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scUpdateQuantity",
              "method": "scUpdateQuantity",
              "bubbles": false,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the quantity changes."
              },
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scRemove",
              "method": "scRemove",
              "bubbles": false,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the quantity changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-PRODUCT-LINE-ITEM",
              "styleStr": null,
              "styleIdentifier": "scProductLineItemStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/product-line-item/sc-product-line-item.scss",
                  "relativePath": "sc-product-line-item.scss",
                  "originalComponentPath": "sc-product-line-item.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "text - The text wrapper."
              },
              {
                "name": "part",
                "text": "title - The product title."
              },
              {
                "name": "part",
                "text": "static-quantity - The statically displayed quantity."
              },
              {
                "name": "part",
                "text": "quantity__base - The quantity base wrapper."
              },
              {
                "name": "part",
                "text": "input - The input control."
              },
              {
                "name": "part",
                "text": "minus - The minus control."
              },
              {
                "name": "part",
                "text": "minus-icon - The minus icon."
              },
              {
                "name": "part",
                "text": "plus - The plus control."
              },
              {
                "name": "part",
                "text": "plus-icon - The plus icon."
              },
              {
                "name": "part",
                "text": "remove-icon__base - The remove icon base wrapper."
              },
              {
                "name": "part",
                "text": "price - The price wrapper."
              },
              {
                "name": "part",
                "text": "price__amount - The price amount."
              },
              {
                "name": "part",
                "text": "price__description - The price description."
              },
              {
                "name": "part",
                "text": "suffix - The suffix items."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/product-line-item/sc-product-line-item.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/product-line-item/sc-product-line-item.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "type",
            "currency",
            "value",
            "src",
            "name",
            "max",
            "exportparts",
            "clickEl",
            "quantity",
            "onScChange",
            "onClick",
            "slot"
          ],
          "htmlTagNames": [
            "div",
            "sc-format-number",
            "img",
            "slot",
            "sc-quantity-select",
            "span",
            "sc-icon",
            "sc-line-item"
          ],
          "htmlParts": [
            "price",
            "price__amount",
            "price__amount",
            "price__description",
            "price__scratch",
            "price__amount",
            "price",
            "price__amount",
            "price__description",
            "base",
            "product-line-item",
            "image",
            "text",
            "title",
            "static-quantity",
            "suffix"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-format-number",
            "sc-quantity-select",
            "sc-icon",
            "sc-line-item"
          ],
          "directDependencies": [
            "sc-format-number",
            "sc-quantity-select",
            "sc-icon",
            "sc-line-item"
          ],
          "dependencies": [
            "sc-format-number",
            "sc-icon",
            "sc-line-item",
            "sc-quantity-select"
          ],
          "dependents": [
            "sc-line-items",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-line-items",
            "sc-order",
            "sc-order-confirmation-line-items",
            "sc-subscription-next-payment",
            "sc-upcoming-invoice"
          ]
        },
        {
          "tagName": "sc-quantity-select",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScQuantitySelect",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "clickEl",
              "type": "unknown",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": true,
              "complexType": {
                "original": "HTMLElement",
                "resolved": "HTMLElement",
                "references": {
                  "HTMLElement": {
                    "location": "global"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "max",
              "type": "number",
              "attribute": "max",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "Infinity",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "min",
              "type": "number",
              "attribute": "min",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "quantity",
              "type": "number",
              "attribute": "quantity",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control receives input."
              },
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-QUANTITY-SELECT",
              "styleStr": null,
              "styleIdentifier": "scQuantitySelectStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/quantity-select/sc-quantity-select.scss",
                  "relativePath": "sc-quantity-select.scss",
                  "originalComponentPath": "sc-quantity-select.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input - The input control."
              },
              {
                "name": "part",
                "text": "minus - The minus control."
              },
              {
                "name": "part",
                "text": "minus-icon - The minus icon."
              },
              {
                "name": "part",
                "text": "plus - The plus control."
              },
              {
                "name": "part",
                "text": "plus-icon - The plus icon."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/quantity-select/sc-quantity-select.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/quantity-select/sc-quantity-select.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "aria-label",
            "onClick",
            "name",
            "exportparts",
            "ref",
            "step",
            "type",
            "max",
            "min",
            "value",
            "autocomplete",
            "tabindex",
            "aria-valuemax",
            "aria-valuemin",
            "aria-valuenow",
            "aria-disabled",
            "onChange",
            "onInput",
            "onFocus",
            "onBlur"
          ],
          "htmlTagNames": [
            "div",
            "span",
            "sc-icon",
            "input"
          ],
          "htmlParts": [
            "base",
            "minus",
            "input",
            "plus"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-line-items",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-product-line-item",
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-product-line-item"
          ]
        }
      ],
      "entryKey": "sc-product-line-item.sc-quantity-select.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-choices",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScChoices",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The group label. Required for proper accessibility. Alternatively, you can use the label slot."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Input size"
              },
              "internal": false
            },
            {
              "name": "autoWidth",
              "type": "boolean",
              "attribute": "auto-width",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Required"
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "hideLabel",
              "type": "boolean",
              "attribute": "hide-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Hides the fieldset and legend that surrounds the group. The label will still be read by screen readers."
              },
              "internal": false
            },
            {
              "name": "columns",
              "type": "number",
              "attribute": "columns",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Number of columns on desktop"
              },
              "internal": false
            },
            {
              "name": "errorMessage",
              "type": "string",
              "attribute": "error-message",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Validation error message."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "width"
            }
          ],
          "methods": [
            {
              "name": "triggerFocus",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "required",
              "methodName": "handleRequiredChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHOICES",
              "styleStr": null,
              "styleIdentifier": "scChoicesStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choices/sc-choices.scss",
                  "relativePath": "sc-choices.scss",
                  "originalComponentPath": "sc-choices.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "choices - The choices wrapper."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choices/sc-choices.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choices/sc-choices.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "exportparts",
            "size",
            "required",
            "label",
            "showLabel",
            "help",
            "inputId",
            "helpId",
            "labelId"
          ],
          "htmlTagNames": [
            "fieldset",
            "sc-form-control",
            "div",
            "slot"
          ],
          "htmlParts": [
            "base",
            "choices"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control"
          ],
          "directDependencies": [
            "sc-form-control"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-donation-choices",
            "sc-price-choices",
            "sc-subscription",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch"
          ],
          "directDependents": [
            "sc-cancel-survey",
            "sc-donation-choices",
            "sc-price-choices",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch"
          ]
        }
      ],
      "entryKey": "sc-choices.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-choice",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScChoice",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The choice name attribute"
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The size."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The choice value"
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'radio'",
              "complexType": {
                "original": "'radio' | 'checkbox'",
                "resolved": "\"checkbox\" | \"radio\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The choice name attribute"
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is the choice disabled"
              },
              "internal": false
            },
            {
              "name": "checked",
              "type": "boolean",
              "attribute": "checked",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws the choice in a checked state."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this required"
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by the `required` prop."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the label"
              },
              "internal": false
            },
            {
              "name": "showPrice",
              "type": "boolean",
              "attribute": "show-price",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the price"
              },
              "internal": false
            },
            {
              "name": "showControl",
              "type": "boolean",
              "attribute": "show-control",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the radio/checkbox control"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFocus"
            },
            {
              "name": "isStacked"
            },
            {
              "name": "hasDefaultSlot"
            },
            {
              "name": "hasPrice"
            },
            {
              "name": "hasPer"
            },
            {
              "name": "hasDescription"
            }
          ],
          "methods": [
            {
              "name": "triggerClick",
              "docs": {
                "text": "Simulates a click on the choice.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerFocus",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "reportValidity",
              "docs": {
                "text": "Checks for validity and shows the browser's validation message if the control is invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            },
            {
              "name": "setCustomValidity",
              "docs": {
                "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "(message: string) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "click",
              "method": "handleClickEvent",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's checked state changes."
              },
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "checked",
              "methodName": "handleCheckedChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CHOICE",
              "styleStr": null,
              "styleIdentifier": "scChoiceStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choice/sc-choice.scss",
                  "relativePath": "sc-choice.scss",
                  "originalComponentPath": "sc-choice.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choice/sc-choice.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/choice/sc-choice.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "tabindex",
            "onFocus",
            "part",
            "class",
            "onKeyDown",
            "onMouseDown",
            "name",
            "htmlFor",
            "hidden",
            "viewBox",
            "stroke",
            "stroke-width",
            "fill",
            "fill-rule",
            "stroke-linecap",
            "transform",
            "d",
            "cx",
            "cy",
            "r",
            "id",
            "ref",
            "type",
            "value",
            "checked",
            "disabled",
            "aria-checked",
            "aria-disabled",
            "aria-labelledby",
            "onBlur",
            "onChange",
            "onSlotchange"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "label",
            "span",
            "svg",
            "g",
            "path",
            "circle",
            "input"
          ],
          "htmlParts": [
            "base",
            "content",
            "control",
            "checked-icon",
            "label",
            "title",
            "description"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-checkout",
            "sc-form-components-validator",
            "sc-order-bump",
            "sc-order-bumps",
            "sc-subscription",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch"
          ],
          "directDependents": [
            "sc-cancel-survey",
            "sc-order-bump",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch"
          ]
        }
      ],
      "entryKey": "sc-choice.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-dialog",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDialog",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates whether or not the dialog is open. You can use this in lieu of the show/hide methods."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The dialog's label as displayed in the header. You should always include a relevant label even when using\n`no-header`, as it is required for proper accessibility."
              },
              "internal": false
            },
            {
              "name": "noHeader",
              "type": "boolean",
              "attribute": "no-header",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the header. This will also remove the default close button, so please ensure you provide an easy,\naccessible way for users to dismiss the dialog."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasFooter"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scRequestClose",
              "method": "scRequestClose",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Request close event"
              },
              "complexType": {
                "original": "'close-button' | 'keyboard' | 'overlay'",
                "resolved": "\"close-button\" | \"keyboard\" | \"overlay\"",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scShow",
              "method": "scShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scAfterShow",
              "method": "scAfterShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scHide",
              "method": "scHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scAfterHide",
              "method": "scAfterHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInitialFocus",
              "method": "scInitialFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DIALOG",
              "styleStr": null,
              "styleIdentifier": "scDialogStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-dialog/sc-dialog.scss",
                  "relativePath": "sc-dialog.scss",
                  "originalComponentPath": "sc-dialog.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-dialog/sc-dialog.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/sc-dialog/sc-dialog.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "ref",
            "class",
            "onKeyDown",
            "onClick",
            "tabindex",
            "role",
            "aria-modal",
            "aria-hidden",
            "aria-label",
            "aria-labelledby",
            "id",
            "name",
            "type",
            "circle",
            "exportparts",
            "label"
          ],
          "htmlTagNames": [
            "div",
            "header",
            "h2",
            "slot",
            "sc-button",
            "sc-icon",
            "footer"
          ],
          "htmlParts": [
            "base",
            "overlay",
            "panel",
            "header",
            "title",
            "close-button",
            "body",
            "footer"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-button",
            "sc-icon"
          ],
          "directDependencies": [
            "sc-button",
            "sc-icon"
          ],
          "dependencies": [
            "sc-button",
            "sc-icon",
            "sc-spinner"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-checkout",
            "sc-login-provider",
            "sc-order-confirm-provider",
            "sc-payment-methods-list",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscriptions-list",
            "sc-upgrade-required"
          ],
          "directDependents": [
            "sc-cancel-dialog",
            "sc-login-provider",
            "sc-order-confirm-provider",
            "sc-payment-methods-list",
            "sc-subscription-details",
            "sc-upgrade-required"
          ]
        }
      ],
      "entryKey": "sc-dialog.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-empty",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScEmpty",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "icon",
              "type": "string",
              "attribute": "icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-EMPTY",
              "styleStr": null,
              "styleIdentifier": "scEmptyStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/empty/sc-empty.scss",
                  "relativePath": "sc-empty.scss",
                  "originalComponentPath": "sc-empty.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "icon - The icon."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/empty/sc-empty.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/empty/sc-empty.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "exportparts",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "sc-icon",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-customer-details",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-invoices-list",
            "sc-order",
            "sc-order-confirmation-customer",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list"
          ],
          "directDependents": [
            "sc-customer-details",
            "sc-invoices-list",
            "sc-order",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list"
          ]
        },
        {
          "tagName": "sc-stacked-list",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScStackedList",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-STACKED-LIST",
              "styleStr": null,
              "styleIdentifier": "scStackedListStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stacked-list/sc-stacked-list.scss",
                  "relativePath": "sc-stacked-list.scss",
                  "originalComponentPath": "sc-stacked-list.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stacked-list/sc-stacked-list.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stacked-list/sc-stacked-list.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-charges-list",
            "sc-customer-details",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-order",
            "sc-order-confirmation-customer",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-wordpress-user"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-customer-details",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-order",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription-details",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-wordpress-user"
          ]
        },
        {
          "tagName": "sc-stacked-list-row",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScStackedListRow",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "target",
              "type": "string",
              "attribute": "target",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'_self'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "mobileSize",
              "type": "number",
              "attribute": "mobile-size",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "600",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "width"
            },
            {
              "name": "hasPrefix"
            },
            {
              "name": "hasSuffix"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-STACKED-LIST-ROW",
              "styleStr": null,
              "styleIdentifier": "scStackedListRowStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stacked-list-row/sc-stacked-list-row.scss",
                  "relativePath": "sc-stacked-list-row.scss",
                  "originalComponentPath": "sc-stacked-list-row.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stacked-list-row/sc-stacked-list-row.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/stacked-list-row/sc-stacked-list-row.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "href",
            "target",
            "part",
            "class",
            "name",
            "onSlotchange"
          ],
          "htmlTagNames": [
            "span",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-charges-list",
            "sc-customer-details",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-order",
            "sc-order-confirmation-customer",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-wordpress-user"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-customer-details",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-order",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-wordpress-user"
          ]
        }
      ],
      "entryKey": "sc-empty.sc-stacked-list.sc-stacked-list-row.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-format-date",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormatDate",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "locale",
              "type": "string",
              "attribute": "locale",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The locale to use when formatting the date/time."
              },
              "internal": false
            },
            {
              "name": "date",
              "type": "any",
              "attribute": "date",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "new Date()",
              "complexType": {
                "original": "Date | string | number",
                "resolved": "Date | number | string",
                "references": {
                  "Date": {
                    "location": "global"
                  }
                }
              },
              "docs": {
                "tags": [],
                "text": "The date/time to format. If not set, the current date and time will be used."
              },
              "internal": false
            },
            {
              "name": "weekday",
              "type": "string",
              "attribute": "weekday",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'narrow' | 'short' | 'long'",
                "resolved": "\"long\" | \"narrow\" | \"short\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the weekday."
              },
              "internal": false
            },
            {
              "name": "era",
              "type": "string",
              "attribute": "era",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'narrow' | 'short' | 'long'",
                "resolved": "\"long\" | \"narrow\" | \"short\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the era."
              },
              "internal": false
            },
            {
              "name": "year",
              "type": "string",
              "attribute": "year",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'numeric' | '2-digit'",
                "resolved": "\"2-digit\" | \"numeric\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the year."
              },
              "internal": false
            },
            {
              "name": "month",
              "type": "string",
              "attribute": "month",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'numeric' | '2-digit' | 'narrow' | 'short' | 'long'",
                "resolved": "\"2-digit\" | \"long\" | \"narrow\" | \"numeric\" | \"short\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the month."
              },
              "internal": false
            },
            {
              "name": "day",
              "type": "string",
              "attribute": "day",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'numeric' | '2-digit'",
                "resolved": "\"2-digit\" | \"numeric\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the day."
              },
              "internal": false
            },
            {
              "name": "hour",
              "type": "string",
              "attribute": "hour",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'numeric' | '2-digit'",
                "resolved": "\"2-digit\" | \"numeric\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the hour."
              },
              "internal": false
            },
            {
              "name": "minute",
              "type": "string",
              "attribute": "minute",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'numeric' | '2-digit'",
                "resolved": "\"2-digit\" | \"numeric\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the minute."
              },
              "internal": false
            },
            {
              "name": "second",
              "type": "string",
              "attribute": "second",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'numeric' | '2-digit'",
                "resolved": "\"2-digit\" | \"numeric\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the second."
              },
              "internal": false
            },
            {
              "name": "timeZoneName",
              "type": "string",
              "attribute": "time-zone-name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'short' | 'long'",
                "resolved": "\"long\" | \"short\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The format for displaying the time."
              },
              "internal": false
            },
            {
              "name": "timeZone",
              "type": "string",
              "attribute": "time-zone",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The time zone to express the time in."
              },
              "internal": false
            },
            {
              "name": "hourFormat",
              "type": "string",
              "attribute": "hour-format",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'auto'",
              "complexType": {
                "original": "'auto' | '12' | '24'",
                "resolved": "\"12\" | \"24\" | \"auto\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "When set, 24 hour time will always be used."
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'date'",
              "complexType": {
                "original": "'timestamp' | 'date'",
                "resolved": "\"date\" | \"timestamp\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-date/sc-format-date.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-date/sc-format-date.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": false,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-cancel-dialog",
            "sc-charges-list",
            "sc-invoices-list",
            "sc-order",
            "sc-orders-list",
            "sc-subscription",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-status-badge",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-invoices-list",
            "sc-order",
            "sc-orders-list",
            "sc-subscription",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-status-badge",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-format-date.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-text",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScText",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "tag",
              "type": "string",
              "attribute": "tag",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'p'",
              "complexType": {
                "original": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p'",
                "resolved": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "truncate",
              "type": "boolean",
              "attribute": "truncate",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TEXT",
              "styleStr": null,
              "styleIdentifier": "scTextStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/text/sc-text.scss",
                  "relativePath": "sc-text.scss",
                  "originalComponentPath": "sc-text.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/text/sc-text.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/text/sc-text.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class"
          ],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-charges-list",
            "sc-invoices-list",
            "sc-order",
            "sc-orders-list",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-stripe-element",
            "sc-stripe-payment-element",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-invoices-list",
            "sc-orders-list",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-stripe-element",
            "sc-stripe-payment-element",
            "sc-subscription-details",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-text.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-line-item",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScLineItem",
          "elementRef": "hostElement",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "price",
              "type": "string",
              "attribute": "price",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Price of the item"
              },
              "internal": false
            },
            {
              "name": "currency",
              "type": "string",
              "attribute": "currency",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Currency symbol"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasImageSlot"
            },
            {
              "name": "hasTitleSlot"
            },
            {
              "name": "hasDescriptionSlot"
            },
            {
              "name": "hasPriceSlot"
            },
            {
              "name": "hasPriceDescriptionSlot"
            },
            {
              "name": "hasCurrencySlot"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-LINE-ITEM",
              "styleStr": null,
              "styleIdentifier": "scLineItemStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/line-item/sc-line-item.scss",
                  "relativePath": "sc-line-item.scss",
                  "originalComponentPath": "sc-line-item.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "slot",
                "text": "image - Line item image"
              },
              {
                "name": "slot",
                "text": "title - Line item title."
              },
              {
                "name": "slot",
                "text": "description - Line item description (below the title)"
              },
              {
                "name": "slot",
                "text": "currency - Used for the 3 character currency code."
              },
              {
                "name": "slot",
                "text": "price - Price amount, including currency sign."
              },
              {
                "name": "slot",
                "text": "price-description - Description for the price (i.e. monthly)"
              },
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "image - The image wrapper."
              },
              {
                "name": "part",
                "text": "text - The text."
              },
              {
                "name": "part",
                "text": "title - The title."
              },
              {
                "name": "part",
                "text": "description - Line item description (below the title)"
              },
              {
                "name": "part",
                "text": "currency - Used for the 3 character currency code."
              },
              {
                "name": "part",
                "text": "price - Price amount, including currency sign."
              },
              {
                "name": "part",
                "text": "price-text - The price text."
              },
              {
                "name": "part",
                "text": "price-description - Description for the price (i.e. monthly)"
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/line-item/sc-line-item.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/line-item/sc-line-item.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base",
            "image",
            "text",
            "title",
            "description",
            "price",
            "currency",
            "price-text",
            "price",
            "price-description"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-checkout",
            "sc-coupon-form",
            "sc-form-components-validator",
            "sc-line-item-bump",
            "sc-line-item-tax",
            "sc-line-item-total",
            "sc-line-items",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals",
            "sc-order-coupon-form",
            "sc-order-summary",
            "sc-product-line-item",
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-coupon-form",
            "sc-line-item-bump",
            "sc-line-item-tax",
            "sc-line-item-total",
            "sc-line-items",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals",
            "sc-order-summary",
            "sc-product-line-item",
            "sc-subscription-next-payment",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-line-item.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-form",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScForm",
          "elementRef": "form",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "novalidate",
              "type": "boolean",
              "attribute": "novalidate",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Prevent the form from validating inputs before submitting."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [
            {
              "name": "getFormData",
              "docs": {
                "text": "Serializes all form controls elements and returns a `FormData` object.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<FormData>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FormData": {
                    "location": "global"
                  }
                },
                "return": "Promise<FormData>"
              },
              "internal": false
            },
            {
              "name": "getFormJson",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<Record<string, unknown>>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "Record": {
                    "location": "global"
                  }
                },
                "return": "Promise<Record<string, unknown>>"
              },
              "internal": false
            },
            {
              "name": "submit",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "validate",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            }
          ],
          "listeners": [
            {
              "name": "scChange",
              "method": "handleChange",
              "capture": false,
              "passive": false
            }
          ],
          "events": [
            {
              "name": "scSubmit",
              "method": "scSubmit",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the form is submitted. This event will not be emitted if any form control inside of\nit is in an invalid state, unless the form has the `novalidate` attribute. Note that there is never a need to prevent\nthis event, since it doen't send a GET or POST request like native forms. To \"prevent\" submission, use a conditional\naround the XHR request you use to submit the form's data with."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFormSubmit",
              "method": "scFormSubmit",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Backwards compat."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFormChange",
              "method": "scFormChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the form is submitted. This event will not be emitted if any form control inside of\nit is in an invalid state, unless the form has the `novalidate` attribute. Note that there is never a need to prevent\nthis event, since it doen't send a GET or POST request like native forms. To \"prevent\" submission, use a conditional\naround the XHR request you use to submit the form's data with."
              },
              "complexType": {
                "original": "Object",
                "resolved": "Object",
                "references": {
                  "Object": {
                    "location": "global"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-FORM",
              "styleStr": null,
              "styleIdentifier": "scFormStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form/sc-form.scss",
                  "relativePath": "sc-form.scss",
                  "originalComponentPath": "sc-form.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form/sc-form.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form/sc-form.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": true,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "role",
            "ref",
            "onSubmit",
            "novalidate"
          ],
          "htmlTagNames": [
            "button",
            "div",
            "form",
            "slot"
          ],
          "htmlParts": [
            "base",
            "form"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-cart-form",
            "sc-checkout",
            "sc-customer-edit",
            "sc-login-form",
            "sc-login-provider",
            "sc-mollie-add-method",
            "sc-password-nag",
            "sc-product-selected-price",
            "sc-stripe-add-method",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-cancel-survey",
            "sc-cart-form",
            "sc-customer-edit",
            "sc-login-form",
            "sc-login-provider",
            "sc-mollie-add-method",
            "sc-password-nag",
            "sc-product-selected-price",
            "sc-stripe-add-method",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ]
        }
      ],
      "entryKey": "sc-form.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-flex",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFlex",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "alignItems",
              "type": "string",
              "attribute": "align-items",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "justifyContent",
              "type": "string",
              "attribute": "justify-content",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "flexDirection",
              "type": "string",
              "attribute": "flex-direction",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "columnGap",
              "type": "string",
              "attribute": "column-gap",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "flexWrap",
              "type": "string",
              "attribute": "flex-wrap",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "stack",
              "type": "string",
              "attribute": "stack",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-FLEX",
              "styleStr": null,
              "styleIdentifier": "scFlexStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/flex/sc-flex.scss",
                  "relativePath": "sc-flex.scss",
                  "originalComponentPath": "sc-flex.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/flex/sc-flex.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/flex/sc-flex.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class"
          ],
          "htmlTagNames": [
            "div",
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-charges-list",
            "sc-dashboard-downloads-list",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-login-form",
            "sc-order",
            "sc-orders-list",
            "sc-pagination",
            "sc-password-nag",
            "sc-payment-methods-list",
            "sc-subscription",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-downloads-list",
            "sc-login-form",
            "sc-order",
            "sc-pagination",
            "sc-password-nag",
            "sc-payment-methods-list",
            "sc-subscription",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-flex.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-divider",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDivider",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DIVIDER",
              "styleStr": null,
              "styleIdentifier": "scDividerStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/divider/sc-divider.scss",
                  "relativePath": "sc-divider.scss",
                  "originalComponentPath": "sc-divider.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "line-container - The line container."
              },
              {
                "name": "part",
                "text": "line - The line."
              },
              {
                "name": "part",
                "text": "text-container - The text container."
              },
              {
                "name": "part",
                "text": "text - The text."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/divider/sc-divider.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/divider/sc-divider.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": false,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": false,
          "hasProp": false,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "aria-hidden"
          ],
          "htmlTagNames": [
            "div",
            "span",
            "slot"
          ],
          "htmlParts": [
            "base",
            "line-container",
            "line",
            "text-container",
            "text"
          ],
          "isUpdateable": false,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-checkout",
            "sc-checkout-mollie-payment",
            "sc-customer-details",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-express-payment",
            "sc-form-components-validator",
            "sc-invoices-list",
            "sc-login-form",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-bump",
            "sc-order-bumps",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-order-confirmation-totals",
            "sc-orders-list",
            "sc-payment",
            "sc-payment-methods-list",
            "sc-payment-selected",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-next-payment",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-customer-details",
            "sc-express-payment",
            "sc-invoices-list",
            "sc-login-form",
            "sc-order",
            "sc-order-bump",
            "sc-order-confirmation-details",
            "sc-order-confirmation-totals",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-payment-selected",
            "sc-purchase-downloads-list",
            "sc-subscription-next-payment",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-divider.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-form-control",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormControl",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Size of the label"
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Name for the input. Used for validation errors."
              },
              "internal": false
            },
            {
              "name": "errors",
              "type": "any",
              "attribute": "errors",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Display server-side validation errors."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Show the label."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Input label."
              },
              "internal": false
            },
            {
              "name": "labelId",
              "type": "string",
              "attribute": "label-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Input label id."
              },
              "internal": false
            },
            {
              "name": "inputId",
              "type": "string",
              "attribute": "input-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Input id."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Whether the input is required."
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Help text"
              },
              "internal": false
            },
            {
              "name": "helpId",
              "type": "string",
              "attribute": "help-id",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Help id"
              },
              "internal": false
            },
            {
              "name": "errorMessage",
              "type": "string",
              "attribute": "error-message",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Store the error message"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [
            {
              "propName": "errors",
              "methodName": "handleErrors"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-FORM-CONTROL",
              "styleStr": null,
              "styleIdentifier": "scFormControlStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form-control/sc-form-control.scss",
                  "relativePath": "sc-form-control.scss",
                  "originalComponentPath": "sc-form-control.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "form-control - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "label - The label."
              },
              {
                "name": "part",
                "text": "input - The input wrapper."
              },
              {
                "name": "part",
                "text": "help-text - Help text."
              },
              {
                "name": "part",
                "text": "tooltip - Tooltip"
              },
              {
                "name": "part",
                "text": "tooltip-text - Tooltip text."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form-control/sc-form-control.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/form-control/sc-form-control.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "id",
            "htmlFor",
            "aria-hidden",
            "name",
            "exportparts",
            "text",
            "type",
            "padding",
            "freeze",
            "open",
            "onClick"
          ],
          "htmlTagNames": [
            "div",
            "label",
            "slot",
            "sc-tooltip"
          ],
          "htmlParts": [
            "form-control",
            "label",
            "input",
            "help-text"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-tooltip"
          ],
          "directDependencies": [
            "sc-tooltip"
          ],
          "dependencies": [
            "sc-tooltip"
          ],
          "dependents": [
            "sc-address",
            "sc-button-group",
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-checkout",
            "sc-choices",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-edit",
            "sc-customer-email",
            "sc-customer-firstname",
            "sc-customer-lastname",
            "sc-customer-name",
            "sc-donation-choices",
            "sc-form-components-validator",
            "sc-input",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-order-bumps",
            "sc-order-coupon-form",
            "sc-order-password",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-password-nag",
            "sc-payment",
            "sc-price-choices",
            "sc-price-input",
            "sc-product-selected-price",
            "sc-rich-text",
            "sc-select",
            "sc-stripe-element",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-tax-id-input",
            "sc-textarea",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-address",
            "sc-button-group",
            "sc-choices",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-input",
            "sc-order-bumps",
            "sc-payment",
            "sc-rich-text",
            "sc-select",
            "sc-stripe-element",
            "sc-textarea"
          ]
        },
        {
          "tagName": "sc-input",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScInput",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "squared",
              "type": "boolean",
              "attribute": "squared",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredBottom",
              "type": "boolean",
              "attribute": "squared-bottom",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredTop",
              "type": "boolean",
              "attribute": "squared-top",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredLeft",
              "type": "boolean",
              "attribute": "squared-left",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "squaredRight",
              "type": "boolean",
              "attribute": "squared-right",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "hidden",
              "type": "boolean",
              "attribute": "hidden",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Hidden"
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'text'",
              "complexType": {
                "original": "'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'url' | 'hidden'",
                "resolved": "\"email\" | \"hidden\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"url\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's size."
              },
              "internal": false
            },
            {
              "name": "name",
              "type": "string",
              "attribute": "name",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's name attribute."
              },
              "internal": false
            },
            {
              "name": "value",
              "type": "string",
              "attribute": "value",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's value attribute."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style input with rounded edges."
              },
              "internal": false
            },
            {
              "name": "label",
              "type": "string",
              "attribute": "label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's label."
              },
              "internal": false
            },
            {
              "name": "showLabel",
              "type": "boolean",
              "attribute": "show-label",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "true",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Should we show the label"
              },
              "internal": false
            },
            {
              "name": "help",
              "type": "string",
              "attribute": "help",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "''",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's help text."
              },
              "internal": false
            },
            {
              "name": "clearable",
              "type": "boolean",
              "attribute": "clearable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Adds a clear button when the input is populated."
              },
              "internal": false
            },
            {
              "name": "togglePassword",
              "type": "boolean",
              "attribute": "toggle-password",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Adds a password toggle button to password inputs."
              },
              "internal": false
            },
            {
              "name": "placeholder",
              "type": "string",
              "attribute": "placeholder",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's placeholder text."
              },
              "internal": false
            },
            {
              "name": "disabled",
              "type": "boolean",
              "attribute": "disabled",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Disables the input."
              },
              "internal": false
            },
            {
              "name": "readonly",
              "type": "boolean",
              "attribute": "readonly",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input readonly."
              },
              "internal": false
            },
            {
              "name": "minlength",
              "type": "number",
              "attribute": "minlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The minimum length of input that will be considered valid."
              },
              "internal": false
            },
            {
              "name": "maxlength",
              "type": "number",
              "attribute": "maxlength",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The maximum length of input that will be considered valid."
              },
              "internal": false
            },
            {
              "name": "min",
              "type": "any",
              "attribute": "min",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number | string",
                "resolved": "number | string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's minimum value."
              },
              "internal": false
            },
            {
              "name": "max",
              "type": "any",
              "attribute": "max",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number | string",
                "resolved": "number | string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's maximum value."
              },
              "internal": false
            },
            {
              "name": "step",
              "type": "number",
              "attribute": "step",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's step attribute."
              },
              "internal": false
            },
            {
              "name": "pattern",
              "type": "string",
              "attribute": "pattern",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "A pattern to validate input against."
              },
              "internal": false
            },
            {
              "name": "required",
              "type": "boolean",
              "attribute": "required",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the input a required field."
              },
              "internal": false
            },
            {
              "name": "invalid",
              "type": "boolean",
              "attribute": "invalid",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n`required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API."
              },
              "internal": false
            },
            {
              "name": "autocorrect",
              "type": "string",
              "attribute": "autocorrect",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autocorrect attribute."
              },
              "internal": false
            },
            {
              "name": "autocomplete",
              "type": "string",
              "attribute": "autocomplete",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autocomplete attribute."
              },
              "internal": false
            },
            {
              "name": "autofocus",
              "type": "boolean",
              "attribute": "autofocus",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's autofocus attribute."
              },
              "internal": false
            },
            {
              "name": "spellcheck",
              "type": "boolean",
              "attribute": "spellcheck",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Enables spell checking on the input."
              },
              "internal": false
            },
            {
              "name": "inputmode",
              "type": "string",
              "attribute": "inputmode",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'",
                "resolved": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The input's inputmode attribute."
              },
              "internal": false
            },
            {
              "name": "hasFocus",
              "type": "boolean",
              "attribute": "has-focus",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Inputs focus"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "isPasswordVisible"
            }
          ],
          "methods": [
            {
              "name": "reportValidity",
              "docs": {
                "text": "",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<boolean>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<boolean>"
              },
              "internal": false
            },
            {
              "name": "triggerFocus",
              "docs": {
                "text": "Sets focus on the input.",
                "tags": []
              },
              "complexType": {
                "signature": "(options?: FocusOptions) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  },
                  "FocusOptions": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "setCustomValidity",
              "docs": {
                "text": "Sets a custom validation message. If `message` is not empty, the field will be considered invalid.",
                "tags": []
              },
              "complexType": {
                "signature": "(message: string) => Promise<void>",
                "parameters": [
                  {
                    "tags": [],
                    "text": ""
                  }
                ],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "triggerBlur",
              "docs": {
                "text": "Removes focus from the input.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scChange",
              "method": "scChange",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control's value changes."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scClear",
              "method": "scClear",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the clear button is activated."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scInput",
              "method": "scInput",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control receives input."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scFocus",
              "method": "scFocus",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control gains focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scBlur",
              "method": "scBlur",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "Emitted when the control loses focus."
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "hasFocus",
              "methodName": "handleFocusChange"
            },
            {
              "propName": "value",
              "methodName": "handleValueChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-INPUT",
              "styleStr": null,
              "styleIdentifier": "scInputStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/input/sc-input.scss",
                  "relativePath": "sc-input.scss",
                  "originalComponentPath": "sc-input.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [
            {
              "name": "--focus-ring",
              "docs": "The focus ring style to use when the control receives focus, a `box-shadow` property.",
              "annotation": "prop"
            }
          ],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "input - The html input element."
              },
              {
                "name": "part",
                "text": "form-control - The form control wrapper."
              },
              {
                "name": "part",
                "text": "label - The input label."
              },
              {
                "name": "part",
                "text": "help-text - Help text that describes how to use the input."
              },
              {
                "name": "part",
                "text": "prefix - Used to prepend an icon or element to the input."
              },
              {
                "name": "part",
                "text": "suffix - Used to prepend an icon or element to the input."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/input/sc-input.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/input/sc-input.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": true,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "hidden",
            "exportparts",
            "size",
            "required",
            "label",
            "showLabel",
            "help",
            "inputId",
            "helpId",
            "labelId",
            "name",
            "slot",
            "part",
            "class",
            "id",
            "ref",
            "type",
            "disabled",
            "readonly",
            "placeholder",
            "minlength",
            "maxlength",
            "min",
            "max",
            "step",
            "autocomplete",
            "autocorrect",
            "autofocus",
            "spellcheck",
            "pattern",
            "inputmode",
            "aria-labelledby",
            "aria-invalid",
            "value",
            "onChange",
            "onInput",
            "onFocus",
            "onBlur",
            "onClick",
            "tabindex",
            "xmlns",
            "width",
            "height",
            "viewBox",
            "fill",
            "stroke",
            "stroke-width",
            "stroke-linecap",
            "stroke-linejoin",
            "x1",
            "y1",
            "x2",
            "y2"
          ],
          "htmlTagNames": [
            "sc-form-control",
            "slot",
            "div",
            "span",
            "input",
            "button",
            "svg",
            "line"
          ],
          "htmlParts": [
            "base",
            "prefix",
            "input",
            "suffix",
            "clear-button"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-form-control"
          ],
          "directDependencies": [
            "sc-form-control"
          ],
          "dependencies": [
            "sc-form-control",
            "sc-tooltip"
          ],
          "dependents": [
            "sc-address",
            "sc-checkout",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-edit",
            "sc-customer-email",
            "sc-customer-firstname",
            "sc-customer-lastname",
            "sc-customer-name",
            "sc-donation-choices",
            "sc-form-components-validator",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-order-coupon-form",
            "sc-order-password",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-password-nag",
            "sc-price-input",
            "sc-product-selected-price",
            "sc-select",
            "sc-subscription-ad-hoc-confirm",
            "sc-tax-id-input",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-address",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-customer-edit",
            "sc-customer-email",
            "sc-customer-firstname",
            "sc-customer-lastname",
            "sc-customer-name",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-order-password",
            "sc-password-nag",
            "sc-price-input",
            "sc-select",
            "sc-tax-id-input",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ]
        }
      ],
      "entryKey": "sc-form-control.sc-input.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-tag",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTag",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'default'",
              "complexType": {
                "original": "'primary' | 'success' | 'info' | 'warning' | 'danger' | 'default'",
                "resolved": "\"danger\" | \"default\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tag's type."
              },
              "internal": false
            },
            {
              "name": "size",
              "type": "string",
              "attribute": "size",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'medium'",
              "complexType": {
                "original": "'small' | 'medium' | 'large'",
                "resolved": "\"large\" | \"medium\" | \"small\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tag's size."
              },
              "internal": false
            },
            {
              "name": "pill",
              "type": "boolean",
              "attribute": "pill",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Draws a pill-style tag with rounded edges."
              },
              "internal": false
            },
            {
              "name": "clearable",
              "type": "boolean",
              "attribute": "clearable",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the tag clearable."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [
            {
              "name": "scClear",
              "method": "scClear",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": ""
              },
              "complexType": {
                "original": "ScTag",
                "resolved": "ScTag",
                "references": {
                  "ScTag": {
                    "location": "global"
                  }
                }
              },
              "internal": false
            }
          ],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TAG",
              "styleStr": null,
              "styleIdentifier": "scTagStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tag/sc-tag.scss",
                  "relativePath": "sc-tag.scss",
                  "originalComponentPath": "sc-tag.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tag/sc-tag.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tag/sc-tag.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "onClick",
            "class",
            "xmlns",
            "width",
            "height",
            "fill",
            "viewBox",
            "d"
          ],
          "htmlTagNames": [
            "span",
            "slot",
            "svg",
            "path"
          ],
          "htmlParts": [
            "base",
            "content"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-badge-notice",
            "sc-cart-header",
            "sc-charges-list",
            "sc-coupon-form",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-order",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-order-confirmation-totals",
            "sc-order-coupon-form",
            "sc-order-status-badge",
            "sc-orders-list",
            "sc-payment",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-premium-tag",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-status-badge",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-badge-notice",
            "sc-cart-header",
            "sc-charges-list",
            "sc-coupon-form",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-order-confirmation-totals",
            "sc-order-status-badge",
            "sc-orders-list",
            "sc-payment",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-premium-tag",
            "sc-subscription-details",
            "sc-subscription-payment-method",
            "sc-subscription-status-badge",
            "sc-subscription-switch"
          ]
        }
      ],
      "entryKey": "sc-tag.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-card",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScCard",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "noDivider",
              "type": "boolean",
              "attribute": "no-divider",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Eliminate the divider"
              },
              "internal": false
            },
            {
              "name": "borderless",
              "type": "boolean",
              "attribute": "borderless",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this card borderless."
              },
              "internal": false
            },
            {
              "name": "noPadding",
              "type": "boolean",
              "attribute": "no-padding",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Remove padding"
              },
              "internal": false
            },
            {
              "name": "href",
              "type": "string",
              "attribute": "href",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "A link for the card."
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Is this card loading."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "hasTitleSlot"
            }
          ],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-CARD",
              "styleStr": null,
              "styleIdentifier": "scCardStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/card/sc-card.scss",
                  "relativePath": "sc-card.scss",
                  "originalComponentPath": "sc-card.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/card/sc-card.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/card/sc-card.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": true,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": true,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class"
          ],
          "htmlTagNames": [
            "slot"
          ],
          "htmlParts": [
            "base"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-charges-list",
            "sc-checkout-mollie-payment",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-login-form",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-method-choice",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-checkout-mollie-payment",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-login-form",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-method-choice",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ]
        },
        {
          "tagName": "sc-dashboard-module",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScDashboardModule",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "heading",
              "type": "string",
              "attribute": "heading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "error",
              "type": "string",
              "attribute": "error",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "loading",
              "type": "boolean",
              "attribute": "loading",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-DASHBOARD-MODULE",
              "styleStr": null,
              "styleIdentifier": "scDashboardModuleStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/dashboard-module/sc-dashboard-module.scss",
                  "relativePath": "sc-dashboard-module.scss",
                  "originalComponentPath": "sc-dashboard-module.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "heading - The heading."
              },
              {
                "name": "part",
                "text": "heading-text - The heading text wrapper."
              },
              {
                "name": "part",
                "text": "heading-title - The heading title."
              },
              {
                "name": "part",
                "text": "heading-description - The heading description."
              },
              {
                "name": "part",
                "text": "error__base - The alert base wrapper."
              },
              {
                "name": "part",
                "text": "error__icon - The alert icon."
              },
              {
                "name": "part",
                "text": "error__text - The alert text."
              },
              {
                "name": "part",
                "text": "error__title - The alert title."
              },
              {
                "name": "part",
                "text": "error__ message - The alert message."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/dashboard-module/sc-dashboard-module.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/dashboard-module/sc-dashboard-module.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "class",
            "part",
            "exportparts",
            "open",
            "type",
            "slot",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "sc-alert",
            "span",
            "slot"
          ],
          "htmlParts": [
            "base",
            "heading",
            "heading-text",
            "heading-title",
            "heading-description"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-alert"
          ],
          "directDependencies": [
            "sc-alert"
          ],
          "dependencies": [
            "sc-alert",
            "sc-icon"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-charges-list",
            "sc-checkout",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-order",
            "sc-order-confirm-provider",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-charges-list",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-downloads-list",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-order",
            "sc-order-confirm-provider",
            "sc-order-confirmation-details",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ]
        }
      ],
      "entryKey": "sc-card.sc-dashboard-module.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-format-number",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScFormatNumber",
          "elementRef": null,
          "encapsulation": "none",
          "shadowDelegatesFocus": null,
          "properties": [
            {
              "name": "value",
              "type": "number",
              "attribute": "value",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "0",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The number to format."
              },
              "internal": false
            },
            {
              "name": "locale",
              "type": "string",
              "attribute": "locale",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The locale to use when formatting the number."
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'decimal'",
              "complexType": {
                "original": "'currency' | 'decimal' | 'percent'",
                "resolved": "\"currency\" | \"decimal\" | \"percent\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The formatting style to use."
              },
              "internal": false
            },
            {
              "name": "noGrouping",
              "type": "boolean",
              "attribute": "no-grouping",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Turns off grouping separators."
              },
              "internal": false
            },
            {
              "name": "currency",
              "type": "string",
              "attribute": "currency",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'USD'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The currency to use when formatting. Must be an ISO 4217 currency code such as `USD` or `EUR`."
              },
              "internal": false
            },
            {
              "name": "currencyDisplay",
              "type": "string",
              "attribute": "currency-display",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'symbol'",
              "complexType": {
                "original": "'symbol' | 'narrowSymbol' | 'code' | 'name'",
                "resolved": "\"code\" | \"name\" | \"narrowSymbol\" | \"symbol\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "How to display the currency."
              },
              "internal": false
            },
            {
              "name": "minimumIntegerDigits",
              "type": "number",
              "attribute": "minimum-integer-digits",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The minimum number of integer digits to use. Possible values are 1 - 21."
              },
              "internal": false
            },
            {
              "name": "minimumFractionDigits",
              "type": "number",
              "attribute": "minimum-fraction-digits",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The minimum number of fraction digits to use. Possible values are 0 - 20."
              },
              "internal": false
            },
            {
              "name": "maximumFractionDigits",
              "type": "number",
              "attribute": "maximum-fraction-digits",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The maximum number of fraction digits to use. Possible values are 0 - 20."
              },
              "internal": false
            },
            {
              "name": "minimumSignificantDigits",
              "type": "number",
              "attribute": "minimum-significant-digits",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The minimum number of significant digits to use. Possible values are 1 - 21."
              },
              "internal": false
            },
            {
              "name": "maximumSignificantDigits",
              "type": "number",
              "attribute": "maximum-significant-digits",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The maximum number of significant digits to use,. Possible values are 1 - 21."
              },
              "internal": false
            },
            {
              "name": "noConvert",
              "type": "boolean",
              "attribute": "no-convert",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-number/sc-format-number.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/util/format-number/sc-format-number.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": false,
          "hasVdomAttribute": false,
          "hasVdomXlink": false,
          "hasVdomClass": false,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": false,
          "hasVdomRef": false,
          "hasVdomRender": false,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [],
          "htmlTagNames": [],
          "htmlParts": [],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-charges-list",
            "sc-checkout",
            "sc-coupon-form",
            "sc-form-components-validator",
            "sc-invoices-list",
            "sc-line-item-bump",
            "sc-line-item-tax",
            "sc-line-item-total",
            "sc-line-items",
            "sc-order",
            "sc-order-bump",
            "sc-order-bumps",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals",
            "sc-order-coupon-form",
            "sc-order-detail",
            "sc-order-submit",
            "sc-order-summary",
            "sc-orders-list",
            "sc-price-choice",
            "sc-price-range",
            "sc-product-line-item",
            "sc-product-selected-price",
            "sc-subscription",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-total",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-charges-list",
            "sc-coupon-form",
            "sc-invoices-list",
            "sc-line-item-bump",
            "sc-line-item-tax",
            "sc-line-item-total",
            "sc-order",
            "sc-order-bump",
            "sc-order-confirmation-totals",
            "sc-order-detail",
            "sc-order-summary",
            "sc-orders-list",
            "sc-price-choice",
            "sc-price-range",
            "sc-product-line-item",
            "sc-product-selected-price",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-switch",
            "sc-total",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-format-number.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-block-ui",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScBlockUi",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "zIndex",
              "type": "number",
              "attribute": "z-index",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "1",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "transparent",
              "type": "boolean",
              "attribute": "transparent",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            },
            {
              "name": "spinner",
              "type": "boolean",
              "attribute": "spinner",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": ""
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-BLOCK-UI",
              "styleStr": null,
              "styleIdentifier": "scBlockUiStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/block-ui/sc-block-ui.scss",
                  "relativePath": "sc-block-ui.scss",
                  "originalComponentPath": "sc-block-ui.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "content - The content (spinner)"
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/block-ui/sc-block-ui.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/block-ui/sc-block-ui.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": false,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "style",
            "name"
          ],
          "htmlTagNames": [
            "div",
            "slot",
            "sc-spinner"
          ],
          "htmlParts": [
            "base",
            "content"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-spinner"
          ],
          "directDependencies": [
            "sc-spinner"
          ],
          "dependencies": [
            "sc-spinner"
          ],
          "dependents": [
            "sc-address",
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cart",
            "sc-charges-list",
            "sc-checkout",
            "sc-checkout-mollie-payment",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-edit",
            "sc-dashboard-downloads-list",
            "sc-donation-choices",
            "sc-express-payment",
            "sc-form-components-validator",
            "sc-form-state-provider",
            "sc-invoices-list",
            "sc-login-form",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-coupon-form",
            "sc-order-shipping-address",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-address",
            "sc-cancel-discount",
            "sc-cart",
            "sc-charges-list",
            "sc-checkout",
            "sc-checkout-mollie-payment",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-edit",
            "sc-donation-choices",
            "sc-express-payment",
            "sc-form-state-provider",
            "sc-invoices-list",
            "sc-login-form",
            "sc-mollie-add-method",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment-methods-list",
            "sc-purchase-downloads-list",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ]
        }
      ],
      "entryKey": "sc-block-ui.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-skeleton",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScSkeleton",
          "elementRef": null,
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "effect",
              "type": "string",
              "attribute": "effect",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'sheen'",
              "complexType": {
                "original": "'pulse' | 'sheen' | 'none'",
                "resolved": "\"none\" | \"pulse\" | \"sheen\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Animation effect"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [],
          "methods": [],
          "listeners": [],
          "events": [],
          "watchers": [],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-SKELETON",
              "styleStr": null,
              "styleIdentifier": "scSkeletonStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/skeleton/sc-skeleton.scss",
                  "relativePath": "sc-skeleton.scss",
                  "originalComponentPath": "sc-skeleton.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [
            {
              "name": "--border-radius",
              "docs": "The skeleton's border radius.",
              "annotation": "prop"
            },
            {
              "name": "--color",
              "docs": "The color of the skeleton.",
              "annotation": "prop"
            },
            {
              "name": "--sheen-color",
              "docs": "The sheen color when the skeleton is in its loading state.",
              "annotation": "prop"
            }
          ],
          "docs": {
            "tags": [],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/skeleton/sc-skeleton.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/skeleton/sc-skeleton.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": false,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": false,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": false,
          "hasPropBoolean": false,
          "hasPropString": true,
          "hasPropMutable": false,
          "hasReflect": false,
          "hasRenderFn": true,
          "hasState": false,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": false,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": false,
          "hasVdomText": false,
          "hasWatchCallback": false,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "aria-busy",
            "aria-live"
          ],
          "htmlTagNames": [
            "div"
          ],
          "htmlParts": [
            "base",
            "indicator"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-charges-list",
            "sc-checkout-mollie-payment",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-details",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-donation-choices",
            "sc-invoices-list",
            "sc-line-item-total",
            "sc-line-items",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-order-confirmation-totals",
            "sc-order-coupon-form",
            "sc-order-detail",
            "sc-order-submit",
            "sc-order-summary",
            "sc-orders-list",
            "sc-payment",
            "sc-payment-methods-list",
            "sc-paypal-buttons",
            "sc-price-choice",
            "sc-purchase-downloads-list",
            "sc-stripe-add-method",
            "sc-stripe-payment-element",
            "sc-subscription",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ],
          "directDependents": [
            "sc-cancel-survey",
            "sc-charges-list",
            "sc-checkout-mollie-payment",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-details",
            "sc-donation-choices",
            "sc-invoices-list",
            "sc-line-item-total",
            "sc-line-items",
            "sc-mollie-add-method",
            "sc-order",
            "sc-order-confirmation-details",
            "sc-order-confirmation-line-items",
            "sc-order-detail",
            "sc-order-summary",
            "sc-orders-list",
            "sc-payment-methods-list",
            "sc-paypal-buttons",
            "sc-price-choice",
            "sc-purchase-downloads-list",
            "sc-stripe-add-method",
            "sc-stripe-payment-element",
            "sc-subscription",
            "sc-subscription-cancel",
            "sc-subscription-details",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-skeleton.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-tooltip",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScTooltip",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": false,
              "mutable": true,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Open or not"
              },
              "internal": false
            },
            {
              "name": "width",
              "type": "string",
              "attribute": "width",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tooltip fixed width"
              },
              "internal": false
            },
            {
              "name": "text",
              "type": "string",
              "attribute": "text",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Tooltip text"
              },
              "internal": false
            },
            {
              "name": "freeze",
              "type": "boolean",
              "attribute": "freeze",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Freeze open or closed."
              },
              "internal": false
            },
            {
              "name": "padding",
              "type": "number",
              "attribute": "padding",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "5",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tooltip's padding."
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'info'",
              "complexType": {
                "original": "'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text'",
                "resolved": "\"danger\" | \"info\" | \"primary\" | \"success\" | \"text\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The tooltip's type."
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "top"
            },
            {
              "name": "left"
            }
          ],
          "methods": [],
          "listeners": [
            {
              "name": "scroll",
              "method": "handleWindowScroll",
              "capture": false,
              "passive": true,
              "target": "window"
            },
            {
              "name": "resize",
              "method": "handleWindowScroll",
              "capture": false,
              "passive": true,
              "target": "window"
            }
          ],
          "events": [],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-TOOLTIP",
              "styleStr": null,
              "styleIdentifier": "scTooltipStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tooltip/sc-tooltip.scss",
                  "relativePath": "sc-tooltip.scss",
                  "originalComponentPath": "sc-tooltip.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "text - The tooltip text."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tooltip/sc-tooltip.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/tooltip/sc-tooltip.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": false,
          "hasLifecycle": true,
          "hasListener": true,
          "hasListenerTarget": true,
          "hasListenerTargetWindow": true,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": false,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": true,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "part",
            "class",
            "onClick",
            "onBlur",
            "onFocus",
            "onMouseOver",
            "onMouseOut",
            "ref",
            "style"
          ],
          "htmlTagNames": [
            "slot",
            "span",
            "div"
          ],
          "htmlParts": [
            "base",
            "text"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [],
          "directDependencies": [],
          "dependencies": [],
          "dependents": [
            "sc-address",
            "sc-button-group",
            "sc-cancel-dialog",
            "sc-cancel-survey",
            "sc-checkout",
            "sc-choices",
            "sc-compact-address",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-edit",
            "sc-customer-email",
            "sc-customer-firstname",
            "sc-customer-lastname",
            "sc-customer-name",
            "sc-donation-choices",
            "sc-form-components-validator",
            "sc-form-control",
            "sc-input",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-order",
            "sc-order-bumps",
            "sc-order-coupon-form",
            "sc-order-password",
            "sc-order-shipping-address",
            "sc-order-tax-id-input",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-method",
            "sc-payment-methods-list",
            "sc-price-choices",
            "sc-price-input",
            "sc-product-selected-price",
            "sc-rich-text",
            "sc-select",
            "sc-stripe-element",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-next-payment",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-tax-id-input",
            "sc-textarea",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-form-control",
            "sc-payment-method"
          ]
        }
      ],
      "entryKey": "sc-tooltip.entry"
    },
    {
      "cmps": [
        {
          "tagName": "sc-alert",
          "excludeFromCollection": false,
          "isCollectionDependency": false,
          "componentClassName": "ScAlert",
          "elementRef": "el",
          "encapsulation": "shadow",
          "shadowDelegatesFocus": false,
          "properties": [
            {
              "name": "open",
              "type": "boolean",
              "attribute": "open",
              "reflect": true,
              "mutable": true,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Indicates whether or not the alert is open. You can use this in lieu of the show/hide methods."
              },
              "internal": false
            },
            {
              "name": "title",
              "type": "string",
              "attribute": "title",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The title."
              },
              "internal": false
            },
            {
              "name": "closable",
              "type": "boolean",
              "attribute": "closable",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "false",
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Makes the alert closable."
              },
              "internal": false
            },
            {
              "name": "type",
              "type": "string",
              "attribute": "type",
              "reflect": true,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'primary'",
              "complexType": {
                "original": "'primary' | 'success' | 'info' | 'warning' | 'danger'",
                "resolved": "\"danger\" | \"info\" | \"primary\" | \"success\" | \"warning\"",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The type of alert."
              },
              "internal": false
            },
            {
              "name": "duration",
              "type": "number",
              "attribute": "duration",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "Infinity",
              "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "The length of time, in milliseconds, the alert will show before closing itself. If the user interacts with\nthe alert before it closes (e.g. moves the mouse over it), the timer will restart. Defaults to `Infinity`."
              },
              "internal": false
            },
            {
              "name": "scrollOnOpen",
              "type": "boolean",
              "attribute": "scroll-on-open",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Scroll into view."
              },
              "internal": false
            },
            {
              "name": "scrollMargin",
              "type": "string",
              "attribute": "scroll-margin",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "defaultValue": "'0px'",
              "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "Scroll margin"
              },
              "internal": false
            },
            {
              "name": "noIcon",
              "type": "boolean",
              "attribute": "no-icon",
              "reflect": false,
              "mutable": false,
              "required": false,
              "optional": false,
              "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
              },
              "docs": {
                "tags": [],
                "text": "No icon"
              },
              "internal": false
            }
          ],
          "virtualProperties": [],
          "states": [
            {
              "name": "autoHideTimeout"
            }
          ],
          "methods": [
            {
              "name": "show",
              "docs": {
                "text": "Shows the alert.",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            },
            {
              "name": "hide",
              "docs": {
                "text": "Hides the alert",
                "tags": []
              },
              "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                  "Promise": {
                    "location": "global"
                  }
                },
                "return": "Promise<void>"
              },
              "internal": false
            }
          ],
          "listeners": [],
          "events": [
            {
              "name": "scHide",
              "method": "scHide",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "When alert is hidden"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            },
            {
              "name": "scShow",
              "method": "scShow",
              "bubbles": true,
              "cancelable": true,
              "composed": true,
              "docs": {
                "tags": [],
                "text": "When alert is shown"
              },
              "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
              },
              "internal": false
            }
          ],
          "watchers": [
            {
              "propName": "open",
              "methodName": "handleOpenChange"
            }
          ],
          "styles": [
            {
              "modeName": "$",
              "styleId": "SC-ALERT",
              "styleStr": null,
              "styleIdentifier": "scAlertStyle",
              "externalStyles": [
                {
                  "absolutePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/alert/sc-alert.scss",
                  "relativePath": "sc-alert.scss",
                  "originalComponentPath": "sc-alert.scss"
                }
              ]
            }
          ],
          "legacyConnect": [],
          "legacyContext": [],
          "internal": false,
          "assetsDirs": [],
          "styleDocs": [],
          "docs": {
            "tags": [
              {
                "name": "part",
                "text": "base - The elements base wrapper."
              },
              {
                "name": "part",
                "text": "icon - The alert icon."
              },
              {
                "name": "part",
                "text": "text - The alert text."
              },
              {
                "name": "part",
                "text": "title - The alert title."
              },
              {
                "name": "part",
                "text": "message - The alert message."
              },
              {
                "name": "part",
                "text": "close - The close icon."
              }
            ],
            "text": ""
          },
          "jsFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/alert/sc-alert.js",
          "sourceFilePath": "/home/runner/work/surecart-wp/surecart-wp/packages/components/src/components/ui/alert/sc-alert.tsx",
          "sourceMapPath": null,
          "hasAttributeChangedCallbackFn": false,
          "hasComponentWillLoadFn": false,
          "hasComponentDidLoadFn": true,
          "hasComponentShouldUpdateFn": false,
          "hasComponentWillUpdateFn": false,
          "hasComponentDidUpdateFn": false,
          "hasComponentWillRenderFn": false,
          "hasComponentDidRenderFn": false,
          "hasComponentDidUnloadFn": false,
          "hasConnectedCallbackFn": false,
          "hasDisconnectedCallbackFn": false,
          "hasElement": false,
          "hasEvent": true,
          "hasLifecycle": true,
          "hasListener": false,
          "hasListenerTarget": false,
          "hasListenerTargetWindow": false,
          "hasListenerTargetDocument": false,
          "hasListenerTargetBody": false,
          "hasListenerTargetParent": false,
          "hasMember": true,
          "hasMethod": true,
          "hasMode": false,
          "hasAttribute": true,
          "hasProp": true,
          "hasPropNumber": true,
          "hasPropBoolean": true,
          "hasPropString": true,
          "hasPropMutable": true,
          "hasReflect": true,
          "hasRenderFn": true,
          "hasState": true,
          "hasStyle": true,
          "hasVdomAttribute": true,
          "hasVdomXlink": false,
          "hasVdomClass": true,
          "hasVdomFunctional": false,
          "hasVdomKey": false,
          "hasVdomListener": true,
          "hasVdomPropOrAttr": true,
          "hasVdomRef": false,
          "hasVdomRender": true,
          "hasVdomStyle": true,
          "hasVdomText": true,
          "hasWatchCallback": true,
          "isPlain": false,
          "htmlAttrNames": [
            "name",
            "style",
            "class",
            "part",
            "role",
            "aria-live",
            "aria-atomic",
            "aria-hidden",
            "hidden",
            "onMouseMove",
            "onClick",
            "x-description",
            "xmlns",
            "viewBox",
            "fill",
            "fill-rule",
            "d",
            "clip-rule"
          ],
          "htmlTagNames": [
            "sc-icon",
            "div",
            "slot",
            "span",
            "svg",
            "path"
          ],
          "htmlParts": [
            "base",
            "icon",
            "text",
            "title",
            "message",
            "close"
          ],
          "isUpdateable": true,
          "potentialCmpRefs": [
            "sc-icon"
          ],
          "directDependencies": [
            "sc-icon"
          ],
          "dependencies": [
            "sc-icon"
          ],
          "dependents": [
            "sc-cancel-dialog",
            "sc-cancel-discount",
            "sc-cancel-survey",
            "sc-cart",
            "sc-cart-form",
            "sc-charges-list",
            "sc-checkout",
            "sc-checkout-form-errors",
            "sc-checkout-mollie-payment",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-customer-details",
            "sc-customer-edit",
            "sc-dashboard-customer-details",
            "sc-dashboard-downloads-list",
            "sc-dashboard-module",
            "sc-downloads-list",
            "sc-error",
            "sc-express-payment",
            "sc-form-error-provider",
            "sc-invoices-list",
            "sc-licenses-list",
            "sc-login-form",
            "sc-login-provider",
            "sc-order",
            "sc-order-confirm-components-validator",
            "sc-order-confirm-provider",
            "sc-order-confirmation",
            "sc-order-confirmation-customer",
            "sc-order-confirmation-details",
            "sc-order-coupon-form",
            "sc-order-manual-instructions",
            "sc-orders-list",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-methods-list",
            "sc-paypal-add-method",
            "sc-price-choice",
            "sc-purchase-downloads-list",
            "sc-stripe-add-method",
            "sc-stripe-payment-request",
            "sc-subscription",
            "sc-subscription-ad-hoc-confirm",
            "sc-subscription-cancel",
            "sc-subscription-payment",
            "sc-subscription-payment-method",
            "sc-subscription-switch",
            "sc-subscriptions-list",
            "sc-upcoming-invoice",
            "sc-wordpress-password-edit",
            "sc-wordpress-user",
            "sc-wordpress-user-edit"
          ],
          "directDependents": [
            "sc-cart-form",
            "sc-checkout",
            "sc-checkout-form-errors",
            "sc-checkout-mollie-payment",
            "sc-coupon-form",
            "sc-custom-order-price-input",
            "sc-dashboard-module",
            "sc-error",
            "sc-login-form",
            "sc-login-provider",
            "sc-order-confirm-provider",
            "sc-order-confirmation",
            "sc-order-manual-instructions",
            "sc-password-nag",
            "sc-payment",
            "sc-payment-methods-list",
            "sc-paypal-add-method",
            "sc-price-choice",
            "sc-stripe-add-method",
            "sc-stripe-payment-request",
            "sc-subscription-switch",
            "sc-upcoming-invoice"
          ]
        }
      ],
      "entryKey": "sc-alert.entry"
    }
  ],
  "componentGraph": {
    "sc-sc-address": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-9b6c2663.js",
      "p-121438f5.js"
    ],
    "sc-sc-alert": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-avatar": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-badge-notice": [
      "p-dfbe004d.js"
    ],
    "sc-sc-block-ui": [
      "p-dfbe004d.js"
    ],
    "sc-sc-breadcrumb": [
      "p-dfbe004d.js"
    ],
    "sc-sc-breadcrumbs": [
      "p-dfbe004d.js"
    ],
    "sc-sc-button": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-button-group": [
      "p-dfbe004d.js"
    ],
    "sc-sc-cancel-dialog": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-121438f5.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-cancel-discount": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-1c2e2695.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-cancel-survey": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-1c2e2695.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-card": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-cart": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c7dd942d.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-57d82274.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-35c4916d.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-cart-form": [
      "p-dfbe004d.js",
      "p-c7dd942d.js",
      "p-afcbd440.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-57d82274.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-35c4916d.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-1c2e2695.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-cart-form-submit": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-cart-header": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-cart-icon": [
      "p-dfbe004d.js",
      "p-ec9ca067.js",
      "p-febfc8ad.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-cart-loader": [
      "p-dfbe004d.js",
      "p-10aa7556.js",
      "p-57d82274.js",
      "p-35c4916d.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-cart-session-provider": [
      "p-dfbe004d.js",
      "p-ec9ca067.js",
      "p-febfc8ad.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-cart-submit": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-cc-logo": [
      "p-dfbe004d.js"
    ],
    "sc-sc-charges-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-checkbox": [
      "p-dfbe004d.js",
      "p-f1a6f9ec.js",
      "p-d556eec7.js"
    ],
    "sc-sc-checkout": [
      "p-dfbe004d.js",
      "p-10aa7556.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-75c9e181.js",
      "p-c7dd942d.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-checkout-form-errors": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-checkout-mollie-payment": [
      "p-dfbe004d.js",
      "p-ea78c070.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-10aa7556.js",
      "p-f56cd460.js",
      "p-30ecac60.js",
      "p-d8453138.js",
      "p-6f48b449.js",
      "p-1c2e2695.js",
      "p-35c4916d.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-checkout-unsaved-changes-warning": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-choice": [
      "p-dfbe004d.js",
      "p-f1a6f9ec.js",
      "p-d556eec7.js"
    ],
    "sc-sc-choice-container": [
      "p-dfbe004d.js",
      "p-f1a6f9ec.js",
      "p-d556eec7.js"
    ],
    "sc-sc-choices": [
      "p-dfbe004d.js"
    ],
    "sc-sc-column": [
      "p-dfbe004d.js"
    ],
    "sc-sc-columns": [
      "p-dfbe004d.js"
    ],
    "sc-sc-compact-address": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-ec9ca067.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-conditional-form": [
      "p-dfbe004d.js",
      "p-ea78c070.js",
      "p-f56cd460.js",
      "p-35c4916d.js",
      "p-10aa7556.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-consumer": [
      "p-dfbe004d.js"
    ],
    "sc-sc-coupon-form": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-468023a1.js"
    ],
    "sc-sc-custom-order-price-input": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-d63f2554.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-customer-details": [
      "p-dfbe004d.js",
      "p-112455b1.js",
      "p-9cc61896.js",
      "p-121438f5.js"
    ],
    "sc-sc-customer-edit": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-customer-email": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-customer-firstname": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-customer-lastname": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-customer-name": [
      "p-dfbe004d.js",
      "p-ec9ca067.js",
      "p-d63f2554.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-dashboard-customer-details": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-dashboard-downloads-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-dashboard-module": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-dialog": [
      "p-dfbe004d.js",
      "p-febfc8ad.js"
    ],
    "sc-sc-divider": [
      "p-dfbe004d.js"
    ],
    "sc-sc-donation-choices": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-downloads-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-drawer": [
      "p-dfbe004d.js",
      "p-ec9ca067.js",
      "p-febfc8ad.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-dropdown": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-empty": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-error": [
      "p-dfbe004d.js",
      "p-ec9ca067.js",
      "p-febfc8ad.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-express-payment": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-flex": [
      "p-dfbe004d.js"
    ],
    "sc-sc-form": [
      "p-dfbe004d.js"
    ],
    "sc-sc-form-components-validator": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-form-control": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-d556eec7.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-form-error-provider": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-form-row": [
      "p-dfbe004d.js"
    ],
    "sc-sc-form-state-provider": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-format-bytes": [
      "p-dfbe004d.js"
    ],
    "sc-sc-format-date": [
      "p-dfbe004d.js"
    ],
    "sc-sc-format-interval": [
      "p-dfbe004d.js",
      "p-468023a1.js"
    ],
    "sc-sc-format-number": [
      "p-dfbe004d.js",
      "p-df8994cd.js"
    ],
    "sc-sc-heading": [
      "p-dfbe004d.js"
    ],
    "sc-sc-icon": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-input": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-d556eec7.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-invoices-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-licenses-list": [
      "p-dfbe004d.js"
    ],
    "sc-sc-line-item": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-line-item-bump": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-line-item-tax": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-ec9ca067.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-line-item-total": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-line-items": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js"
    ],
    "sc-sc-line-items-provider": [
      "p-dfbe004d.js",
      "p-afcbd440.js"
    ],
    "sc-sc-login-form": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-login-provider": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-menu": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-menu-divider": [
      "p-dfbe004d.js"
    ],
    "sc-sc-menu-item": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-menu-label": [
      "p-dfbe004d.js"
    ],
    "sc-sc-mollie-add-method": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-order": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-468023a1.js",
      "p-121438f5.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-order-bump": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-ec9ca067.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-order-bumps": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-ec9ca067.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-order-confirm-components-validator": [
      "p-dfbe004d.js"
    ],
    "sc-sc-order-confirm-provider": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-order-confirmation": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c7dd942d.js",
      "p-4d73f82a.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-order-confirmation-customer": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-order-confirmation-details": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-order-confirmation-line-items": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-121438f5.js"
    ],
    "sc-sc-order-confirmation-totals": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-121438f5.js"
    ],
    "sc-sc-order-coupon-form": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-d556eec7.js"
    ],
    "sc-sc-order-detail": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-order-manual-instructions": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-order-password": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-order-shipping-address": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-ec9ca067.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-order-status-badge": [
      "p-dfbe004d.js"
    ],
    "sc-sc-order-submit": [
      "p-dfbe004d.js",
      "p-f56cd460.js",
      "p-0bb69f38.js",
      "p-ea78c070.js",
      "p-d63f2554.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-order-summary": [
      "p-dfbe004d.js",
      "p-10aa7556.js",
      "p-a447ac09.js",
      "p-febfc8ad.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-75c9e181.js"
    ],
    "sc-sc-order-tax-id-input": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-ec9ca067.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-orders-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-pagination": [
      "p-dfbe004d.js"
    ],
    "sc-sc-password-nag": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-payment": [
      "p-dfbe004d.js",
      "p-10aa7556.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-ea78c070.js",
      "p-6f48b449.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-payment-method": [
      "p-dfbe004d.js"
    ],
    "sc-sc-payment-method-choice": [
      "p-dfbe004d.js",
      "p-ea78c070.js",
      "p-35c4916d.js"
    ],
    "sc-sc-payment-methods-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-payment-selected": [
      "p-dfbe004d.js",
      "p-ea78c070.js",
      "p-35c4916d.js"
    ],
    "sc-sc-paypal-add-method": [
      "p-dfbe004d.js",
      "p-d83e58e6.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-paypal-buttons": [
      "p-dfbe004d.js",
      "p-d83e58e6.js",
      "p-d8453138.js",
      "p-afcbd440.js",
      "p-ec9ca067.js",
      "p-1c2e2695.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-premium-tag": [
      "p-dfbe004d.js"
    ],
    "sc-sc-price-choice": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-afcbd440.js",
      "p-468023a1.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-price-choices": [
      "p-dfbe004d.js",
      "p-d63f2554.js",
      "p-afcbd440.js"
    ],
    "sc-sc-price-input": [
      "p-dfbe004d.js",
      "p-468023a1.js",
      "p-f1a6f9ec.js",
      "p-df8994cd.js"
    ],
    "sc-sc-price-range": [
      "p-dfbe004d.js"
    ],
    "sc-sc-product-line-item": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-product-selected-price": [
      "p-dfbe004d.js",
      "p-468023a1.js",
      "p-f56cd460.js",
      "p-a447ac09.js",
      "p-10aa7556.js",
      "p-75c9e181.js",
      "p-35c4916d.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-prose": [
      "p-dfbe004d.js"
    ],
    "sc-sc-provider": [
      "p-dfbe004d.js"
    ],
    "sc-sc-purchase-downloads-list": [
      "p-dfbe004d.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-quantity-select": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-radio": [
      "p-dfbe004d.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-radio-group": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-rich-text": [
      "p-dfbe004d.js"
    ],
    "sc-sc-secure-notice": [
      "p-dfbe004d.js",
      "p-d83e58e6.js",
      "p-d8453138.js",
      "p-afcbd440.js",
      "p-ec9ca067.js",
      "p-1c2e2695.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-select": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-9b6c2663.js",
      "p-121438f5.js"
    ],
    "sc-sc-session-provider": [
      "p-dfbe004d.js",
      "p-75c9e181.js",
      "p-d8453138.js",
      "p-ec9ca067.js",
      "p-10aa7556.js",
      "p-30ecac60.js",
      "p-1c2e2695.js",
      "p-ea78c070.js",
      "p-f1a6f9ec.js",
      "p-4d73f82a.js",
      "p-35c4916d.js",
      "p-47d251a3.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js"
    ],
    "sc-sc-skeleton": [
      "p-dfbe004d.js"
    ],
    "sc-sc-spacing": [
      "p-dfbe004d.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-spinner": [
      "p-dfbe004d.js",
      "p-d556eec7.js",
      "p-a0a91ecb.js"
    ],
    "sc-sc-stacked-list": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-stacked-list-row": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-stripe-add-method": [
      "p-dfbe004d.js",
      "p-f0bb2283.js",
      "p-d8453138.js",
      "p-112455b1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-stripe-element": [
      "p-dfbe004d.js",
      "p-f0bb2283.js",
      "p-d63f2554.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-112455b1.js",
      "p-35c4916d.js",
      "p-9b6c2663.js",
      "p-10aa7556.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-stripe-payment-element": [
      "p-dfbe004d.js",
      "p-f0bb2283.js",
      "p-d63f2554.js",
      "p-ea78c070.js",
      "p-1c2e2695.js",
      "p-112455b1.js",
      "p-35c4916d.js"
    ],
    "sc-sc-stripe-payment-request": [
      "p-dfbe004d.js",
      "p-f0bb2283.js",
      "p-d63f2554.js",
      "p-ec9ca067.js",
      "p-112455b1.js",
      "p-10aa7556.js",
      "p-35c4916d.js",
      "p-1c2e2695.js",
      "p-47d251a3.js",
      "p-ea78c070.js",
      "p-0bb69f38.js",
      "p-9b6c2663.js",
      "p-d8453138.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-subscription": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js",
      "p-4d73f82a.js"
    ],
    "sc-sc-subscription-ad-hoc-confirm": [
      "p-dfbe004d.js",
      "p-468023a1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscription-cancel": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-1c2e2695.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-subscription-details": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscription-next-payment": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-121438f5.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscription-payment": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscription-payment-method": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscription-status-badge": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscription-switch": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-468023a1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-subscriptions-list": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-switch": [
      "p-dfbe004d.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-tab": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-tab-group": [
      "p-dfbe004d.js"
    ],
    "sc-sc-tab-panel": [
      "p-dfbe004d.js"
    ],
    "sc-sc-table": [
      "p-dfbe004d.js"
    ],
    "sc-sc-table-cell": [
      "p-dfbe004d.js"
    ],
    "sc-sc-table-head": [
      "p-dfbe004d.js"
    ],
    "sc-sc-table-row": [
      "p-dfbe004d.js"
    ],
    "sc-sc-tag": [
      "p-dfbe004d.js"
    ],
    "sc-sc-tax-id-input": [
      "p-dfbe004d.js",
      "p-9cc61896.js",
      "p-f1a6f9ec.js",
      "p-9b6c2663.js",
      "p-121438f5.js"
    ],
    "sc-sc-text": [
      "p-dfbe004d.js",
      "p-d556eec7.js"
    ],
    "sc-sc-textarea": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-468023a1.js",
      "p-1c2e2695.js",
      "p-f1a6f9ec.js"
    ],
    "sc-sc-toggle": [
      "p-dfbe004d.js",
      "p-febfc8ad.js",
      "p-d556eec7.js"
    ],
    "sc-sc-toggles": [
      "p-dfbe004d.js"
    ],
    "sc-sc-tooltip": [
      "p-dfbe004d.js"
    ],
    "sc-sc-total": [
      "p-dfbe004d.js",
      "p-d63f2554.js"
    ],
    "sc-sc-upcoming-invoice": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-c2833cb1.js",
      "p-468023a1.js",
      "p-121438f5.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-upgrade-required": [
      "p-dfbe004d.js"
    ],
    "sc-sc-wordpress-password-edit": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-wordpress-user": [
      "p-dfbe004d.js",
      "p-1c2e2695.js"
    ],
    "sc-sc-wordpress-user-edit": [
      "p-dfbe004d.js",
      "p-d8453138.js",
      "p-1c2e2695.js"
    ]
  },
  "sourceGraph": {
    "./src/components/context/consumer/sc-consumer.tsx": [],
    "./src/components/context/provider/sc-provider.tsx": [],
    "./src/components/context/utils/createContext.tsx": [],
    "./src/components/controllers/cart/cart-form-submit/sc-cart-form-submit.tsx": [],
    "./src/components/controllers/cart/cart-header/sc-cart-header.tsx": [],
    "./src/components/controllers/cart/cart-submit/sc-cart-submit.tsx": [],
    "./src/components/controllers/cart/sc-cart-form/sc-cart-form.tsx": [
      "./src/functions/line-items",
      "./src/services/session"
    ],
    "./src/components/controllers/cart/sc-cart-loader/sc-cart-loader.tsx": [],
    "./src/components/controllers/cart/sc-cart/sc-cart.tsx": [
      "./src/functions/fetch",
      "./src/services/session"
    ],
    "./src/components/controllers/checkout-form/checkout-form-errors/sc-checkout-form-errors.tsx": [],
    "./src/components/controllers/checkout-form/checkout/functions.ts": [],
    "./src/components/controllers/checkout-form/checkout/helpers/session/index.ts": [],
    "./src/components/controllers/checkout-form/checkout/sc-checkout-currency.stories.ts": [],
    "./src/components/controllers/checkout-form/checkout/sc-checkout-expired.stories.ts": [],
    "./src/components/controllers/checkout-form/checkout/sc-checkout.stories.ts": [],
    "./src/components/controllers/checkout-form/checkout/sc-checkout.tsx": [],
    "./src/components/controllers/checkout-form/checkout/state.ts": [],
    "./src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.stories.ts": [],
    "./src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/checkout-form/customer-email/sc-customer-email.tsx": [
      "./src/services/session"
    ],
    "./src/components/controllers/checkout-form/customer-firstname/sc-customer-firstname.tsx": [],
    "./src/components/controllers/checkout-form/customer-lastname/sc-customer-lastname.tsx": [],
    "./src/components/controllers/checkout-form/customer-name/sc-customer-name.tsx": [
      "./src/services/session"
    ],
    "./src/components/controllers/checkout-form/donation-choices/sc-donation-choices.stories.ts": [],
    "./src/components/controllers/checkout-form/donation-choices/sc-donation-choices.tsx": [],
    "./src/components/controllers/checkout-form/express-payment/sc-express-payment.tsx": [],
    "./src/components/controllers/checkout-form/line-item-tax/sc-line-item-tax.tsx": [],
    "./src/components/controllers/checkout-form/line-item-total/sc-line-item-total.tsx": [],
    "./src/components/controllers/checkout-form/line-items/sc-line-items.tsx": [
      "./src/functions/line-items",
      "./src/functions/price"
    ],
    "./src/components/controllers/checkout-form/order-coupon-form/sc-order-coupon-form.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/controllers/checkout-form/order-password/sc-order-password.tsx": [],
    "./src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.stories.ts": [],
    "./src/components/controllers/checkout-form/order-shipping-address/sc-order-shipping-address.tsx": [
      "./src/services/session"
    ],
    "./src/components/controllers/checkout-form/order-submit/sc-order-submit.stories.ts": [],
    "./src/components/controllers/checkout-form/order-submit/sc-order-submit.tsx": [
      "./src/functions/processor"
    ],
    "./src/components/controllers/checkout-form/order-summary/sc-order-summary.stories.tsx": [],
    "./src/components/controllers/checkout-form/order-summary/sc-order-summary.tsx": [
      "./src/functions/animate",
      "./src/functions/animation-registry"
    ],
    "./src/components/controllers/checkout-form/order-tax-id-input/sc-order-tax-id-input.tsx": [
      "./src/services/session"
    ],
    "./src/components/controllers/checkout-form/payment/ManualPaymentMethods.tsx": [],
    "./src/components/controllers/checkout-form/payment/sc-payment.tsx": [
      "./src/components/controllers/checkout-form/payment/ManualPaymentMethods"
    ],
    "./src/components/controllers/checkout-form/price-choice/sc-price-choice.tsx": [
      "./src/functions/line-items",
      "./src/functions/price",
      "./src/services/fetch"
    ],
    "./src/components/controllers/checkout-form/price-choices/functions.ts": [],
    "./src/components/controllers/checkout-form/price-choices/sc-price-choices.tsx": [
      "./src/functions/line-items"
    ],
    "./src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.tsx": [
      "./src/components/controllers/checkout-form/payment/ManualPaymentMethods",
      "./src/functions/fetch"
    ],
    "./src/components/controllers/checkout-form/sc-conditional-form/conditional-functions.ts": [],
    "./src/components/controllers/checkout-form/sc-conditional-form/sc-conditional-form.tsx": [
      "./src/components/controllers/checkout-form/sc-conditional-form/conditional-functions"
    ],
    "./src/components/controllers/checkout-form/sc-line-item-bump/sc-line-item-bump.tsx": [],
    "./src/components/controllers/checkout-form/sc-order-bump/sc-order-bump.tsx": [
      "./src/functions/line-items",
      "./src/functions/price"
    ],
    "./src/components/controllers/checkout-form/sc-order-bumps/sc-order-bumps.tsx": [],
    "./src/components/controllers/checkout-form/sc-product-selected-price/sc-product-selected-price.tsx": [
      "./src/functions/price"
    ],
    "./src/components/controllers/checkout-form/total/sc-total.tsx": [],
    "./src/components/controllers/confirmation/manual-instructions/sc-order-manual-instructions.tsx": [],
    "./src/components/controllers/confirmation/order-confirmation-customer/sc-order-confirmation-customer.tsx": [],
    "./src/components/controllers/confirmation/order-confirmation-details/sc-order-confirmation-details.tsx": [],
    "./src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.tsx": [
      "./src/functions/line-items",
      "./src/functions/price"
    ],
    "./src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.tsx": [
      "./src/functions/price",
      "./src/functions/tax"
    ],
    "./src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/confirmation/order-detail/sc-order-detail.tsx": [],
    "./src/components/controllers/dashboard/charges-list/sc-charges-list.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/customer-details/sc-dashboard-customer-details.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/customer-edit/sc-customer-edit.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.stories.ts": [],
    "./src/components/controllers/dashboard/dashboard-downloads-list/sc-dashboard-downloads-list.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/invoices-list/sc-invoices-list.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/order/sc-order.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy",
      "./src/functions/price",
      "./src/functions/tax"
    ],
    "./src/components/controllers/dashboard/orders-list/sc-orders-list.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/sc-cancel-dialog/sc-cancel-dialog.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/sc-cancel-discount/functions.ts": [],
    "./src/components/controllers/dashboard/sc-cancel-discount/sc-cancel-discount.tsx": [
      "./src/components/controllers/dashboard/sc-cancel-discount/functions",
      "./src/functions/fetch",
      "./src/functions/price"
    ],
    "./src/components/controllers/dashboard/sc-cancel-survey/sc-cancel-survey.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/sc-downloads-list/sc-downloads-list.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/sc-licenses-list/sc-licenses-list.tsx": [],
    "./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/sc-subscription-payment-method/sc-subscription-payment-method.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/subscription-ad-hoc-confirm/sc-subscription-ad-hoc-confirm.tsx": [
      "./src/functions/price"
    ],
    "./src/components/controllers/dashboard/subscription-cancel/sc-subscription-cancel.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/subscription-details/sc-subscription-details.tsx": [
      "./src/functions/fetch",
      "./src/functions/price"
    ],
    "./src/components/controllers/dashboard/subscription-details/sc-subscription-next-payment.tsx": [
      "./src/functions/fetch",
      "./src/functions/price",
      "./src/functions/tax"
    ],
    "./src/components/controllers/dashboard/subscription-payment/sc-subscription-payment.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/subscription-switch/sc-subscription-switch.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy",
      "./src/functions/price"
    ],
    "./src/components/controllers/dashboard/subscription/sc-subscription.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/subscriptions-list/sc-subscriptions-list.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy"
    ],
    "./src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.stories.ts": [],
    "./src/components/controllers/dashboard/upcoming-invoice/sc-upcoming-invoice.tsx": [
      "./src/functions/fetch",
      "./src/functions/lazy",
      "./src/functions/price",
      "./src/functions/tax"
    ],
    "./src/components/controllers/dashboard/wordpress-password-edit/sc-wordpress-password-edit.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/wordpress-user-edit/sc-wordpress-user-edit.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/controllers/dashboard/wordpress-user/sc-wordpress-user.tsx": [],
    "./src/components/controllers/login/sc-login-form.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/processors/sc-payment-method-choice/sc-payment-method-choice.tsx": [],
    "./src/components/providers/cart-session-provider/sc-cart-session-provider.tsx": [
      "./src/services/session"
    ],
    "./src/components/providers/checkout-unsaved-changes-warning/sc-checkout-unsaved-changes-warning.tsx": [],
    "./src/components/providers/form-components-validator/sc-form-components-validator.tsx": [],
    "./src/components/providers/form-error-provider/sc-form-error-provider.tsx": [],
    "./src/components/providers/form-state-provider/checkout-machine.ts": [],
    "./src/components/providers/form-state-provider/sc-form-state-provider.tsx": [
      "./src/components/providers/form-state-provider/checkout-machine"
    ],
    "./src/components/providers/line-items-provider/sc-line-items-provider.tsx": [
      "./src/functions/line-items"
    ],
    "./src/components/providers/order-confirm-provider/sc-order-confirm-provider.tsx": [
      "./src/functions/fetch",
      "./src/services/session"
    ],
    "./src/components/providers/sc-login-provider/sc-login-provider.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/providers/sc-order-confirm-components-validator/sc-order-confirm-components-validator.tsx": [],
    "./src/components/providers/session-provider/helpers/session/index.ts": [],
    "./src/components/providers/session-provider/sc-session-provider.tsx": [
      "./src/functions/form-data",
      "./src/services/session"
    ],
    "./src/components/themes.stories.ts": [],
    "./src/components/ui/address/sc-address.stories.ts": [],
    "./src/components/ui/address/sc-address.tsx": [
      "./src/functions/address",
      "./src/functions/form-data"
    ],
    "./src/components/ui/alert/sc-alert.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/badge-notice/sc-badge-notice.tsx": [],
    "./src/components/ui/block-ui/sc-block-ui.tsx": [],
    "./src/components/ui/breadcrumb/sc-breadcrumb.tsx": [],
    "./src/components/ui/breadcrumbs/sc-breadcrumbs.tsx": [],
    "./src/components/ui/button/sc-button.stories.ts": [],
    "./src/components/ui/button/sc-button.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/card/sc-card.tsx": [],
    "./src/components/ui/cc-logo/sc-cc-logo.tsx": [],
    "./src/components/ui/checkbox/sc-checkbox.tsx": [
      "./src/functions/form-data",
      "./src/functions/page-align"
    ],
    "./src/components/ui/choice-container/sc-choice-container.tsx": [
      "./src/functions/form-data",
      "./src/functions/page-align"
    ],
    "./src/components/ui/choice/sc-choice.tsx": [
      "./src/functions/form-data",
      "./src/functions/page-align"
    ],
    "./src/components/ui/choices/sc-choices.stories.ts": [],
    "./src/components/ui/choices/sc-choices.tsx": [],
    "./src/components/ui/column/sc-column.tsx": [],
    "./src/components/ui/columns/sc-columns.tsx": [],
    "./src/components/ui/coupon-form/sc-coupon-form.tsx": [
      "./src/functions/page-align",
      "./src/functions/price"
    ],
    "./src/components/ui/coupon-form/sc-coupon.stories.ts": [],
    "./src/components/ui/customer-details/sc-customer-details.tsx": [
      "./src/functions/address",
      "./src/functions/tax"
    ],
    "./src/components/ui/dashboard-module/sc-dashboard-module.tsx": [],
    "./src/components/ui/divider/sc-divider.tsx": [],
    "./src/components/ui/dropdown/dropdown.tsx": [],
    "./src/components/ui/empty/sc-empty.tsx": [],
    "./src/components/ui/error/sc-error.tsx": [],
    "./src/components/ui/flex/sc-flex.tsx": [],
    "./src/components/ui/form-control/sc-form-control.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/form-row/sc-form-row.tsx": [],
    "./src/components/ui/form/sc-form.tsx": [
      "./src/functions/form"
    ],
    "./src/components/ui/heading/sc-heading.tsx": [],
    "./src/components/ui/icon/library.ts": [],
    "./src/components/ui/icon/register.ts": [
      "./src/components/ui/icon/library"
    ],
    "./src/components/ui/icon/request.ts": [],
    "./src/components/ui/icon/sc-icon.tsx": [
      "./src/components/ui/icon/library",
      "./src/components/ui/icon/request"
    ],
    "./src/components/ui/input/sc-input.tsx": [
      "./src/functions/form-data"
    ],
    "./src/components/ui/line-item/sc-line-item.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/menu-divider/sc-menu-divider.tsx": [],
    "./src/components/ui/menu-item/sc-menu-item.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/menu-label/sc-menu-label.tsx": [],
    "./src/components/ui/menu/sc-menu.tsx": [],
    "./src/components/ui/order-status-badge/sc-order-status-badge.tsx": [],
    "./src/components/ui/pagination/sc-pagination.tsx": [],
    "./src/components/ui/payment-selected/sc-payment-selected.tsx": [],
    "./src/components/ui/paypal-buttons/functions.ts": [],
    "./src/components/ui/paypal-buttons/paypal-buttons.stories.ts": [],
    "./src/components/ui/paypal-buttons/paypal-buttons.tsx": [
      "./src/components/ui/paypal-buttons/functions",
      "./src/functions/fetch",
      "./src/functions/line-items",
      "./src/services/session"
    ],
    "./src/components/ui/price-input/sc-price-input.tsx": [
      "./src/components/util/format-number/functions/utils",
      "./src/functions/form-data",
      "./src/functions/price"
    ],
    "./src/components/ui/product-line-item/sc-product-line-item.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/purchase-downloads-list/sc-purchase-downloads-list.tsx": [],
    "./src/components/ui/quantity-select/sc-quantity-select.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/radio-group/sc-radio-group.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/radio/sc-radio.tsx": [
      "./src/functions/form-data"
    ],
    "./src/components/ui/rich-text/sc-rich-text.tsx": [],
    "./src/components/ui/sc-avatar/sc-avatar.tsx": [],
    "./src/components/ui/sc-button-group/sc-button-group.stories.ts": [],
    "./src/components/ui/sc-button-group/sc-button-group.tsx": [],
    "./src/components/ui/sc-cart-icon/sc-cart-icon.stories.ts": [],
    "./src/components/ui/sc-cart-icon/sc-cart-icon.tsx": [],
    "./src/components/ui/sc-compact-address/sc-compact-address.tsx": [
      "./src/functions/address",
      "./src/functions/form-data"
    ],
    "./src/components/ui/sc-dialog/sc-dialog.tsx": [
      "./src/functions/animate",
      "./src/functions/animation-registry",
      "./src/functions/scroll"
    ],
    "./src/components/ui/sc-drawer/sc-drawer.tsx": [
      "./src/functions/animate",
      "./src/functions/animation-registry"
    ],
    "./src/components/ui/sc-mollie-add-method/sc-mollie-add-method.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/ui/sc-payment-method/sc-payment-method.tsx": [],
    "./src/components/ui/sc-paypal-add-method/sc-paypal-add-method.tsx": [
      "./src/components/ui/paypal-buttons/functions",
      "./src/functions/fetch"
    ],
    "./src/components/ui/sc-premium-tag/sc-premium-tag.tsx": [],
    "./src/components/ui/sc-price-range/sc-price-range.tsx": [],
    "./src/components/ui/sc-prose/sc-prose.tsx": [],
    "./src/components/ui/sc-stripe-add-method/sc-stripe-add-method.tsx": [
      "./src/functions/fetch"
    ],
    "./src/components/ui/sc-textarea/sc-textarea.tsx": [
      "./src/functions/form-data"
    ],
    "./src/components/ui/sc-toggle/sc-toggle.stories.ts": [],
    "./src/components/ui/sc-toggle/sc-toggle.tsx": [
      "./src/functions/animate",
      "./src/functions/animation-registry",
      "./src/functions/page-align"
    ],
    "./src/components/ui/sc-toggles/sc-toggles.tsx": [],
    "./src/components/ui/sc-upgrade-required/sc-upgrade-required.tsx": [],
    "./src/components/ui/secure-notice/sc-secure-notice.tsx": [],
    "./src/components/ui/select/sc-select.tsx": [
      "./src/functions/form-data",
      "./src/functions/util"
    ],
    "./src/components/ui/skeleton/sc-skeleton.tsx": [],
    "./src/components/ui/spacing/sc-spacing.tsx": [],
    "./src/components/ui/spinner/sc-spinner.tsx": [],
    "./src/components/ui/stacked-list-row/sc-stacked-list-row.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/stacked-list/sc-stacked-list.tsx": [],
    "./src/components/ui/stripe-element/sc-stripe-element.tsx": [],
    "./src/components/ui/stripe-payment-element/sc-stripe-payment-element.tsx": [],
    "./src/components/ui/stripe-payment-request/sc-stripe-payment-request.tsx": [
      "./src/services/session"
    ],
    "./src/components/ui/subscription-status-badge/sc-subscription-status-badge.tsx": [],
    "./src/components/ui/switch/sc-switch.tsx": [
      "./src/functions/form-data"
    ],
    "./src/components/ui/tab-group/sc-tab-group.tsx": [],
    "./src/components/ui/tab-panel/sc-tab-panel.tsx": [],
    "./src/components/ui/tab/sc-tab.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/table-cell/sc-table-cell.tsx": [],
    "./src/components/ui/table-head/sc-table-head.tsx": [],
    "./src/components/ui/table-row/sc-table-row.tsx": [],
    "./src/components/ui/table/sc-table.tsx": [],
    "./src/components/ui/tag/sc-tag.tsx": [],
    "./src/components/ui/tax-id-input/sc-tax-id-input.tsx": [
      "./src/functions/tax"
    ],
    "./src/components/ui/text/sc-text.tsx": [
      "./src/functions/page-align"
    ],
    "./src/components/ui/tooltip/sc-tooltip.tsx": [],
    "./src/components/util/format-bytes/sc-format-bytes.tsx": [],
    "./src/components/util/format-date/sc-format-date.tsx": [],
    "./src/components/util/format-interval/sc-format-interval.tsx": [
      "./src/functions/price"
    ],
    "./src/components/util/format-number/functions/utils.ts": [],
    "./src/components/util/format-number/sc-format-number.tsx": [
      "./src/components/util/format-number/functions/utils"
    ],
    "./src/functions/address.ts": [
      "./src/functions/countries.json"
    ],
    "./src/functions/animate.ts": [],
    "./src/functions/animation-registry.ts": [],
    "./src/functions/click.ts": [],
    "./src/functions/fetch.ts": [],
    "./src/functions/form-data.ts": [],
    "./src/functions/form.ts": [],
    "./src/functions/icon-library.ts": [],
    "./src/functions/lazy.ts": [],
    "./src/functions/line-items/index.ts": [],
    "./src/functions/page-align.ts": [],
    "./src/functions/price.ts": [],
    "./src/functions/processor.ts": [],
    "./src/functions/scroll.ts": [],
    "./src/functions/slot.ts": [],
    "./src/functions/tax.ts": [],
    "./src/functions/total.ts": [],
    "./src/functions/util.ts": [],
    "./src/global/global.ts": [
      "./src/components/ui/icon/register"
    ],
    "./src/index.ts": [],
    "./src/services/fetch/index.ts": [
      "../admin/schema",
      "./src/functions/fetch"
    ],
    "./src/services/price/index.ts": [
      "./src/functions/fetch"
    ],
    "./src/services/product/index.ts": [],
    "./src/services/session/index.ts": [
      "./src/functions/fetch"
    ],
    "./src/store/buy/index.ts": [],
    "./src/store/buy/store.ts": [],
    "./src/store/checkout/functions.ts": [
      "./src/store/checkout/store"
    ],
    "./src/store/checkout/getters.ts": [
      "./src/store/checkout/store",
      "./src/store/checkouts"
    ],
    "./src/store/checkout/index.ts": [
      "./src/store/checkout/watchers"
    ],
    "./src/store/checkout/mutations.ts": [
      "./src/store/checkout/store",
      "./src/store/checkouts"
    ],
    "./src/store/checkout/store.ts": [],
    "./src/store/checkout/watchers.ts": [
      "./src/store/checkout/store",
      "./src/store/checkouts"
    ],
    "./src/store/checkouts.ts": [
      "./src/store/local"
    ],
    "./src/store/form/getters.ts": [
      "./src/store/form/store"
    ],
    "./src/store/form/index.ts": [],
    "./src/store/form/mutations.ts": [
      "./src/store/form/watchers"
    ],
    "./src/store/form/store.ts": [
      "./src/components/providers/form-state-provider/checkout-machine"
    ],
    "./src/store/form/watchers.ts": [
      "./src/components/providers/form-state-provider/checkout-machine",
      "./src/store/form/store"
    ],
    "./src/store/local/index.ts": [],
    "./src/store/local/storage.ts": [],
    "./src/store/local/types.ts": [],
    "./src/store/processors/getters.ts": [
      "./src/functions/util",
      "./src/store/processors/store"
    ],
    "./src/store/processors/index.ts": [
      "./src/store/processors/getters",
      "./src/store/processors/watchers"
    ],
    "./src/store/processors/store.ts": [],
    "./src/store/processors/watchers.ts": [
      "./src/store/checkout",
      "./src/store/processors/getters",
      "./src/store/processors/store",
      "./src/store/selected-processor"
    ],
    "./src/store/selected-processor/index.ts": [
      "./src/store/selected-processor/watchers"
    ],
    "./src/store/selected-processor/store.ts": [],
    "./src/store/selected-processor/watchers.ts": [
      "./src/store/selected-processor/store"
    ],
    "./src/store/ui.ts": [],
    "./src/testing/index.ts": [],
    "./src/types.ts": []
  },
  "collections": []
}